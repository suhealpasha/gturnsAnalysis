{"version":3,"sources":["Containers/Home/UserInfoBar/UserInfoBar.js","Containers/Home/HeaderBar/HeaderBar.js","Containers/Home/Dashboard/Dashboard.js","Containers/Home/Fundamental Analysis/FundamentalAnalysis.js","Components/AddtoHoldings/AddtoHoldings.js","Components/Snackbar/Snackbar.js","Components/DeleteValidation/DeleteValidation.js","Components/DeleteValidation/deleteStockFunction.js","Components/ExecutionDialogBox/ExecutionDialogbox.js","Components/ExecutionDialogBox/addExecutionFunction.js","Containers/Home/ListFunctions.js","Components/SetNotificationDialog/SetNotification.js","Components/SetNotificationDialog/addMessageFunction.js","Components/DialogBox/addStockFunction.js","Components/DialogBox/Dialogbox.js","Components/NavigationBar/NavigationBar.js","Containers/Home/TechnicalAnalysis/TechnicalAnalysis.js","Containers/Home/Analysis Selector/AnalysisSelector.js","Containers/Home/Timer/Timer.js","Components/SellDialogBox/SellExecutionFunction.js","Components/SellDialogBox/SellDialogbox.js","Containers/Home/Holdings/Holdings.js","Containers/Home/Observations/Observation.js","Containers/Home/Executions/Executions.js","store/actions.js","Containers/Home/SellExecutions/SellExecutions.js","Components/ExecutionListBox/ExecutionListBox.js","Components/ExecutionListBox/addStockFunction.js","Containers/Home/ExecutionsList/ExecutionsList.js","Containers/Home/ExecutionsSellList/ExecutionsSellList.js","Containers/Home/TradeLogs/TradeLogs.js","Containers/Home/Home.js","Containers/Home/GTurnsPortfolio/GTurnsPortfolio.js","Containers/Welcome/Welcome.js","Containers/Login/Login.js","store/reducer.js","App.js","serviceWorker.js","index.js","Assets/Tone/WhatsApp Audio 2019-11-12 at 9.22.30 PM.mpeg"],"names":["UserInfoBar","props","subscribe","axios","get","headers","then","res","console","log","state","className","style","fontSize","padding","letterSpacing","onClick","history","push","React","Component","HeaderBar","updateLTPChange","value","setState","data","updateindiciesData","indiciesData","bankNifty","this","holdingsData","prevProps","prevState","indicies","indStyle","Object","values","map","i","ind","parseFloat","pChange","color","marginLeft","marginRight","fontWeight","name","lastPrice","arrow","totalChage","length","class","location","pathname","display","width","textAlign","alignItems","float","toFixed","Dashboard","FundamentalAnalysis","Addtoobservation","Dialog","open","openObservation","onClose","closeObservation","fullWidth","minWidth","flexDirection","cursor","flex","margin","TextField","id","label","variant","disabled","scripInfo","sentId","scripName","stockCode","sector","call","time","present","techTarget","enteryLevel","stopLoss","justifyContent","marginTop","SnackbarComponent","Snackbar","anchorOrigin","vertical","horizontal","snackbarOpen","autoHideDuration","snackbarClose","ContentProps","message","snackbartext","Styles","buttonStyle","backgroundColor","outline","border","borderRadius","scripCode","newStock","sn","stock_code","delete","response","deRegister","closeDeletion","deRegisterAlert","validate","minHeight","fontFamily","paddingLeft","selectedScripName","alert","deleteAlertStock","DeleteEntry","deleteStock","DialogComponent","click","clearAll","allStockCodeName","quantity","remarks","stop_loss","timeline","stock_name","onChange","bind","e","target","preventDefault","post","tech_target","execute_date","register","presentPrice","showScripName","showScripCode","scrip_name_select","type","FormControl","InputLabel","Select","labelId","MenuItem","save","getList","result","getStockList","stockListResult","getObservationsList","getHoldingsList","SetNotification","getStockLists","allStocksMenuItems","catch","err","condition","target_price","s_c","s_n","keys","sname","String","trim","closeSetNotification","index","key","openSetNotification","saveMessage","editRegisterHolding","order","removeExecutionList","_id","removeSellExecutionList","param","itemNumber","enableEdit","checkEdit","entry_level","error","testExistence","checkScrip","includes","risk","buy_date","holdings","editRegister","editSave","NavigationBar","goToMain","goToObservation","onClosedObservationsDialog","goToExecution","goToHoldings","goToTradeLogs","goToSellExecution","openDialog","selectedId","openAddScrip","selectedScripCode","editAddScrip","closeDialog","onClosedDialog","setNotificationOpen","setNotification","genericDialogOPen","genericDialog","genericDialogClose","activeButton","buttonColor","addScrip","handleAddScrip","scripsData","TechnicalAnalysis","selectCall","event","selectTimePeriod","timePeriod","openDeleteDialog","deleteOpen","closeDeleteDialog","openExecutions","pPrice","sLoss","tTarget","openAddExecution","capturedPrice","closeExecutions","changeColor","val","background","alertTone","Audio","AlertTone","play","observationId","notifiaction","snackOpen","snackText","removeId","changedFiels","stockCodeErrorMsg","sectorErrorMsg","scripNameErrorMsg","callErrorMsg","timeErrorMsg","presentErrorMsg","enteryLevelErrorMsg","techTargetErrorMsg","dynamicDataLTP","bellIconData","changeData","observationsData","dynamicDataChange","bellIcon","overflow","left","position","top","zIndex","scrip","undefined","title","entryLevel","sectorName","parseInt","Tooltip","AddtoHoldings","addToHoldings","closeSnackbar","DeleteValidation","AnalysisSelector","selectedFA","selectedTA","Radio","checked","AnalysisSelection","Timer","audio","initVal","endValue","pause","Date","toLocaleTimeString","interval","setInterval","clearInterval","item_no","sold_due_to","sellPrice","openSellExecutions","openSellExecution","closeSellExecutions","onClosedDialogHoldings","iteNumber","soldDueTo","ltp","scripsDataa","selectedScrip","inde","sold","flag","buyDate","split","changeobservationsData","scripId","dynamicDataObservationsChange","dynamicDataObservationsLTP","targetPrice","openOrderDialog","qty","eDate","tt","sl","onPriceUpdate","removeFromExecution","rand","Math","random","notificationsData","executeDate","connect","dispatch","value1","value2","value3","payload","payload1","payload2","payload3","onSellScrips","deleteSell","buyPrice","fetchUserData","usersData","filterAccounts","greaterThan","sendEmail","emailId","clientName","rowid","$","hide","close","sortedData","sort","a","b","currentPortfolioValue","acc","clientCode","clientEmail","sCode","sName","round","cprice","ExecutionListBox","reducer","currentPrice","sendEmailSell","denominator","cod","symbol","nam","floor","sellScripCode","sellQuantity","sellScripName","investmentCount","ic","st","th","cellspacing","sellDate","Home","updateTime","fetch","mode","json","getAllObservations","getAllHoldings","getAll","handleSelectedAnlysis","timer","exact","path","render","Observation","ExecutionsList","ExecutionsSellList","TradeLogs","withRouter","Holdings","Login","initialState","combineReducers","destroyOnUnmount","action","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","Reducer","applyMiddleware","next","component","Welcome","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"yXAsDeA,E,YAjDb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAGRC,UAAU,WACR,OAAOC,IACFC,IAAI,iBAAkB,CACnBC,QAAS,CAAE,eAAgB,sBAE9BC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,OARpB,EAAKG,MAAQ,GAFI,E,sEAaT,IAAD,OACP,OACE,yBAAKC,UAAU,8BACb,yBAAKA,UAAU,kCACb,uBACEA,UAAU,iBACVC,MAAO,CAAEC,SAAU,OAAQC,QAAS,UAFtC,eAMA,0BAAMF,MAAO,CAAEG,cAAe,QAASD,QAAS,IAAhD,aAEF,yBACEH,UAAU,iCACVK,QAAS,WACP,EAAKf,MAAMgB,QAAQC,KAAK,YAG1B,uBACEP,UAAU,iBACVC,MAAO,CAAEC,SAAU,OAAQC,QAAS,UAFtC,SAMA,0BAAMF,MAAO,CAAEG,cAAe,QAASD,QAAS,IAAhD,iB,GAtCgBK,IAAMC,WC6PjBC,G,mBA7Pb,WAAYpB,GAAQ,IAAD,8BACjB,4CAAMA,KAqBRqB,gBAAgB,SAACC,GACf,EAAKC,SAAS,CAACC,KAAKF,KAvBH,EAyBnBG,mBAAmB,SAACH,GAClB,EAAKC,SAAS,CAACG,aAAaJ,KAxB5B,EAAKb,MAAQ,CACXe,KAAK,GACLG,UAAU,GACVD,aAAa,IALE,E,iFASjBE,KAAKP,gBAAgBO,KAAK5B,MAAM6B,aAAa,IAC7CD,KAAKH,mBAAmBG,KAAK5B,MAAM0B,gB,yCAGlBI,EAAUC,GACxBD,EAAUD,aAAa,KAAKD,KAAK5B,MAAM6B,aAAa,IAAMC,EAAUJ,eAAeE,KAAK5B,MAAM0B,eAE/FE,KAAKP,gBAAgBO,KAAK5B,MAAM6B,aAAa,IAC7CD,KAAKH,mBAAmBG,KAAK5B,MAAM0B,iB,+BAYrC,IAAIM,EAEEC,EADHL,KAAKnB,MAAMiB,eAEZM,EAAUE,OAAOC,OAAOP,KAAKnB,MAAMiB,cAAcU,KAAI,SAACC,EAAEC,GAQzD,OALKL,EADCM,WAAWF,EAAEG,SAAS,EACd,CAACC,MAAM,MAAMC,WAAW,MAAMC,YAAY,MAAMC,WAAW,QAG3D,CAACH,MAAM,QAAQC,WAAW,MAAMC,YAAY,MAAMC,WAAW,QAGzE,6BACJ,8BAAOP,EAAEQ,KAAT,MACA,0BAAMlC,MAAOsB,GAAWI,EAAES,WAC1B,mCACA,0BAAMnC,MAAOsB,GAAWI,EAAEG,QAA1B,UAOC,IAOIO,EAPAC,EAAW,EACf,GAAGpB,KAAKnB,MAAMe,KACd,IAAI,IAAIa,EAAE,EAAEA,EAAET,KAAKnB,MAAMe,KAAKyB,OAAOZ,IACnCW,GAAsBT,WAAWX,KAAKnB,MAAMe,KAAKa,IAYnD,OANEU,EADCC,GAAa,EACN,uBAAGE,MAAM,yBAAyBvC,MAAO,CAAC+B,WAAW,OAAO9B,SAAS,OAAO6B,MAAM,WAGlF,uBAAGS,MAAM,2BAA2BvC,MAAO,CAAC+B,WAAW,OAAO9B,SAAS,OAAO6B,MAAM,SAI5F,yBAAK/B,UAAU,4BAEsB,UAAjCkB,KAAK5B,MAAMmD,SAASC,SAClB,yBAAKzC,MAAO,CAAC0C,QAAQ,SACrB,yBAAK1C,MAAO,CAAC2C,MAAM,MAAMb,MAAM,SAA/B,sBACA,yBAAK9B,MAAO,CAAC2C,MAAM,MAAMC,UAAU,QAAQd,MAAM,SACjD,yBACY9B,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZC,MAAO,UAJrB,mBASCV,EAED,0BAAMpC,MAAO,CAACC,SAAS,OAAO8B,WAAW,SAAUM,EAAWU,QAAQ,GAAtE,QAIgC,yBAAjC9B,KAAK5B,MAAMmD,SAASC,SACnB,wBACiC,uBAAjCxB,KAAK5B,MAAMmD,SAASC,SACpB,yBAAKzC,MAAO,CAAC0C,QAAQ,SACvB,yBAAK1C,MAAO,CAAC2C,MAAM,MAAMb,MAAM,SAA/B,QACA,yBAAK9B,MAAO,CAAC2C,MAAM,MAAMC,UAAU,QAAQd,MAAM,SACjD,yBACY9B,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZC,MAAO,UAJrB,mBASCV,EACD,0BAAMpC,MAAO,CAACC,SAAS,OAAO8B,WAAW,SAAUM,EAAWU,QAAQ,GAAtE,QAImC,cAAjC9B,KAAK5B,MAAMmD,SAASC,SACpB,yBAAKzC,MAAO,CAAC0C,QAAQ,SACvB,yBAAK1C,MAAO,CAAC2C,MAAM,MAAMb,MAAM,SAA/B,YACA,yBAAK9B,MAAO,CAAC2C,MAAM,MAAMC,UAAU,QAAQd,MAAM,SACjD,yBACY9B,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZC,MAAO,UAJrB,mBASCV,EAED,0BAAMpC,MAAO,CAACC,SAAS,OAAO8B,WAAW,SAAUM,EAAWU,QAAQ,GAAtE,QAImC,iBAAjC9B,KAAK5B,MAAMmD,SAASC,SACpB,yBAAKzC,MAAO,CAAC0C,QAAQ,SACvB,yBAAK1C,MAAO,CAAC2C,MAAM,MAAMb,MAAM,SAA/B,eACA,yBAAK9B,MAAO,CAAC2C,MAAM,MAAMC,UAAU,QAAQd,MAAM,SACjD,yBACY9B,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZC,MAAO,UAJrB,mBASCV,EAED,0BAAMpC,MAAO,CAACC,SAAS,OAAO8B,WAAW,SAAUM,EAAWU,QAAQ,GAAtE,QAImC,eAAjC9B,KAAK5B,MAAMmD,SAASC,SACpB,yBAAKzC,MAAO,CAAC0C,QAAQ,SACvB,yBAAK1C,MAAO,CAAC2C,MAAM,MAAMb,MAAM,SAA/B,aACA,yBAAK9B,MAAO,CAAC2C,MAAM,MAAMC,UAAU,QAAQd,MAAM,SACjD,yBACY9B,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZC,MAAO,UAJrB,mBASCV,EAED,0BAAMpC,MAAO,CAACC,SAAS,OAAO8B,WAAW,SAAUM,EAAWU,QAAQ,GAAtE,QAImC,oBAAjC9B,KAAK5B,MAAMmD,SAASC,SACpB,yBAAKzC,MAAO,CAAC0C,QAAQ,SACvB,yBAAK1C,MAAO,CAAC2C,MAAM,MAAMb,MAAM,SAA/B,yBACA,yBAAK9B,MAAO,CAAC2C,MAAM,MAAMC,UAAU,QAAQd,MAAM,SACjD,yBACY9B,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZC,MAAO,UAJrB,mBASCV,EAED,0BAAMpC,MAAO,CAACC,SAAS,OAAO8B,WAAW,SAAUM,EAAWU,QAAQ,GAAtE,QAImC,mBAAjC9B,KAAK5B,MAAMmD,SAASC,SACpB,yBAAKzC,MAAO,CAAC0C,QAAQ,SACvB,yBAAK1C,MAAO,CAAC2C,MAAM,MAAMb,MAAM,SAA/B,kBACA,yBAAK9B,MAAO,CAAC2C,MAAM,MAAMC,UAAU,QAAQd,MAAM,SACjD,yBACY9B,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZC,MAAO,UAJrB,mBASCV,EAED,0BAAMpC,MAAO,CAACC,SAAS,OAAO8B,WAAW,SAAUM,EAAWU,QAAQ,GAAtE,QAImC,wBAAjC9B,KAAK5B,MAAMmD,SAASC,SACpB,yBAAKzC,MAAO,CAAC0C,QAAQ,SACvB,yBAAK1C,MAAO,CAAC2C,MAAM,MAAMb,MAAM,SAA/B,wBACA,yBAAK9B,MAAO,CAAC2C,MAAM,MAAMC,UAAU,QAAQd,MAAM,SACjD,yBACY9B,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZC,MAAO,UAJrB,mBASCV,EAED,0BAAMpC,MAAO,CAACC,SAAS,OAAO8B,WAAW,SAAUM,EAAWU,QAAQ,GAAtE,QAImC,eAAjC9B,KAAK5B,MAAMmD,SAASC,SACpB,yBAAKzC,MAAO,CAAC0C,QAAQ,SACvB,yBAAK1C,MAAO,CAAC2C,MAAM,MAAMb,MAAM,SAA/B,cACA,yBAAK9B,MAAO,CAAC2C,MAAM,MAAMC,UAAU,QAAQd,MAAM,SACjD,yBACY9B,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZC,MAAO,UAJrB,mBASCV,EAED,0BAAMpC,MAAO,CAACC,SAAS,OAAO8B,WAAW,SAAUM,EAAWU,QAAQ,GAAtE,QAIE,GACA,iCACF,yBAAK/C,MAAO,CAAC8B,MAAM,OAAO7B,SAAS,OAAOyC,QAAQ,SAC3CrB,S,GAtPOd,IAAMC,YCWfwC,E,YAXb,WAAY3D,GAAQ,IAAD,8BACjB,4CAAMA,KACDS,MAAQ,GAFI,E,sEAKjB,OACE,yBAAKC,UAAU,4BAAf,+B,GAPkBQ,IAAMC,WCgBfyC,G,kBAdb,WAAY5D,GAAQ,IAAD,8BACjB,4CAAMA,KACDS,MAAQ,GAFI,E,sEAMjB,OACE,yBAAKC,UAAU,oCAAf,4B,GAR4BQ,IAAMC,Y,mCCoQzB0C,E,YAlQb,WAAY7D,GAAQ,IAAD,8BACjB,4CAAMA,KACDS,MAAQ,GAFI,E,sEAMjB,OACE,kBAACqD,EAAA,EAAD,CACEC,KAAMnC,KAAK5B,MAAMgE,gBACjBC,QAASrC,KAAK5B,MAAMkE,iBACpBC,WAAS,GAET,yBACExD,MAAO,CACL0C,QAAS,OACTe,SAAU,IACVC,cAAe,WAGjB,0BAAM1D,MAAO,CAAEE,QAAS,GAAID,SAAU,SAAtC,kBAEE,uBACEF,UAAU,iBACVC,MAAO,CAAE8C,MAAO,QAASa,OAAQ,WACjCvD,QAASa,KAAK5B,MAAMkE,kBAHtB,UAQF,yBAAKvD,MAAO,CAAE0C,QAAS,OAAQkB,KAAM,EAAGF,cAAe,WACrD,yBAAK1D,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAC5C,yBACE1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGV,kBAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,QACNH,OAAO,SACPI,QAAQ,WACRC,UAAQ,EACRvD,MACEM,KAAK5B,MAAM8E,UAAU7B,OAAS,EAC1BrB,KAAK5B,MAAM8E,UAAUlD,KAAK5B,MAAM+E,QAAQC,UACxC,MAMV,yBACErE,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGV,kBAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,aACNH,OAAO,SACPI,QAAQ,WACRC,UAAQ,EACRvD,MACEM,KAAK5B,MAAM8E,UAAU7B,OAAS,EAC1BrB,KAAK5B,MAAM8E,UAAUlD,KAAK5B,MAAM+E,QAAQE,UACxC,OAMZ,yBAAKtE,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAC5C,yBACE1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGV,kBAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,SACNH,OAAO,SACPI,QAAQ,WACRC,UAAQ,EACRvD,MACEM,KAAK5B,MAAM8E,UAAU7B,OAAS,EAC1BrB,KAAK5B,MAAM8E,UAAUlD,KAAK5B,MAAM+E,QAAQG,OACxC,MAKV,yBACEvE,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGV,kBAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,OACNH,OAAO,SACPI,QAAQ,WACRC,UAAQ,EACRvD,MACEM,KAAK5B,MAAM8E,UAAU7B,OAAS,EAC1BrB,KAAK5B,MAAM8E,UAAUlD,KAAK5B,MAAM+E,QAAQI,KACxC,MAKV,yBACExE,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGV,kBAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,cACNH,OAAO,SACPI,QAAQ,WACRC,UAAQ,EACRvD,MACEM,KAAK5B,MAAM8E,UAAU7B,OAAS,EAC1BrB,KAAK5B,MAAM8E,UAAUlD,KAAK5B,MAAM+E,QAAQK,KACxC,OAMZ,yBAAKzE,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAC5C,yBACE1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGV,kBAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,UACNH,OAAO,SACPI,QAAQ,WACRC,UAAQ,EACRvD,MACEM,KAAK5B,MAAM8E,UAAU7B,OAAS,EAC1BrB,KAAK5B,MAAM8E,UAAUlD,KAAK5B,MAAM+E,QAAQM,QACxC,MAKV,yBACE1E,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGV,kBAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,YACNH,OAAO,SACPI,QAAQ,WACRC,UAAQ,EACRvD,MACEM,KAAK5B,MAAM8E,UAAU7B,OAAS,EAC1BrB,KAAK5B,MAAM8E,UAAUlD,KAAK5B,MAAM+E,QAAQO,WACxC,OAMZ,yBAAK3E,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAC5C,yBACE1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGV,kBAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,cACNH,OAAO,SACPI,QAAQ,WACRtD,MACEM,KAAK5B,MAAM8E,UAAU7B,OAAS,EAC1BrB,KAAK5B,MAAM8E,UAAUlD,KAAK5B,MAAM+E,QAAQQ,YACxC,MAKV,yBACE5E,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGV,kBAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,YACNH,OAAO,SACPI,QAAQ,WACRtD,MACEM,KAAK5B,MAAM8E,UAAU7B,OAAS,EAC1BrB,KAAK5B,MAAM8E,UAAUlD,KAAK5B,MAAM+E,QAAQS,SACxC,QAOd,yBACE7E,MAAO,CACL0C,QAAS,OACTgB,cAAe,MACfxD,QAAS,YACT4E,eAAgB,WAChBC,UAAW,SAGb,4BAAQhF,UAAU,WAAWC,MAAO,CAAEgC,YAAa,SAAnD,mBAGA,4BAAQjC,UAAU,WAAWK,QAASa,KAAK5B,MAAMkE,kBAAjD,gB,GAzPmBhD,IAAMC,W,SCwBtBwE,E,YAxBb,WAAY3F,GAAQ,IAAD,8BACjB,4CAAMA,KACDS,MAAQ,GAFI,E,sEAMjB,OACE,kBAACmF,EAAA,EAAD,CACEC,aAAc,CACZC,SAAU,MACVC,WAAY,UAEdhC,KAAMnC,KAAK5B,MAAMgG,aACjBC,iBAAkB,IAClBhC,QAASrC,KAAK5B,MAAMkG,cACpBC,aAAc,CACZ,mBAAoB,cAEtBC,QAAS,0BAAM1B,GAAG,cAAc9C,KAAK5B,MAAMqG,oB,GAnBnBnF,IAAMC,W,SCEhCmF,EAAS,CACbC,YAAa,CACX1F,QAAS,GACT2F,gBAAiB,mBACjB/D,MAAO,QACP7B,SAAU,OACV0D,OAAQ,UACRmC,QAAS,OACTC,OAAQ,MACRrD,QAAS,OACTsD,aAAc,MACdnC,OAAQ,aA6EGX,E,YAzEb,WAAY7D,GAAQ,IAAD,8BACjB,4CAAMA,KACDS,MAAQ,GAFI,E,yEAKPmG,GAAW,IAAD,QCvBE,SAAAC,GACxB,IAAIC,EAAKD,EAASE,WAClB,OAAO7G,IACJ8G,OAAO,IAAIF,GACXzG,MAAK,SAAA4G,GACJ1G,QAAQC,IAAI,qBDqBd0G,CAFiB,CACjBH,WAAWH,IACUvG,MAAK,SAAAC,GAC1B,EAAKN,MAAMmH,qB,uCAIIP,GAAW,IAAD,QCrBE,SAAAC,GAC7B,IAAIC,EAAKD,EAASE,WAClB,OAAO7G,IACJ8G,OAAO,eAAeF,GACtBzG,MAAK,SAAA4G,GACJ1G,QAAQC,IAAI,qBDmBd4G,CAFiB,CACjBL,WAAWH,IACevG,MAAK,SAAAC,GAC/B,EAAKN,MAAMmH,qB,+BAIH,IAAD,OACP,OACE,kBAACrD,EAAA,EAAD,CAAQC,KAAMnC,KAAK5B,MAAMqH,SAAUpD,QAASrC,KAAK5B,MAAMmH,eACrD,yBACExG,MAAO,CACL2G,UAAW,IACXd,gBAAiB,QACjB3F,QAAS,GACTwC,QAAS,OACTgB,cAAe,SACfoB,eAAgB,kBAGlB,yBAAK9E,MAAO,CAAEC,SAAU,SAAxB,wBAEE,0BACED,MAAO,CACL4G,WAAY,SACZ3E,WAAY,IACZ4E,YAAa,QAGhB5F,KAAK5B,MAAMyH,mBACJ,IAVV,KAaA,yBACE9G,MAAO,CACL0C,QAAS,OACTgB,cAAe,MACfoB,eAAgB,aAGlB,4BACE9E,MAAO2F,EAAOC,YACdxF,QAAS,WAAO,EAAKf,MAAM0H,MAAM,EAAKC,iBAAiB,EAAK3H,MAAM4H,aAAa,EAAKC,YAAY,EAAK7H,MAAM4H,eAF7G,UAMA,4BACEjH,MAAO2F,EAAOC,YACdxF,QAASa,KAAK5B,MAAMmH,eAFtB,iB,GA7DmBjG,IAAMC,W,oDE+QtB2G,E,YA9Qb,WAAY9H,GAAQ,IAAD,8BACjB,4CAAMA,KA8CV+H,MAAM,WACJ,EAAKC,WACL,EAAKhI,MAAMiE,WA/CT,EAAKxD,MAAQ,CACXwH,iBAAiB,GACjBC,SAAS,GACTC,QAAQ,GACRC,UAAU,GACVC,SAAS,GACTC,WAAW,IAIf,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAZG,E,sEAiBVC,GACP7G,KAAKL,SAAL,eAAiBkH,EAAEC,OAAO7F,KAAO4F,EAAEC,OAAOpH,U,2BAIzCmH,GAAG,IAAD,OAiBL,OAhBFA,EAAEE,iBCzCsB,SAAA9B,GACtB,OAAO3G,IACJ0I,KAAK,wBAAyB,CAC7BN,WAAYzB,EAASyB,WACrBvB,WAAYF,EAASE,WACrBqB,UAAUvB,EAASuB,UACnBS,YAAYhC,EAASgC,YACrBxD,QAAQwB,EAASxB,QACjBgD,SAASxB,EAASwB,SAClBH,SAASrB,EAASqB,SAClBC,QAAQtB,EAASsB,QACjBW,aAAa,KAEdzI,MAAK,SAAAC,ODuCRyI,CAVe,CACfb,SAAUtG,KAAKnB,MAAMyH,SACrBG,SAASzG,KAAKnB,MAAM4H,SACpBF,QAAQvG,KAAKnB,MAAM0H,QACnB9C,QAAQzD,KAAK5B,MAAMgJ,aACnBV,WAAW1G,KAAK5B,MAAMiJ,cACtBb,UAAUxG,KAAK5B,MAAMwF,SACrBqD,YAAYjH,KAAK5B,MAAMsF,WACvByB,WAAWnF,KAAK5B,MAAMkJ,gBAEH7I,MAAK,SAAAC,GACxB,EAAKyH,QACL,EAAK/H,MAAMiE,aAGJ/D,IACNC,IAAI,gBAAiB,CACpBC,QAAS,CAAE,eAAgB,wB,iCAY/BwB,KAAKL,SAAS,CACZ2G,SAAS,GACTG,SAAS,GACTF,QAAQ,O,+BAON,IAAIgB,EAEIF,EAAgBrH,KAAK5B,MAAMiJ,cAWnC,OAVEE,EAAsB,kBAAC1E,EAAA,EAAD,CAClB5B,KAAK,aACL6B,GAAG,iBACHC,MAAM,aACNC,QAAQ,WACRwE,KAAK,OACL9H,MAAO2H,IAKX,kBAACnF,EAAA,EAAD,CAAQC,KAAMnC,KAAK5B,MAAM+D,KAAME,QAASrC,KAAK5B,MAAMiE,QAASE,WAAS,GACnE,yBACExD,MAAO,CACL0C,QAAS,OACTe,SAAU,IACVC,cAAe,WAGjB,0BAAM1D,MAAO,CAAEE,QAAS,GAAID,SAAU,SAAtC,gBAEE,uBACEF,UAAU,iBACVC,MAAO,CAAE8C,MAAO,QAASa,OAAQ,WACjCvD,QAASa,KAAKmG,OAHhB,UAQF,8BAGA,yBAAKpH,MAAO,CAAE0C,QAAS,OAAQkB,KAAM,EAAGF,cAAe,WAGvD,yBAAK1D,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAC9C,yBACE1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGV2E,GAGF,yBACMxI,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGZ,kBAACC,EAAA,EAAD,CACE5B,KAAK,aACL6B,GAAG,iBACHC,MAAM,aACNC,QAAQ,WACRwE,KAAK,OACL9H,MAAOM,KAAK5B,MAAMkJ,kBAOtB,yBAAKvI,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAE5C,yBACE1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGZ,kBAAC6E,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAY5E,GAAG,6BAAf,iBACA,kBAAC6E,EAAA,EAAD,CACGC,QAAQ,4BACT3G,KAAK,WACL6B,GAAG,iBACHC,MAAM,OACNC,QAAQ,WACRtD,MAAOM,KAAKnB,MAAM4H,SAAUE,SAAU3G,KAAK2G,UAE3C,kBAACkB,EAAA,EAAD,CAAUnI,MAAM,OAAhB,OACA,kBAACmI,EAAA,EAAD,CAAUnI,MAAM,QAAhB,WAOF,yBACEX,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGZ,kBAACC,EAAA,EAAD,CACE5B,KAAK,WACL6B,GAAG,iBACHC,MAAM,wBACNC,QAAQ,WACRwE,KAAK,SACL9H,MAAOM,KAAKnB,MAAMyH,SAClBK,SAAU3G,KAAK2G,aAKnB,yBAAK5H,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAC9C,yBACI1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGZ,kBAACC,EAAA,EAAD,CACE5B,KAAK,gBACL6B,GAAG,iBACHC,MAAM,cACNC,QAAQ,WACRwE,KAAK,SACL9H,MAAOM,KAAK5B,MAAMgJ,gBAKpB,yBACErI,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGZ,kBAACC,EAAA,EAAD,CACE5B,KAAK,YACL6B,GAAG,iBACHC,MAAM,YACNC,QAAQ,WACRwE,KAAK,SACL9H,MAAOM,KAAK5B,MAAMwF,aAOtB,yBAAK7E,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAC9C,yBACI1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGZ,kBAACC,EAAA,EAAD,CACE5B,KAAK,UACL6B,GAAG,iBACHC,MAAM,UACNC,QAAQ,WACRwE,KAAK,OACL9H,MAAOM,KAAKnB,MAAM0H,QAClBI,SAAU3G,KAAK2G,cAMrB,yBACE5H,MAAO,CACL0C,QAAS,OACTgB,cAAe,MACfxD,QAAS,YACT4E,eAAgB,WAChBC,UAAW,SAGb,4BAAQhF,UAAU,WAAWC,MAAO,CAAEgC,YAAa,QAClD5B,QAASa,KAAK8H,KAAKlB,KAAK5G,MACxBiD,UAAYjD,KAAKnB,MAAMyH,WAAatG,KAAKnB,MAAM4H,UAFhD,cAMA,4BAAQ3H,UAAU,WAAYK,QAASa,KAAKmG,OAA5C,gB,GArQkB7G,IAAMC,WElBvBwI,EAAU,WACnB,OAAOzJ,IACFC,IAAI,qBAAsB,CACvBC,QAAS,CAAE,eAAgB,sBAE9BC,MAAK,SAAAC,GACD,OAAOA,EAAIkB,KAAKoI,WAKhBC,EAAe,WACxB,OAAO3J,IACFC,IAAI,qBAAsB,CACvBC,QAAS,CAAE,eAAgB,sBAE9BC,MAAK,SAAAC,GACF,OAAOA,EAAIkB,KAAKsI,oBAKfC,EAAsB,WAC/B,OAAO7J,IACFC,IAAI,eAAgB,CACjBC,QAAS,CAAE,eAAgB,sBAE9BC,MAAK,SAAAC,GACF,OAAOA,EAAIkB,KAAKoI,WAKfI,EAAkB,WAC3B,OAAO9J,IACFC,IAAI,YAAa,CACdC,QAAS,CAAE,eAAgB,sBAE9BC,MAAK,SAAAC,GACF,OAAOA,EAAIkB,KAAKoI,WCiObK,E,YAvPb,WAAYjK,GAAQ,IAAD,8BACjB,4CAAMA,KAgBVkK,cAAgB,WACdL,IACGxJ,MAAK,SAAAmB,GACJ,EAAKD,SAAS,CACZ4I,mBAAoB3I,OAIvB4I,OAAM,SAAAC,GACL9J,QAAQC,IAAI6J,OAxBd,EAAK5J,MAAQ,CACX6J,UAAU,GACVC,aAAa,GACbnE,QAAQ,GACR+D,mBAAmB,GACnB7B,WAAW,IAEb,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBATC,E,iFAcnB5G,KAAKsI,kB,+BAgBEzB,GACP7G,KAAKL,SAAL,eAAiBkH,EAAEC,OAAO7F,KAAO4F,EAAEC,OAAOpH,U,kCAEhCmH,GAAG,IAET+B,EAAIC,EAFI,OACZhC,EAAEE,iBAE2B,IAA1B/G,KAAK5B,MAAMkJ,eACZuB,EAAI7I,KAAKnB,MAAM6H,WACfkC,EAAMtI,OAAOwI,KAAK9I,KAAKnB,MAAM0J,oBAAoBM,GACjDA,EAAMvI,OAAOC,OAAOP,KAAKnB,MAAM0J,oBAAoBM,KAGnDA,EAAK7I,KAAK5B,MAAMiJ,cAChBuB,EAAM5I,KAAK5B,MAAMkJ,eC3DG,SAAA9C,GACtB,IAAIU,EAAKV,EAAQW,WACjBD,EAAKA,EACL,IAAI6D,EAAQvE,EAAQkC,WAIpB,OAHAqC,EAAQA,EAERA,GADAA,EAAQC,OAAOD,IACDE,OACP3K,IACJ0I,KAAK,YAAY9B,EAAI,CACpBwB,WAAWqC,EACXJ,aAAanE,EAAQmE,aACrBD,UAAUlE,EAAQkE,UAClBlE,QAAQA,EAAQA,UAGjB/F,MAAK,SAAA4G,GACJ1G,QAAQC,IAAI,kCDoDhBuI,CAPgB,CAChBhC,WAAWyD,EACXlC,WAAWmC,EACXF,aAAc3I,KAAKnB,MAAM8J,aACzBD,UAAW1I,KAAKnB,MAAM6J,UACtBlE,QAASxE,KAAKnB,MAAM2F,UAEF/F,MAAK,SAAAC,GACvB,EAAKiB,SAAS,CAACgJ,aAAa,KAC5B,EAAKhJ,SAAS,CAAC+I,UAAU,KACzB,EAAK/I,SAAS,CAAC6E,QAAQ,KACvB,EAAKpG,MAAM8K,4B,+BAQT,IACI3B,EADEF,EAAgBrH,KAAK5B,MAAMiJ,cA6CjC,OAzCEE,EAD4B,KAA3BvH,KAAK5B,MAAMkJ,cAEV,kBAACG,EAAA,EAAD,CAAa1I,MAAO,CAAC6D,OAAO,KAC5B,kBAAC8E,EAAA,EAAD,CAAY5E,GAAG,4BAAf,gBACF,kBAAC6E,EAAA,EAAD,CACAC,QAAQ,2BACR3G,KAAK,aACL6B,GAAG,iBACHC,MAAM,OACNC,QAAQ,WACRtD,MAAOM,KAAKnB,MAAM6H,WAClBC,SAAU3G,KAAK2G,UAGdrG,OAAOC,OAAOP,KAAKnB,MAAM0J,oBAAoB/H,KAAI,SAACC,EAAE0I,GAClD,OAAO,kBAACtB,EAAA,EAAD,CAAUuB,IAAKD,EAAOzJ,MAAOyJ,GAAQ1I,QAW3B,kBAACoC,EAAA,EAAD,CACtB9D,MAAO,CACL6D,OAAQ,IAEV4E,KAAK,OACL1E,GAAG,iBACHC,MAAM,aACNC,QAAQ,WACRtD,MAAO2H,EACPpG,KAAK,eASH,kBAACiB,EAAA,EAAD,CACEC,KAAMnC,KAAK5B,MAAMiL,oBACjBhH,QAASrC,KAAK5B,MAAM8K,qBACpB3G,WAAS,GAET,yBACExD,MAAO,CACL0C,QAAS,OACTe,SAAU,IACVC,cAAe,WAGjB,0BAAM1D,MAAO,CAAEE,QAAS,GAAID,SAAU,SAAtC,mBAEE,uBACEF,UAAU,iBACVC,MAAO,CAAE8C,MAAO,QAASa,OAAQ,WACjCvD,QAASa,KAAK5B,MAAM8K,sBAHtB,UAQF,yBAAKnK,MAAO,CAAE0C,QAAS,OAAQkB,KAAM,EAAGF,cAAe,WAGvD,yBACE1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGb2E,GAGK,yBACExI,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGd,kBAACC,EAAA,EAAD,CACE9D,MAAO,CACL6D,OAAQ,IAEV3B,KAAK,eACLuG,KAAK,SACL1E,GAAG,iBACHC,MAAM,eACNC,QAAQ,WACRtD,MAAOM,KAAKnB,MAAM8J,aAClBhC,SAAU3G,KAAK2G,YAGjB,yBACA5H,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGV,kBAAC6E,EAAA,EAAD,CAAa1I,MAAO,CAAC6D,OAAO,KAChC,kBAAC8E,EAAA,EAAD,CAEA5E,GAAG,gCAFH,oBAGI,kBAAC6E,EAAA,EAAD,CAEEC,QAAQ,+BACR9E,GAAG,iBACHC,MAAM,OACNC,QAAQ,WACR/B,KAAK,YACLvB,MAAOM,KAAKnB,MAAM6J,UAClB/B,SAAU3G,KAAK2G,UAEf,kBAACkB,EAAA,EAAD,CAAUnI,MAAM,+BAAhB,+BACA,kBAACmI,EAAA,EAAD,CAAUnI,MAAM,gCAAhB,mCAIH,yBACCX,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGV,kBAACC,EAAA,EAAD,CACE9D,MAAO,CACL6D,OAAQ,IAEVE,GAAG,iBACHC,MAAM,UACNC,QAAQ,WACRtD,MAAOM,KAAKnB,MAAM2F,QAClBmC,SAAU3G,KAAK2G,SACfa,KAAK,OACLvG,KAAK,eAMP,yBACAlC,MAAO,CACL0C,QAAS,OACTgB,cAAe,MACfxD,QAAS,YACT4E,eAAgB,WAChBC,UAAW,SAGb,4BAAQhF,UAAU,WAAWC,MAAO,CAAEgC,YAAa,QACnDkC,UAAYjD,KAAKnB,MAAM8J,eAAgB3I,KAAKnB,MAAM6J,YAAc1I,KAAKnB,MAAM2F,QAC3ErF,QAASa,KAAKsJ,YAAY1C,KAAK5G,OAF/B,oBAMA,4BACElB,UAAU,WACVK,QAASa,KAAK5B,MAAM8K,sBAFtB,e,GA3OkB5J,IAAMC,WEkBvBgK,EAAuB,SAAAtE,GAClC,IAAIC,EAAKD,EAASE,WAClB,OAAO7G,IACJ0I,KAAK,sBAAsB9B,EAAI,CAC9BsE,MAAMvE,EAASuE,QAEhB/K,MAAK,SAAA4G,GACJ1G,QAAQC,IAAI,oBAiBL6K,EAAuB,SAAAxE,GAClC,IAAIC,EAAKD,EAASyE,IAClB,OAAOpL,IACJ8G,OAAO,oBAAoBF,GAC3BzG,MAAK,SAAA4G,GACJ1G,QAAQC,IAAIyG,GACZ1G,QAAQC,IAAI,0BAML+K,EAA2B,SAAA1E,GACtC,IAAIC,EAAKD,EAASyE,IAGdE,EAFK3E,EAAS5B,UAEH,IADL4B,EAAS4E,WASjB,OAPFvL,IACG8G,OAAO,wBAAwBF,GAC/BzG,MAAK,SAAA4G,GACJ1G,QAAQC,IAAIyG,GACZ1G,QAAQC,IAAI,8BAGPN,IACN0I,KAAK,iBAAiB4C,GACtBnL,MAAK,SAAA4G,GACJ1G,QAAQC,IAAIyG,GACZ1G,QAAQC,IAAI,uBCkOHsH,E,YApSb,WAAY9H,GAAQ,IAAD,8BACjB,4CAAMA,KAsBR0L,WAAW,YACmB,IAAzB,EAAK1L,MAAM2L,UACd,EAAKpK,SAAS,CAACoK,WAAU,IAEvB,EAAKpK,SAAS,CAACoK,WAAU,KA3BV,EA8BnBzB,cAAgB,WACdL,IACGxJ,MAAK,SAAAmB,GACJ,EAAKD,SAAS,CACZ4I,mBAAoB3I,OAIvB4I,OAAM,SAAAC,GACL9J,QAAQC,IAAI6J,OAvCC,EAsGrBtC,MAAM,WACJ,EAAKC,WACL,EAAKhI,MAAMiE,WAtGT,EAAKxD,MAAQ,CACXwH,iBAAiB,GACjB2D,YAAY,GACZxD,UAAU,GACVC,SAAS,GACTC,WAAW,GACX6B,mBAAmB,GACnB0B,OAAM,EACNF,UAAU,IAEd,EAAKpD,SAAW,EAAKA,SAASC,KAAd,gBAZG,E,iFAejB5G,KAAKsI,kB,+BA4BEzB,GACP7G,KAAKL,SAAS,CAACsK,OAAM,IACrBjK,KAAKL,SAAL,eAAiBkH,EAAEC,OAAO7F,KAAO4F,EAAEC,OAAOpH,U,2BAKzCmH,GAAG,IAAD,OACPA,EAAEE,iBACF,IAAImD,EAAc,GAKlB,GAJA5J,OAAOC,OAAOP,KAAK5B,MAAM+L,YAAY3J,KAAI,SAAAC,GACvCyJ,EAAc7K,KAAKoB,EAAE2C,cAEZ8G,EAAcE,SAASpK,KAAKnB,MAAM6H,YAE7C,OADS1G,KAAKL,SAAS,CAACsK,OAAM,IACvB,KAEFjK,KAAKL,SAAS,CAACsK,OAAM,ID/EF,SAAAhF,GACtB,OAAO3G,IACJ0I,KAAK,YAAa,CACjBN,WAAYzB,EAASyB,WACrBsD,YAAa/E,EAAS+E,YACtBxD,UAAUvB,EAASuB,UACnB9C,WAAWuB,EAASvB,WACpB2G,KAAKpF,EAASoF,KACd5D,SAASxB,EAASwB,SAClB6D,SAAS,KAEV7L,MAAK,SAAA4G,OC+EV8B,CATiB,CACjBT,WAAY1G,KAAKnB,MAAM6H,WACvBsD,YAAahK,KAAKnB,MAAMmL,YACxBxD,UAAWxG,KAAKnB,MAAM2H,UACtB6D,KAAKrK,KAAKnB,MAAMwL,KAChB5D,SAASzG,KAAKnB,MAAM4H,SACpB8D,UAAS,EACTD,SAAS,KAEU7L,MAAK,SAAAC,GACxB,EAAKiB,SAAS,CAAC+G,WAAW,KAC1B,EAAK/G,SAAS,CAACqK,YAAY,KAC3B,EAAKrK,SAAS,CAAC6G,UAAU,KACzB,EAAK7G,SAAS,CAAC8G,SAAS,KACxB,EAAKrI,MAAMiE,e,+BAMFwE,GAAG,IAAD,OACTA,EAAEE,iBDrFwB,SAAA9B,GAC1B,IAAIC,EAAKD,EAASE,WAClB,OAAO7G,IACJ0I,KAAK,cAAc9B,EAAI,CACtB8E,YAAa/E,EAAS+E,YACtBxD,UAAUvB,EAASuB,UACnB9C,WAAWuB,EAASvB,WACpB2G,KAAKpF,EAASoF,KACd5D,SAASxB,EAASwB,WAEnBhI,MAAK,SAAA4G,GACJ1G,QAAQC,IAAI,mBCoFhB4L,CATiB,CACjBrF,WAAWnF,KAAK5B,MAAMkJ,cACtBZ,WAAW1G,KAAK5B,MAAMiJ,cACtB2C,YAAahK,KAAKnB,MAAMmL,YACxBxD,UAAWxG,KAAKnB,MAAM2H,UACtB6D,KAAKrK,KAAKnB,MAAMwL,KAChB5D,SAASzG,KAAKnB,MAAM4H,WAGGhI,MAAK,SAAAC,GAC5B,EAAKiB,SAAS,CAACqK,YAAY,KAC3B,EAAKrK,SAAS,CAAC6G,UAAU,KACzB,EAAK7G,SAAS,CAAC8G,SAAS,KACxB,EAAKrI,MAAMiE,e,iCAWbrC,KAAKL,SAAS,CACZ+G,WAAW,GACXsD,YAAY,GACZxD,UAAU,GACVC,SAAS,GACTwD,OAAM,M,+BAOJ,IAAI1C,EACJ,IAA4B,IAAzBvH,KAAK5B,MAAM2L,UACZxC,EACA,kBAACE,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAY5E,GAAG,+BAAf,gBACC,kBAAC6E,EAAA,EAAD,CACAC,QAAQ,0BACP3G,KAAK,aACL6B,GAAG,iBACHC,MAAM,OACNC,QAAQ,WACRtD,MAAOM,KAAKnB,MAAM6H,WAClBC,SAAU3G,KAAK2G,UAGdrG,OAAOC,OAAOP,KAAKnB,MAAM0J,oBAAoB/H,KAAI,SAACC,EAAE0I,GACjD,OAAO,kBAACtB,EAAA,EAAD,CAAUuB,IAAKD,EAAOzJ,MAAOe,GAAIA,YAO5C,CACF,IAAM4G,EAAgBrH,KAAK5B,MAAMiJ,cACjCE,EAAsB,kBAAC1E,EAAA,EAAD,CAClB5B,KAAK,aACL6B,GAAG,iBACHC,MAAM,aACNC,QAAQ,WACRwE,KAAK,OACL9H,MAAO2H,IAIb,OACE,kBAACnF,EAAA,EAAD,CAAQC,KAAMnC,KAAK5B,MAAM+D,KAAME,QAASrC,KAAK5B,MAAMiE,QAASE,WAAS,GACnE,yBACExD,MAAO,CACL0C,QAAS,OACTe,SAAU,IACVC,cAAe,WAGjB,0BAAM1D,MAAO,CAAEE,QAAS,GAAID,SAAU,SAAtC,YAEE,uBACEF,UAAU,iBACVC,MAAO,CAAE8C,MAAO,QAASa,OAAQ,WACjCvD,QAASa,KAAK5B,MAAMiE,SAHtB,UAQF,8BAGA,yBAAKtD,MAAO,CAAE0C,QAAS,OAAQkB,KAAM,EAAGF,cAAe,WAGvD,yBAAK1D,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAC9C,yBACE1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGb2E,EACIvH,KAAKnB,MAAMoL,MAAM,0BAAMlL,MAAO,CAAC8B,MAAM,MAAM7B,SAAS,SAAnC,yBAAyE,OAI3F,yBAAKD,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAE5C,yBACE1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGV,kBAAC6E,EAAA,EAAD,KACD,kBAACC,EAAA,EAAD,CAAY5E,GAAG,+BAAf,mBACD,kBAAC6E,EAAA,EAAD,CACGC,QAAQ,8BACT3G,KAAK,WACL6B,GAAG,iBACHC,MAAM,OACNC,QAAQ,WACRtD,MAAOM,KAAKnB,MAAM4H,SAAUE,SAAU3G,KAAK2G,UAE3C,kBAACkB,EAAA,EAAD,CAAUnI,MAAM,UAAhB,UACA,kBAACmI,EAAA,EAAD,CAAUnI,MAAM,WAAhB,WACA,kBAACmI,EAAA,EAAD,CAAUnI,MAAM,YAAhB,YACA,kBAACmI,EAAA,EAAD,CAAUnI,MAAM,eAAhB,eACA,kBAACmI,EAAA,EAAD,CAAUnI,MAAM,UAAhB,cAOJ,yBAAKX,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAC5C,yBACE1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGZ,kBAACC,EAAA,EAAD,CACE5B,KAAK,cACL6B,GAAG,iBACHC,MAAM,cACNC,QAAQ,WACRwE,KAAK,SACL9H,MAAOM,KAAKnB,MAAMmL,YAClBrD,SAAU3G,KAAK2G,YAIjB,yBACE5H,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGZ,kBAACC,EAAA,EAAD,CACE5B,KAAK,YACL6B,GAAG,iBACHC,MAAM,YACNC,QAAQ,WACRwE,KAAK,SACL9H,MAAOM,KAAKnB,MAAM2H,UAClBG,SAAU3G,KAAK2G,cAOrB,yBACE5H,MAAO,CACL0C,QAAS,OACTgB,cAAe,MACfxD,QAAS,YACT4E,eAAgB,WAChBC,UAAW,SAGb,4BAAQhF,UAAU,WAAWC,MAAO,CAAEgC,YAAa,QAClD5B,QAAUa,KAAK5B,MAAM2L,UAAmC/J,KAAKyK,SAAS7D,KAAK5G,MAA1CA,KAAK8H,KAAKlB,KAAK5G,MAChDiD,UAAYjD,KAAKnB,MAAMmL,cAAgBhK,KAAKnB,MAAM2H,YAAcxG,KAAKnB,MAAM4H,UAF5E,aAMA,4BAAQ3H,UAAU,WAAYK,QAASa,KAAKmG,OAA5C,gB,GA3RkB7G,IAAMC,WCgNrBmL,E,YA9NX,WAAYtM,GAAQ,IAAD,8BACjB,4CAAMA,KAcRuM,SAAW,WAET,EAAKvM,MAAMgB,QAAQC,KAAK,uBAjBP,EAoBnBuL,gBAAkB,WAEd,EAAKxM,MAAMyM,6BACX,EAAKzM,MAAMgB,QAAQC,KAAK,iBAvBT,EA2BjByL,cAAgB,WACd,EAAK1M,MAAMgB,QAAQC,KAAK,eA5BT,EAgCjB0L,aAAe,WACb,EAAK3M,MAAMgB,QAAQC,KAAK,cAjCT,EAqCjB2L,cAAgB,WACd,EAAK5M,MAAMgB,QAAQC,KAAK,eAtCT,EA2CjB4L,kBAAoB,WAClB,EAAK7M,MAAMgB,QAAQC,KAAK,mBA5CT,EAgDjB6L,WAAa,SAACtB,EAAO5E,EAAW5B,GAChB,QAAVwG,EACF,EAAKjK,SAAS,CAAEwL,WAAY,GAAIC,cAAc,IAG9C,EAAKzL,SAAS,CAAEyL,cAAc,EAAMD,WAAW/H,EAAWiI,kBAAkBrG,EAAUsG,cAAa,KArDtF,EAwDjBC,YAAc,WACZ,EAAK5L,SAAS,CAAEyL,cAAc,EAAOE,cAAa,IAClD,EAAKlN,MAAMoN,kBA1DI,EA6DjBC,oBAAsB,SAACzG,EAAW/D,GAChC,EAAKtB,SAAS,CAAE+L,iBAAiB,EACjCP,WAAWlK,EACXoK,kBAAkBrG,KAhEH,EAqEjBkE,qBAAuB,WACrB,EAAKvJ,SAAS,CAAE+L,iBAAiB,KAtElB,EA0EjBC,kBAAoB,WAClB,EAAKhM,SAAS,CAAEiM,eAAe,KA3EhB,EA6EjBC,mBAAqB,WACnB,EAAKlM,SAAS,CAAEiM,eAAe,KA5EjC,EAAK/M,MAAQ,CACXsM,WAAY,GACZC,cAAc,EACdC,kBAAkB,GAClBC,cAAa,EACbI,iBAAgB,EAChBE,eAAe,EACfE,aAAa,GACbC,YAAY,IAVG,E,sEAiFT,IAAD,OAEL,OAAQ,6BAChB,0BAAMjN,UAAU,yBAChB,yBAAKC,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAC9C,4BAAQtD,QAASa,KAAK2K,SAAUrJ,MAAwC,uBAAjCtB,KAAK5B,MAAMmD,SAASC,SAAoC,SAAW,OAExG,yBACczC,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZiC,eAAgB,kBAJhC,OASE,uBAAG/E,UAAU,iBAAiBC,MAAO,CAAC+B,WAAW,QAAjD,UAKF,4BAASQ,MAAwC,iBAAjCtB,KAAK5B,MAAMmD,SAASC,SAA8B,SAAW,MAAOrC,QAASa,KAAK4K,iBAClG,yBACc7L,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZiC,eAAgB,kBAJhC,eASE,uBAAG/E,UAAU,iBAAiBC,MAAO,CAAC+B,WAAW,QAAjD,kBAKF,4BAAQQ,MAAwC,eAAjCtB,KAAK5B,MAAMmD,SAASC,SAA4B,SAAW,MAAQrC,QAASa,KAAK8K,eAChG,yBACc/L,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZiC,eAAgB,kBAJhC,aASE,uBAAG/E,UAAU,iBAAiBC,MAAO,CAAC+B,WAAW,QAAjD,qBAKF,4BAAQQ,MAAwC,cAAjCtB,KAAK5B,MAAMmD,SAASC,SAA2B,SAAW,MAAQrC,QAASa,KAAK+K,cAC/F,yBACchM,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZiC,eAAgB,kBAJhC,WASE,uBAAG/E,UAAU,iBAAiBC,MAAO,CAAC+B,WAAW,QAAjD,qBAKF,4BAASQ,MAAwC,mBAAjCtB,KAAK5B,MAAMmD,SAASC,SAAgC,SAAW,MAAOrC,QAASa,KAAKiL,mBACpG,yBACclM,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZiC,eAAgB,kBAJhC,kBASE,uBAAG/E,UAAU,iBAAiBC,MAAO,CAAC+B,WAAW,QAAjD,qBAKF,4BAASQ,MAAwC,eAAjCtB,KAAK5B,MAAMmD,SAASC,SAA4B,SAAW,MAAOrC,QAASa,KAAKgL,eAChG,yBACcjM,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZiC,eAAgB,kBAJhC,aASE,uBAAG/E,UAAU,iBAAiBC,MAAO,CAAC+B,WAAW,QAAjD,eAMF,yBAAK/B,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAE5C,4BACE3D,UAAU,WACVC,MAAO,CAAE6D,OAAQ,YACjBzD,QAAS,kBACP,EAAKsM,oBAAoB,GAAG,MAJhC,WASA,4BACE3M,UAAU,WACVK,QAAS,kBAAM,EAAK+L,WAAW,MAAO,MAFxC,eAQJ,kBAAC,EAAD,eACU/I,KAAMnC,KAAKnB,MAAMuM,aACjB/I,QAASrC,KAAKuL,aACVvL,KAAKnB,MAHnB,CAIUkL,UAAW/J,KAAKnB,MAAMyM,aACtBjE,cAAerH,KAAKnB,MAAMsM,WAC1B7D,cAAetH,KAAKnB,MAAMwM,kBAC1BW,SAAUhM,KAAKiM,eACf9B,WAAYnK,KAAK5B,MAAM8N,cAGxB,kBAAC,EAAD,eACC7C,oBAAqBrJ,KAAKnB,MAAM6M,gBAChCxC,qBAAsBlJ,KAAKkJ,qBAC3B7B,cAAerH,KAAKnB,MAAMsM,WAC1B7D,cAAetH,KAAKnB,MAAMwM,kBAC3BvF,MAAO9F,KAAKnB,MAAMiH,OACd9F,KAAK5B,a,GAvNUkB,IAAMC,WC2XnB4M,E,YApXb,WAAY/N,GAAQ,IAAD,8BACjB,4CAAMA,KA6DRgO,WAAa,SAAAC,GACX,EAAK1M,SAAS,CAAE4D,KAAM8I,KA/DL,EAiEnBC,iBAAmB,SAAAD,GACjB,EAAK1M,SAAS,CAAE4M,WAAYF,KAlEX,EAwEnBG,iBAAmB,SAACxH,EAAW/D,GAC7B,EAAKtB,SAAS,CACZ8M,YAAY,EACZpB,kBAAkBrG,EAClBa,kBAAmB5E,KA5EJ,EA+EnByL,kBAAoB,WAClB,EAAK/M,SAAS,CACZ8M,YAAY,IAEd,EAAKrO,MAAMoN,iBACX,EAAKpN,MAAMyM,8BApFM,EAuFnBY,oBAAsB,SAACzG,EAAW/D,GAChC,EAAKtB,SAAS,CAAE+L,iBAAiB,EACjCP,WAAWlK,EACXoK,kBAAkBrG,KA1FD,EA+FnBkE,qBAAuB,WACrB,EAAKvJ,SAAS,CAAE+L,iBAAiB,KAhGhB,EAsGnBiB,eAAgB,SAAC3H,EAAW5B,EAAUwJ,EAAOC,EAAMC,GAC/C,EAAKnN,SAAS,CAAEoN,kBAAkB,EAAM5B,WAAW/H,EAAWiI,kBAAkBrG,EAAUgI,cAAcJ,EAAOC,MAAMA,EAAMC,QAAQA,KAvGpH,EA0GnBG,gBAAkB,WAChB,EAAKtN,SAAS,CAAEoN,kBAAkB,KA3GjB,EA+GnBG,YAAc,SAAAC,GACZ,OAAIA,EAAM,EACD,CACLC,WAAY,SAGP,CACLA,WAAY,QAtHC,EA2HnBC,UAAY,WACE,IAAIC,MAAMC,KAChBC,QA3HN,EAAK3O,MAAQ,CACXqN,WAAY,GACZ9I,UAAW,GACXC,UAAW,GACXC,OAAQ,GACRE,KAAM,SACNE,WAAY,GACZC,YAAa,GACbC,SAAU,GACVL,KAAM,MACNgJ,WAAY,GACZQ,kBAAiB,EACjBU,cAAe,EACfrL,iBAAiB,EACjBsL,cAAc,EACdC,WAAW,EACXC,UAAW,GACXnB,YAAY,EACZoB,SAAU,GACVC,aAAc,GACdpC,iBAAiB,EACjBE,eAAe,EACfpH,QAAS,GACTuJ,kBAAmB,GACnBC,eAAgB,GAChBC,kBAAmB,GACnBC,aAAc,GACdC,aAAc,GACdC,gBAAiB,GACjBC,oBAAqB,GACrBC,mBAAoB,GACpBC,eAAgB,GAChBC,aAAa,GACbC,WAAW,GACXC,iBAAiB,GACjB5I,OAAM,EACNuF,kBAAkB,GAClB2B,cAAc,GACdH,MAAM,GACNC,QAAQ,IAzCO,E,gFA6CA5M,EAAUC,GAC1BD,EAAUN,MAAMI,KAAK5B,MAAMwB,MAC9BI,KAAKL,SAAS,CAACuM,WAAWlM,KAAK5B,MAAMwB,S,0CAOnCI,KAAKL,SAAS,CAAEuM,WAAYlM,KAAK5B,MAAMwB,OACvCI,KAAKL,SAAS,CAAE8O,WAAYzO,KAAK5B,MAAMuQ,oBACvC3O,KAAKL,SAAS,CAAE6O,aAAcxO,KAAK5B,MAAMwQ,WACzC5O,KAAKkN,gB,+BAuEG,IAAD,OAEP,OACE,yBAAKpO,UAAU,oCACf,kBAAC,EAAD,iBAAmBkB,KAAK5B,MAAW4B,KAAKnB,MAAxC,CAA+CqN,WAAYlM,KAAKnB,MAAMqN,cACpE,yBACEnN,MAAO,CACL4D,KAAM,EACNlB,QAAS,OACToN,SAAU,WAGX7O,KAAKnB,MAAMqN,WAAW7K,OAAS,EAC9B,2BAAOtC,MAAO,CAAE2C,MAAO,SACrB,+BACE,4BACE,wBAAI3C,MAAO,CAAC+P,KAAK,EAAEC,SAAS,SAASC,IAAI,EAAEC,OAAO,IAAlD,cACA,wBAAIlQ,MAAO,CAAC+P,KAAK,IAAIC,SAAS,SAASC,IAAI,EAAEC,OAAO,IAApD,cACA,wBAAIlQ,MAAO,CAAC+P,KAAK,IAAIC,SAAS,SAASC,IAAI,EAAEC,OAAO,IAApD,UACA,wBAAIlQ,MAAO,CAAC+P,KAAK,EAAEC,SAAS,SAASC,IAAI,IAAzC,QACA,wBAAIjQ,MAAO,CAAC+P,KAAK,EAAEC,SAAS,SAASC,IAAI,IAAzC,WACA,wBAAIjQ,MAAO,CAAC+P,KAAK,EAAEC,SAAS,SAASC,IAAI,IAAzC,eACA,wBAAIjQ,MAAO,CAAC+P,KAAK,EAAEC,SAAS,SAASC,IAAI,IAAzC,aACA,wBAAIjQ,MAAO,CAAC+P,KAAK,EAAEC,SAAS,SAASC,IAAI,IAAzC,kBACA,wBAAIjQ,MAAO,CAAC+P,KAAK,EAAEC,SAAS,SAASC,IAAI,IAAzC,QACA,wBAAIjQ,MAAO,CAAC+P,KAAK,EAAEC,SAAS,SAASC,IAAI,IAAzC,cACA,wBAAIjQ,MAAO,CAAC+P,KAAK,EAAEC,SAAS,SAASC,IAAI,IAAzC,oBACA,wBAAIjQ,MAAO,CAAC+P,KAAK,EAAEC,SAAS,SAASC,IAAI,IAAzC,kBACA,wBAAIjQ,MAAO,CAAC+P,KAAK,EAAEC,SAAS,SAASC,IAAI,IAAzC,kBACA,wBAAIjQ,MAAO,CAAC+P,KAAK,EAAEC,SAAS,SAASC,IAAI,IAAzC,aAGHhP,KAAKnB,MAAMqN,WAAW1L,KAAI,SAAC0O,EAAOxO,GAAR,OACzB,2BAAO0I,IAAK1I,GACV,4BACE,wBAAI3B,MAAO,CAAC+P,KAAK,EAAEC,SAAS,SAASC,IAAI,EAAEC,OAAO,EAAErK,gBAAgB,UAClE,yBACE7F,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZiC,eAAgB,kBAGjBqL,EAAMlK,eAC4BmK,IAAlC,EAAK/Q,MAAMmQ,eAAe7N,GAC3B,KACA,uBACA0O,MAAM,gBACLtQ,UAAU,iBACVC,MAAO,CACL6F,gBAAgB,mBAChB/D,MAAM,QACN6B,OAAQ,UACR1D,SAAS,QACT8B,WAAW,OAEb3B,QAAS,kBACR,EAAKwN,eAAeuC,EAAMlK,UAAUkK,EAAM9L,UAAU8L,EAAMG,WAAWH,EAAMtL,SAASsL,EAAMxL,cAX5F,iBAuBJ,wBAAI3E,MAAO,CAAC+P,KAAK,IAAIC,SAAS,SAASC,IAAI,EAAEC,OAAO,EAAErK,gBAAgB,UAAWsK,EAAM9L,WACvF,wBAAIrE,MAAO,CAAC+P,KAAK,IAAIC,SAAS,SAASC,IAAI,EAAEC,OAAO,EAAErK,gBAAgB,UAAWsK,EAAMI,YACvF,4BAAKJ,EAAMzI,UACX,wBACE3D,GAAI,WAAapC,EACjB3B,MAAO,EAAKmO,YACV,EAAK9O,MAAMuQ,kBAAkBjO,KAG/B,0BAAMoC,GAAI,SAAWpC,GAClB,EAAKtC,MAAMmQ,eAAe7N,KAG/B,wBAAI5B,UAAU,gBAAgBgE,GAAG,eAC9BoM,EAAMG,YAET,wBAAIvQ,UAAU,iBAAiBoQ,EAAMtL,UACrC,wBAAI9E,UAAU,iBAAiBoQ,EAAMxL,YACrC,wBAAI5E,UAAU,iBACZ,0BAAMgE,GAAI,WAAapC,KAEjB,EAAKtC,MAAMmQ,eAAe7N,GAC1B6O,SAASL,EAAMG,aACf,EAAKjR,MAAMmQ,eAAe7N,GAC5B,KACAoB,QAAQ,GANZ,MASF,wBAAIhD,UAAU,iBAAiBoQ,EAAM7E,MACrC,wBAAIvL,UAAU,iBACZ,0BAAMgE,GAAI,cAAgBpC,IACtB,IAAMwO,EAAM7E,MAAMvI,QAAQ,KAGhC,wBAAIhD,UAAU,iBACZ,0BAAMgE,GAAI,eAAiBpC,IACvB,IAAOwO,EAAM7E,MAAMvI,QAAQ,KAGjC,wBAAIhD,UAAU,iBACZ,0BAAMgE,GAAI,eAAiBpC,IACvB,IAAOwO,EAAM7E,MAAMvI,QAAQ,KAGjC,4BACA,yBACI/C,MAAO,CACL0C,QAAS,OACTgB,cAAe,MACfoB,eAAgB,iBAGsB,IAAvC0L,SAAS,EAAKnR,MAAMwQ,SAASlO,IAC5B,6BACA,kBAAC8O,EAAA,EAAD,CAASJ,MAAM,oBACb,uBACEtM,GAAG,gBACHhE,UAAU,iBACVK,QAAS,kBACP,EAAKsM,oBAAoByD,EAAMlK,UAAUkK,EAAM9L,aAJnD,wBAYF,GAGF,yBAAKrE,MAAO,CAAE0C,QAAS,QAAUqB,GAAI,QAAUpC,GAC7C,kBAAC8O,EAAA,EAAD,CAASJ,MAAM,oBACb,uBACEtM,GAAG,gBACHhE,UAAU,iBACVK,QAAS,kBACP,EAAKsM,oBACHyD,EAAMlK,UACNkK,EAAM9L,aANZ,wBAeJ,kBAACoM,EAAA,EAAD,CAASJ,MAAM,QACb,uBACEtQ,UAAU,iBACVgE,GAAG,WACH3D,QAAS,kBAAM,EAAK+L,WAAW,OAAQgE,EAAMlK,UAAWkK,EAAM9L,aAHhE,SASF,kBAACoM,EAAA,EAAD,CAASJ,MAAM,UACb,uBACEtQ,UAAU,iBACVgE,GAAG,aACH3D,QAAS,kBACP,EAAKqN,iBAAiB0C,EAAMlK,UAAWkK,EAAM9L,aAJjD,mBAiBd,yBACErE,MAAO,CACL4D,KAAM,EACNlB,QAAS,OACToC,eAAgB,SAChBjC,WAAY,WALhB,kBAaJ,kBAAC,EAAD,eACEO,KAAMnC,KAAKnB,MAAMkO,iBACjB1K,QAASrC,KAAKiN,iBACVjN,KAAKnB,MAHX,CAIEwI,cAAerH,KAAKnB,MAAMsM,WAC1B7D,cAAetH,KAAKnB,MAAMwM,kBAC1BjE,aAAcpH,KAAKnB,MAAMmO,cACzBpJ,SAAU5D,KAAKnB,MAAMgO,MACrBnJ,WAAY1D,KAAKnB,MAAMiO,WAKzB,kBAAC2C,EAAD,eACEtM,OAAQnD,KAAKnB,MAAM4O,cACnBvK,UAAWlD,KAAKnB,MAAMqN,WACtB5J,iBAAkBtC,KAAKsC,iBACvBF,gBAAiBpC,KAAKnB,MAAMuD,gBAC5BsN,cAAe1P,KAAK0P,eAChB1P,KAAKnB,QAEX,kBAAC,EAAD,CACEuF,aAAcpE,KAAKnB,MAAM8O,UACzBrJ,cAAetE,KAAK2P,cACpBlL,aAAczE,KAAKnB,MAAM+O,YAE3B,kBAACgC,EAAD,CACEnK,SAAUzF,KAAKnB,MAAM4N,WACrBlH,cAAevF,KAAK0M,kBACpB7G,kBAAmB7F,KAAKnB,MAAMgH,kBAC9BG,YAAahG,KAAKnB,MAAMwM,kBACxBvF,MAAO9F,KAAKnB,MAAMiH,QAEpB,kBAAC,EAAD,eACEuD,oBAAqBrJ,KAAKnB,MAAM6M,gBAChCxC,qBAAsBlJ,KAAKkJ,qBAC3B7B,cAAerH,KAAKnB,MAAMsM,WAC1B7D,cAAetH,KAAKnB,MAAMwM,kBAC3BvF,MAAO9F,KAAKnB,MAAMiH,OACd9F,KAAK5B,a,GA7WckB,IAAMC,W,iBC2CvBsQ,E,YAjDb,WAAYzR,GAAQ,IAAD,8BACjB,4CAAMA,KACDS,MAAQ,CACXiR,WAAY,EACZC,WAAY,EACZxF,SAAU,GALK,E,sEAUjB,OACE,yBAAKzL,UAAU,mCACb,0BAAMgE,GAAG,eACP,2BAAO/D,MAAO,CAACC,SAAS,SACtB,kBAACgR,EAAA,EAAD,CACEC,QACmC,yBAAjCjQ,KAAK5B,MAAMmD,SAASC,SAItBmF,SAAU3G,KAAK5B,MAAM8R,kBACrBxQ,MAAM,KACNX,MAAO,CAAE8B,MAAO,WAChBkC,MAAM,yBAVV,yBAeF,0BAAMD,GAAG,eACP,2BAAO/D,MAAO,CAACC,SAAS,SACtB,kBAACgR,EAAA,EAAD,CACEC,QACmC,uBAAjCjQ,KAAK5B,MAAMmD,SAASC,SAItBmF,SAAU3G,KAAK5B,MAAM8R,kBACrBxQ,MAAM,KACNX,MAAO,CAAE8B,MAAO,WAChBkC,MAAM,uBAVV,4B,GA9BqBzD,IAAMC,WC0CtB4Q,E,YAzCb,WAAY/R,GAAQ,IAAD,8BACjB,4CAAMA,KAcRiP,UAAY,WACV,IAAI+C,EAAQ,IAAI9C,MAAMC,KAClB,EAAK1O,MAAMwR,SAAW,EAAKxR,MAAMyR,SACnCF,EAAM5C,OAEN4C,EAAMG,SAlBR,EAAK1R,MAAQ,CACXwR,QAAS,IAAIG,KAAK,aAAeC,qBACjCH,SAAU,IAAIE,KAAK,aAAeC,sBAJnB,E,iFAOE,IAAD,OAClBzQ,KAAK0Q,SAAWC,aAAY,WAC1B,EAAKtD,cACJ,O,6CAGHuD,cAAc5Q,KAAK0Q,Y,+BAWnB,OACE,yBACE5R,UAAU,uBACVC,MAAO,CACL0C,QAAS,OACTkB,KAAM,EACNkB,eAAgB,SAChBjC,WAAY,WAGb5B,KAAKnB,MAAMwR,QATd,IASwBrQ,KAAKnB,MAAMyR,SACjC,4BAAQnR,QAASa,KAAKqN,WAAtB,iB,GApCY/N,IAAMC,WCFb4H,EAAW,SAAAlC,GACtB,OAAO3G,IACJ0I,KAAK,4BAA6B,CACjC6J,QAAS5L,EAAS4E,WAClBnD,WAAYzB,EAASyB,WACrBvB,WAAYF,EAASE,WACrBqB,UAAUvB,EAASuB,UACnB/C,QAAQwB,EAASxB,QACjBgD,SAASxB,EAASwB,SAClBH,SAASrB,EAASqB,SAClBC,QAAQtB,EAASsB,QACjBU,YAAYhC,EAASgC,YACrB6J,YAAY7L,EAAS6L,YACrB5J,aAAa,KAEdzI,MAAK,SAAAC,QC2SKwH,E,YAzSb,WAAY9H,GAAQ,IAAD,8BACjB,4CAAMA,KAkDV+H,MAAM,WACJ,EAAKC,WACL,EAAKhI,MAAMiE,WAnDT,EAAKxD,MAAQ,CACXwH,iBAAiB,GACjBC,SAAS,GACTC,QAAQ,GACRC,UAAU,GACVC,SAAS,OACTC,WAAW,IAIf,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAZG,E,sEAiBVC,GACP7G,KAAKL,SAAL,eAAiBkH,EAAEC,OAAO7F,KAAO4F,EAAEC,OAAOpH,U,2BAIzCmH,GAAG,IAAD,OACPA,EAAEE,iBACF,IAAM9B,EAAW,CACf4E,WAAW7J,KAAK5B,MAAMyL,WACtBvD,SAAUtG,KAAKnB,MAAMyH,SACrBG,SAASzG,KAAKnB,MAAM4H,SACpBF,QAAQvG,KAAKnB,MAAM0H,QACnB9C,QAAQzD,KAAK5B,MAAMgJ,aACnBV,WAAW1G,KAAK5B,MAAMiJ,cACtBb,UAAUxG,KAAK5B,MAAMwF,SACrBuB,WAAWnF,KAAK5B,MAAMkJ,cACtBL,YAAYjH,KAAK5B,MAAMsF,WACvBoN,YAAY,YAGZ3J,EAASlC,GAAUxG,MAAK,SAAAC,GACxB,EAAKyH,QACL,EAAK/H,MAAMiE,aAEX/D,IACC0I,KAAK,oBAAoBhH,KAAK5B,MAAMkJ,cAAc,IAAItH,KAAK5B,MAAMyL,WAAW,IAAI7J,KAAK5B,MAAM2S,UAAU,aACtGzS,IACCC,IAAI,qBAAsB,CACzBC,QAAS,CAAE,eAAgB,wB,iCAY/BwB,KAAKL,SAAS,CACZ2G,SAAS,GACTG,SAAS,GACTF,QAAQ,O,+BAON,IAAIgB,EAEIF,EAAgBrH,KAAK5B,MAAMiJ,cAWnC,OAVEE,EAAsB,kBAAC1E,EAAA,EAAD,CAClB5B,KAAK,aACL6B,GAAG,iBACHC,MAAM,aACNC,QAAQ,WACRwE,KAAK,OACL9H,MAAO2H,IAKX,kBAACnF,EAAA,EAAD,CAAQC,KAAMnC,KAAK5B,MAAM+D,KAAME,QAASrC,KAAK5B,MAAMiE,QAASE,WAAS,GACnE,yBACExD,MAAO,CACL0C,QAAS,OACTe,SAAU,IACVC,cAAe,WAGjB,0BAAM1D,MAAO,CAAEE,QAAS,GAAID,SAAU,SAAtC,gBAEE,uBACEF,UAAU,iBACVC,MAAO,CAAE8C,MAAO,QAASa,OAAQ,WACjCvD,QAASa,KAAKmG,OAHhB,UAQF,8BAGA,yBAAKpH,MAAO,CAAE0C,QAAS,OAAQkB,KAAM,EAAGF,cAAe,WAGvD,yBAAK1D,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAC9C,yBACE1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGV2E,GAGF,yBACMxI,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGZ,kBAACC,EAAA,EAAD,CACE5B,KAAK,aACL6B,GAAG,iBACHC,MAAM,aACNC,QAAQ,WACRwE,KAAK,OACL9H,MAAOM,KAAK5B,MAAMkJ,kBAOtB,yBAAKvI,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAE5C,yBACE1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAKZ,kBAACC,EAAA,EAAD,CACE5B,KAAK,WACL6B,GAAG,iBACHC,MAAM,OACNC,QAAQ,WACRwE,KAAK,OACL9H,MAAM,UAMR,yBACEX,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGZ,kBAAC6E,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAY5E,GAAG,0BAAf,qBACE,kBAAC6E,EAAA,EAAD,CACAC,QAAQ,yBACR3G,KAAK,WACL6B,GAAG,iBACHsM,MAAM,4BACNpM,QAAQ,WACRtD,MAAOM,KAAKnB,MAAMyH,SAAUK,SAAU3G,KAAK2G,UAG3C,kBAACkB,EAAA,EAAD,CAAUnI,MAAM,MAAhB,QACA,kBAACmI,EAAA,EAAD,CAAUnI,MAAM,OAAhB,aAOJ,yBAAKX,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAC9C,yBACI1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGZ,kBAACC,EAAA,EAAD,CACE5B,KAAK,gBACL6B,GAAG,iBACHC,MAAM,cACNC,QAAQ,WACRwE,KAAK,SACL9H,MAAOM,KAAK5B,MAAMgJ,gBAKpB,yBACErI,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGZ,kBAACC,EAAA,EAAD,CACE5B,KAAK,YACL6B,GAAG,iBACHC,MAAM,YACNC,QAAQ,WACRwE,KAAK,SACL9H,MAAOM,KAAK5B,MAAMwF,YAMpB,yBACE7E,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGZ,kBAACC,EAAA,EAAD,CACE5B,KAAK,cACL6B,GAAG,iBACHC,MAAM,iBACNC,QAAQ,WACRwE,KAAK,SACL9H,MAAOM,KAAK5B,MAAMsF,eAOtB,yBAAK3E,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAC9C,yBACI1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGZ,kBAACC,EAAA,EAAD,CACE5B,KAAK,UACL6B,GAAG,iBACHC,MAAM,UACNC,QAAQ,WACRwE,KAAK,OACL9H,MAAOM,KAAKnB,MAAM0H,QAClBI,SAAU3G,KAAK2G,cAMrB,yBACE5H,MAAO,CACL0C,QAAS,OACTgB,cAAe,MACfxD,QAAS,YACT4E,eAAgB,WAChBC,UAAW,SAGb,4BAAQhF,UAAU,WAAWC,MAAO,CAAEgC,YAAa,QAClD5B,QAASa,KAAK8H,KAAKlB,KAAK5G,MACxBiD,UAAYjD,KAAKnB,MAAMyH,UAFxB,cAMA,4BAAQxH,UAAU,WAAYK,QAASa,KAAKmG,OAA5C,gB,GAhSkB7G,IAAMC,WCwRrB4M,E,YAvRX,WAAY/N,GAAQ,IAAD,8BACjB,4CAAMA,KAoER8O,YAAc,SAAAC,GACZ,OAAIA,EAAM,EACD,CACLC,WAAY,SAGP,CACLA,WAAY,QA5EC,EAiFnB4D,mBAAoB,SAAChM,EAAW5B,EAAUwJ,EAAOC,EAAMC,EAAQjD,EAAWkH,GACxE,EAAKpR,SAAS,CAAEsR,mBAAmB,EAAM9F,WAAW/H,EAAWiI,kBAAkBrG,EAAUgI,cAAcJ,EAAOC,MAAMA,EAAMnJ,WAAWoJ,EAAQjD,WAAWA,EAAWkH,UAAUA,KAlF9J,EAqFnBG,oBAAsB,WACpB,EAAKvR,SAAS,CAAEsR,mBAAmB,IACnC,EAAK7S,MAAM+S,0BAvFM,EA2FnBrJ,KAAK,SAACsJ,EAAUpM,EAAU5B,EAAUiM,EAAWzL,EAASF,EAAW2N,EAAUC,GAezEnK,EAbe,CACf0C,WAAWuH,EACX9K,SAAU,IACVG,SAAS,OACTF,QAAQ,sBACR9C,QAAQ4L,EACR3I,WAAWtD,EACXoD,UAAU5C,EACVuB,WAAWH,EACXiC,YAAYvD,EACZoN,YAAYO,IAGO5S,MAAK,SAAAC,OAIvBJ,IACA0I,KAAK,oBAAoBhC,EAAU,IAAIoM,EAAU,IAAIE,GACrDhT,IACAC,IAAI,qBAAsB,CACzBC,QAAS,CAAE,eAAgB,uBAhH/B,EAAKK,MAAQ,CACXqN,WAAY,GACZqF,YAAY,GACZnO,UAAW,GACXC,UAAW,GACXC,OAAQ,GACRE,KAAM,SACNE,WAAY,GACZC,YAAa,GACbC,SAAU,GACVL,KAAM,MACNgJ,WAAY,GACZnB,cAAc,EACdD,WAAY,GACZsC,cAAe,EACfrL,iBAAiB,EACjBsL,cAAc,EACd8D,cAAe,GACf7D,WAAW,EACXC,UAAW,GACXnB,YAAY,EACZoB,SAAU,GACVC,aAAc,GACdpC,iBAAiB,EACjBE,eAAe,EACfpH,QAAS,GACTuJ,kBAAmB,GACnBC,eAAgB,GAChBC,kBAAmB,GACnBC,aAAc,GACdC,aAAc,GACdC,gBAAiB,GACjBC,oBAAqB,GACrBC,mBAAoB,GACpBC,eAAgB,GAChBC,aAAa,GACbC,WAAW,GACXwC,mBAAkB,EAClBpH,WAAW,GACXkH,UAAU,IAzCK,E,gFA4CA7Q,EAAUC,GAE1BD,EAAUD,eAAeD,KAAK5B,MAAM6B,eACvCD,KAAKL,SAAS,CAACuM,WAAWlM,KAAK5B,MAAM6B,eACrCD,KAAK5B,MAAMoN,iBACXxL,KAAKL,SAAS,CAAC4R,YAAYvR,KAAK5B,MAAMwB,U,0CAQpCI,KAAK5B,MAAM+S,yBACXnR,KAAK5B,MAAMoN,iBACXxL,KAAKL,SAAS,CAAEuM,WAAYlM,KAAK5B,MAAM6B,eACvCD,KAAKL,SAAS,CAAE4R,YAAavR,KAAK5B,MAAMwB,OACxCI,KAAKL,SAAS,CAAE8O,WAAYzO,KAAK5B,MAAMuQ,oBAEvC3O,KAAKkN,gB,+BA2DG,IAAD,OAEP,OACE,yBAAKpO,UAAU,oCACZ,kBAAC,EAAD,iBAAmBkB,KAAK5B,MAAW4B,KAAKnB,MAAxC,CAA+CqN,WAAYlM,KAAKnB,MAAM0S,eACvE,yBACExS,MAAO,CACL4D,KAAM,EACNlB,QAAS,OACToN,SAAU,WAGX7O,KAAKnB,MAAM0S,YAAYlQ,OAAS,EAC/B,2BAAOtC,MAAO,CAAE2C,MAAO,SACrB,+BACE,4BACE,wBAAK3C,MAAO,CAAC+P,KAAK,EAAEC,SAAS,SAASC,IAAI,EAAEC,OAAO,IAAnD,cACA,wBAAIlQ,MAAO,CAAC+P,KAAK,IAAIC,SAAS,SAASC,IAAI,EAAEC,OAAO,IAApD,cACA,wBAAIlQ,MAAO,CAAC+P,KAAK,IAAIC,SAAS,SAASC,IAAI,EAAEC,OAAO,IAApD,UACA,wCACA,uCACA,2CACA,8CACA,yCACA,oCACA,gDACA,4CACA,0CAGHjP,KAAKnB,MAAM0S,YAAY/Q,KAAI,SAAC0O,EAAOuC,GAAR,OAE1B,2BAAOrI,IAAKqI,GAGXvC,EAAM1F,OAEL0F,EAAM1F,MAAMnI,OAAS,EACrBf,OAAOC,OAAO2O,EAAM1F,OAAOhJ,KAAI,SAACC,EAAEC,GAClC,IAA6B,IAA1BwO,EAAM1F,MAAM9I,GAAKgR,OAA4C,IAA1BxC,EAAM1F,MAAM9I,GAAKiR,KACtD,OAAQ,4BAET,wBAAI5S,MAAO,CAAC+P,KAAK,EAAEC,SAAS,SAASC,IAAI,EAAEC,OAAO,EAAErK,gBAAgB,UACpE,yBACI7F,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZiC,eAAgB,kBAInBqL,EAAMlK,UACN,uBACAoK,MAAM,OACJtQ,UAAU,iBACVC,MAAO,CACL6F,gBAAgB,mBAChB/D,MAAM,QACN6B,OAAQ,UACR1D,SAAS,QACT8B,WAAW,OAEb3B,QAAS,kBACR,EAAK6R,mBAAmB9B,EAAMlK,UAAUkK,EAAM9L,UAAU8L,EAAMG,WAAWH,EAAM1F,MAAM9I,GAAKkD,SAASsL,EAAM1F,MAAM9I,GAAKgD,WAAWwL,EAAM1F,MAAM9I,GAAKmJ,WAAW,EAAKzL,MAAMmQ,eAAekD,MAXxL,iBAqBH,wBAAI1S,MAAO,CAAC+P,KAAK,IAAIC,SAAS,SAASC,IAAI,EAAEC,OAAO,EAAErK,gBAAgB,UAAWsK,EAAM9L,WACvF,wBAAIrE,MAAO,CAAC+P,KAAK,IAAIC,SAAS,SAASC,IAAI,EAAEC,OAAO,EAAErK,gBAAgB,UAAWsK,EAAMI,YACvF,4BAAK7O,EAAE6F,UACP,wBACExD,GAAI,WAAapC,EACjB3B,MAAO,EAAKmO,YACV,EAAK9O,MAAMuQ,kBAAkB8C,KAG/B,0BAAM3O,GAAI,SAAWpC,GAElB,EAAKtC,MAAMmQ,eAAekD,KAM7B,wBAAI3S,UAAU,iBAAiB2B,EAAEgD,SACjC,wBAAI3E,UAAU,iBAAiBoQ,EAAM1F,MAAM9I,GAAKgD,YAChD,wBAAI5E,UAAU,iBAAiBoQ,EAAM1F,MAAM9I,GAAKkD,UAClD,wBAAI9E,UAAU,iBACZ,0BAAMgE,GAAI,WAAapC,KAEjB,EAAKtC,MAAMmQ,eAAe7N,GAC1B6O,SAASL,EAAMG,aACf,EAAKjR,MAAMmQ,eAAe7N,GAC5B,KACAoB,QAAQ,GANZ,MASF,wBAAIhD,UAAU,mBAAoBoQ,EAAMxL,WAAa,EAAKtF,MAAMmQ,eAAe7N,IAAQ,EAAKtC,MAAMmQ,eAAe7N,GAAQ,KAAMoB,QAAQ,GAAvI,KACA,wBAAIhD,UAAU,mBACVoQ,EAAMtL,SAAW,EAAKxF,MAAMmQ,eAAe7N,IAAQ,EAAKtC,MAAMmQ,eAAe7N,GAAQ,KAAMoB,QAAQ,GADvG,KAGA,4BACA,4BAAKrB,EAAEmR,QAAQC,MAAM,KAAK,SAOzB,UAOP,yBACE9S,MAAO,CACL4D,KAAM,EACNlB,QAAS,OACToC,eAAgB,SAChBjC,WAAY,WALhB,kBAaJ,kBAAC,EAAD,eACAO,KAAMnC,KAAKnB,MAAMoS,kBACjB5O,QAASrC,KAAKkR,qBACVlR,KAAKnB,MAHT,CAIAwI,cAAerH,KAAKnB,MAAMsM,WAC1B7D,cAAetH,KAAKnB,MAAMwM,kBAC1BjE,aAAcpH,KAAKnB,MAAMmO,cACzBpJ,SAAU5D,KAAKnB,MAAMgO,MACrBnJ,WAAY1D,KAAKnB,MAAM6E,WACvBmG,WAAY7J,KAAKnB,MAAMgL,WACvBkH,UAAW/Q,KAAKnB,MAAMkS,kB,GA5QAzR,IAAMC,W,kBC2IvBwE,G,YArJb,WAAY3F,GAAQ,IAAD,8BACjB,4CAAMA,KA0BN8O,YAAc,SAAAC,GACZ,OAAIA,EAAM,EACD,CACLC,WAAY,SAGP,CACLA,WAAY,QAlCD,EAuCjBZ,iBAAmB,SAACxH,EAAW/D,GAC7B,EAAKtB,SAAS,CACZ8M,YAAY,EACZpB,kBAAkBrG,EAClBa,kBAAmB5E,KA3CN,EA+CjByL,kBAAoB,WAClB,EAAK/M,SAAS,CACZ8M,YAAY,IAEd,EAAKrO,MAAMyM,8BAjDb,EAAKhM,MAAQ,CACTqN,WAAY,GACZO,YAAY,EACZpB,kBAAkB,GAClBxF,kBAAkB,GAClB6I,iBAAiB,GACjBoD,uBAAuB,GACvBhM,OAAM,EACNiM,QAAQ,GACRrG,gBAAgB,IAXH,E,gFAeAxL,EAAUC,GACxBD,EAAUwO,kBAAkB1O,KAAK5B,MAAMsQ,kBAAoBxO,EAAUN,MAAMI,KAAK5B,MAAMwB,OACvFI,KAAKL,SAAS,CAAC+O,iBAAiB1O,KAAK5B,MAAMsQ,mBAC3C1O,KAAKL,SAAS,CAACuM,WAAWlM,KAAK5B,MAAMwB,U,0CAIxCI,KAAKL,SAAS,CAAEuM,WAAYlM,KAAK5B,MAAMwB,OACvCI,KAAKL,SAAS,CAAC+O,iBAAiB1O,KAAK5B,MAAMsQ,mBAC3C1O,KAAKL,SAAS,CAAEmS,uBAAwB9R,KAAK5B,MAAM4T,kC,+BAgC1C,IAAD,OAGP,OACE,yBAAKlT,UAAU,oCACb,kBAAC,EAAD,iBAAmBkB,KAAK5B,MAAW4B,KAAKnB,MAAxC,CAA+CqN,WAAYlM,KAAKnB,MAAMqN,cACxE,yBAAKnN,MAAO,CAAE0C,QAAS,OAAQkB,KAAM,IACpC3C,KAAKnB,MAAM6P,iBAAiBrN,OAAO,EAClC,2BAAOtC,MAAO,CAAE2C,MAAO,SACnB,+BACE,4BACE,0CACA,0CACA,uCACA,4CACA,yCACA,uCACA,yCAGH1B,KAAKnB,MAAM6P,iBAAiBlO,KAAI,SAAC0O,EAAOxO,GAAR,OAC7B,2BAAO0I,IAAK1I,GACV,4BACE,4BACKwO,EAAMlK,WAGX,4BAAKkK,EAAM9L,WACX,wBACEN,GAAI,WAAapC,EACjB3B,MAAO,EAAKmO,YACV,EAAK9O,MAAM4T,8BAA8BtR,KAG3C,0BAAMoC,GAAI,SAAWpC,GAClB,EAAKtC,MAAM6T,2BAA2BvR,KAG3C,4BAAKwO,EAAMgD,aACX,4BAAKhD,EAAMxG,WACX,4BAAKwG,EAAM1K,SACX,4BACA,yBACIzF,MAAO,CACL0C,QAAS,OACTgB,cAAe,MACfoB,eAAgB,iBAKlB,kBAAC2L,EAAA,EAAD,CAASJ,MAAM,UACb,uBACEtQ,UAAU,iBACVgE,GAAG,aACH3D,QAAS,kBACP,EAAKqN,iBAAiB0C,EAAMlK,UAAWkK,EAAM9L,aAJjD,mBAgBd,yBACDrE,MAAO,CACL4D,KAAM,EACNlB,QAAS,OACToC,eAAgB,SAChBjC,WAAY,WALb,oBAYL,kBAACgO,EAAD,CACAnK,SAAUzF,KAAKnB,MAAM4N,WACrBlH,cAAevF,KAAK0M,kBACpB7G,kBAAmB7F,KAAKnB,MAAMgH,kBAC9BG,YAAahG,KAAKnB,MAAMwM,kBACxBvF,MAAO9F,KAAKnB,MAAMiH,a,GA9IOxG,IAAMC,W,SCMhCwE,G,YACJ,WAAY3F,GAAQ,IAAD,8BACjB,4CAAMA,KAmCV+T,gBAAkB,SAAC1O,EAAQ2O,EAAIpN,EAAU5B,EAAUiP,EAAMvP,EAAGwP,EAAGC,GAC7D,EAAKnU,MAAMoU,cAAc/O,EAAQ2O,EAAIpN,EAAU5B,GAC/C,EAAKsM,cAAcjM,EAAQ2O,EAAIpN,EAAUqN,EAAMC,EAAGC,GAClD,EAAKE,oBAAoB3P,GACzB,EAAK1E,MAAMgB,QAAQC,KAAK,oBAxCL,EA2CrBqQ,cAAgB,SAACjM,EAAQ2O,EAAIpN,EAAUqN,EAAMC,EAAGC,GAC9C,IAEMG,EAFM,EAEOC,KAAKC,UADZ,IADA,GAUVrJ,EAPe,CACfpE,WAAWH,EAEXwE,MAAM,CAAElD,SAAU8L,EAAK3O,QAASA,EAASmO,QAAQS,EAAMxI,WAAW6I,EAAKf,MAAK,EAAMD,MAAK,EAAMhO,WAAW4O,EAAG1O,SAAS2O,GACpHhI,UAAS,IAGqB9L,MAAK,SAAAC,QAtDlB,EA4DrB+T,oBAAoB,SAAC3P,GAInB2G,EAHiB,CACjBC,IAAI5G,IAE0BrE,MAAK,SAAAC,GACjC,EAAKN,MAAMoN,qBA/DX,EAAK3M,MAAQ,CACT4N,YAAY,EACZpB,kBAAkB,GAClBxF,kBAAkB,GAClB6I,iBAAiB,GACjBoD,uBAAuB,GACvBhM,OAAM,EACNiM,QAAQ,GACRrG,gBAAgB,GAChBmH,kBAAkB,GAClB3G,WAAW,IAZE,E,gFAiBAhM,EAAUC,GACxBD,EAAUN,MAAMI,KAAK5B,MAAMwB,MAC5BI,KAAKL,SAAS,CAACuM,WAAWlM,KAAK5B,MAAMwB,S,0CAIrB,IAAD,OACjBI,KAAKL,SAAS,CAACuM,WAAWlM,KAAK5B,MAAMwB,ObQ9BtB,IACFC,IAAI,aAAc,CACfC,QAAS,CAAE,eAAgB,sBAE9BC,MAAK,SAAAC,GAEF,OAAOA,EAAIkB,KAAKoI,UabDvJ,MAAK,SAAAmB,GAC1B,EAAKD,SAAS,CACZkT,kBAAkB,YAAKjT,U,+BA0CnB,IAAD,OAIP,OACE,yBAAKd,UAAU,oCACb,kBAAC,EAAD,iBAAmBkB,KAAK5B,MAAW4B,KAAKnB,MAAxC,CAA+CqN,WAAYlM,KAAKnB,MAAMqN,cACxE,yBAAKnN,MAAO,CAAE0C,QAAS,OAAQkB,KAAM,IACpC3C,KAAKnB,MAAMgU,kBAAkBxR,OAAS,EACrC,2BAAOtC,MAAO,CAAE2C,MAAO,SACnB,+BACE,4BACE,0CACA,0CACA,oCACA,yCACA,uCACA,yCACA,uCACA,yCAKG1B,KAAKnB,MAAMgU,kBAAkBrS,KAAI,SAAC0O,EAAOxO,GAAR,OAChC,2BAAO0I,IAAK1I,GAEV,4BACE,4BACA,yBACI3B,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZiC,eAAgB,kBAGjBqL,EAAMlK,UACP,uBACClG,UAAU,iBACVC,MAAO,CACL8B,MAAO,mBACP6B,OAAQ,WAEVvD,QAAS,kBACR,EAAKgT,gBAAgBjD,EAAMzL,QAAQyL,EAAM5I,SAAS4I,EAAMlK,UAAUkK,EAAM9L,UAAU8L,EAAM4D,YAAY5D,EAAMxF,IAAIwF,EAAMxL,WAAWwL,EAAMtL,YAPvI,aAeJ,4BAAKsL,EAAM9L,WACX,wBACEN,GAAI,WAAapC,GAGhBwO,EAAM4D,YAAYjB,MAAM,KAAK,IAEhC,4BAAK3C,EAAM5I,UACX,4BAAK4I,EAAMzI,UACX,4BAAKyI,EAAMtL,UACX,4BAAKsL,EAAMzL,SACX,4BAAKyL,EAAM3I,eAQxB,yBACDxH,MAAO,CACL4D,KAAM,EACNlB,QAAS,OACToC,eAAgB,SAChBjC,WAAY,WALb,wB,GA7IqBtC,IAAMC,WAsKvBwT,gBAAQ,MAPI,SAAAC,GACzB,MAAM,CACFR,cAAc,SAAC9S,EAAMuT,EAAOC,EAAOC,GAArB,OAA8BH,EAAS,CAACxL,KC7KjC,eD6K+D4L,QAAQ1T,EAAM2T,SAASJ,EAAOK,SAASJ,EAAOK,SAASJ,QAKlIJ,CAAiChP,IErK1CA,G,YACJ,WAAY3F,GAAQ,IAAD,8BACjB,4CAAMA,KAsCV+T,gBAAkB,SAACtI,EAAWpG,EAAQ2O,EAAIpN,EAAU5B,EAAUiP,EAAMvP,GAClE,EAAK1E,MAAMoV,aAAa3J,EAAWuI,EAAIpN,EAAU5B,GACjD,EAAKqP,oBAAoB5I,EAAW/G,EAAGkC,GACvC,EAAK5G,MAAMgB,QAAQC,KAAK,wBA1CL,EA6CrBoT,oBAAoB,SAAC5I,EAAW/G,EAAGO,GAMjCsG,EALiB,CACjBD,IAAI5G,EACJO,UAAUA,EACVwG,WAAWA,IAEuBpL,MAAK,SAAAC,QAnDpB,EAuDrB+U,WAAW,SAACzO,EAAU6E,EAAWjG,EAASF,GACxC,IAAMwB,EAAKF,EAAU,IAAI6E,EAAW,IAAIjG,EAAS,IAAIF,EACrDpF,IACC0I,KAAK,0BAA0B9B,GAC/BzG,MAAK,SAAA4G,GACJ1G,QAAQC,IAAI,mBAGd,EAAKR,MAAMgB,QAAQC,KAAK,cA7DtB,EAAKR,MAAQ,CACT4N,YAAY,EACZpB,kBAAkB,GAClBxF,kBAAkB,GAClB6I,iBAAiB,GACjBoD,uBAAuB,GACvBhM,OAAM,EACNiM,QAAQ,GACRrG,gBAAgB,GAChBmH,kBAAkB,GAClB3G,WAAW,IAZE,E,gFAgBFhM,EAAUC,GACxBD,EAAUN,OAAOI,KAAK5B,MAAMwB,MAC7BI,KAAKL,SAAS,CAACuM,WAAWlM,KAAK5B,MAAMwB,S,0CAOnB,IAAD,OACjBI,KAAK5B,MAAMoN,iBACXxL,KAAKL,SAAS,CAACuM,WAAWlM,KAAK5B,MAAMwB,OfgB9BtB,IACFC,IAAI,iBAAkB,CACnBC,QAAS,CAAE,eAAgB,sBAE9BC,MAAK,SAAAC,GAEF,OAAOA,EAAIkB,KAAKoI,UerBGvJ,MAAK,SAAAmB,GAC9B,EAAKD,SAAS,CACZkT,kBAAkB,YAAKjT,U,+BAoCnB,IAAD,OAMP,OACE,yBAAKd,UAAU,oCACV,kBAAC,EAAD,iBAAmBkB,KAAK5B,MAAW4B,KAAKnB,MAAxC,CAA+CqN,WAAYlM,KAAKnB,MAAMqN,cAC3E,yBAAKnN,MAAO,CAAE0C,QAAS,OAAQkB,KAAM,IAClC3C,KAAKnB,MAAMgU,kBAAkBxR,OAAO,EACpC,2BAAOtC,MAAO,CAAE2C,MAAO,SACvB,+BACE,4BACE,0CACA,0CACA,oCACA,2CACA,uCACA,yCACA,8CACA,2CACA,uCACA,yCAIH1B,KAAKnB,MAAMgU,kBAAkBrS,KAAI,SAAC0O,EAAOxO,GAAR,OAC9B,2BAAO0I,IAAK1I,GAEV,4BACE,4BACA,yBACI3B,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZiC,eAAgB,kBAGjBqL,EAAMlK,UACP,uBACAoK,MAAM,eACLtQ,UAAU,iBACVC,MAAO,CACL8B,MAAO,mBACP6B,OAAQ,WAEVvD,QAAS,kBACR,EAAKgT,gBAAgBjD,EAAMrF,WAAWqF,EAAMzL,QAAQyL,EAAM5I,SAAS4I,EAAMlK,UAAUkK,EAAM9L,UAAU8L,EAAM4D,YAAY5D,EAAMxF,OAR7H,YAgBJ,4BAAKwF,EAAM9L,WACX,wBACEN,GAAI,WAAapC,GAGhBwO,EAAM4D,YAAYjB,MAAM,KAAK,IAEhC,4BAAK3C,EAAM5I,UACX,4BAAK4I,EAAMzI,UACX,4BAAKyI,EAAMtL,UACX,4BAAKsL,EAAMxL,YACX,4BAAKwL,EAAMwE,UACX,4BAAKxE,EAAM3I,SACX,4BACG,yBACIxH,MAAO,CACL0C,QAAS,OACTgB,cAAe,MACfoB,eAAgB,iBAKlB,kBAAC2L,EAAA,EAAD,CAASJ,MAAM,UACb,uBACEtQ,UAAU,iBACVgE,GAAG,aACH3D,QAAS,kBACP,EAAKsU,WAAWvE,EAAMlK,UAAUkK,EAAMrF,WAAWqF,EAAMtL,SAASsL,EAAMxL,cAJ1E,mBAgBjB,yBACC3E,MAAO,CACL4D,KAAM,EACNlB,QAAS,OACToC,eAAgB,SAChBjC,WAAY,WALf,6B,GAnKuBtC,IAAMC,WA6LvBwT,gBAAQ,MAPI,SAAAC,GACzB,MAAM,CACJQ,aAAa,SAAC9T,EAAMuT,EAAOC,EAAOC,GAArB,OAA8BH,EAAS,CAACxL,KDpMhC,aCoM4D4L,QAAQ1T,EAAM2T,SAASJ,EAAOK,SAASJ,EAAOK,SAASJ,QAK7HJ,CAAiChP,I,SCuGjCmC,G,YA9Rb,WAAY9H,GAAQ,IAAD,8BACjB,4CAAMA,KAkBR0L,WAAW,YACmB,IAAzB,EAAK1L,MAAM2L,UACd,EAAKpK,SAAS,CAACoK,WAAU,IAEvB,EAAKpK,SAAS,CAACoK,WAAU,KAvBV,EA0BnBzB,cAAgB,WACdL,IACGxJ,MAAK,SAAAmB,GACJ,EAAKD,SAAS,CACZ4I,mBAAoB3I,OAIvB4I,OAAM,SAAAC,GACL9J,QAAQC,IAAI6J,OAnCC,EAkGrBtC,MAAM,WACJ,EAAKC,WACL,EAAKhI,MAAMiE,WAlGT,EAAKxD,MAAQ,CACXwH,iBAAiB,GACjB2D,YAAY,GACZxD,UAAU,GACVC,SAAS,GACTC,WAAW,GACX6B,mBAAmB,GACnB0B,OAAM,EACNF,UAAU,IAEd,EAAKpD,SAAW,EAAKA,SAASC,KAAd,gBAZG,E,iFAejB5G,KAAKsI,kB,+BAwBEzB,GACP7G,KAAKL,SAAS,CAACsK,OAAM,IACrBjK,KAAKL,SAAL,eAAiBkH,EAAEC,OAAO7F,KAAO4F,EAAEC,OAAOpH,U,2BAKzCmH,GAAG,IAAD,OACPA,EAAEE,iBACF,IAAImD,EAAc,GAKlB,GAJA5J,OAAOC,OAAOP,KAAK5B,MAAM+L,YAAY3J,KAAI,SAAAC,GACvCyJ,EAAc7K,KAAKoB,EAAE2C,cAEZ8G,EAAcE,SAASpK,KAAKnB,MAAM6H,YAE7C,OADS1G,KAAKL,SAAS,CAACsK,OAAM,IACvB,KAEFjK,KAAKL,SAAS,CAACsK,OAAM,IC1EF,SAAAhF,GACtB,OAAO3G,IACJ0I,KAAK,YAAa,CACjBN,WAAYzB,EAASyB,WACrBsD,YAAa/E,EAAS+E,YACtBxD,UAAUvB,EAASuB,UACnB9C,WAAWuB,EAASvB,WACpB2G,KAAKpF,EAASoF,KACd5D,SAASxB,EAASwB,SAClB8D,UAAS,EACTD,SAAS,KAEV7L,MAAK,SAAA4G,ODyEV8B,CATiB,CACjBT,WAAY1G,KAAKnB,MAAM6H,WACvBsD,YAAahK,KAAKnB,MAAMmL,YACxBxD,UAAWxG,KAAKnB,MAAM2H,UACtB6D,KAAKrK,KAAKnB,MAAMwL,KAChB5D,SAASzG,KAAKnB,MAAM4H,SACpB8D,UAAS,EACTD,SAAS,KAEU7L,MAAK,SAAAC,GACxB,EAAKiB,SAAS,CAAC+G,WAAW,KAC1B,EAAK/G,SAAS,CAACqK,YAAY,KAC3B,EAAKrK,SAAS,CAAC6G,UAAU,KACzB,EAAK7G,SAAS,CAAC8G,SAAS,KACxB,EAAKrI,MAAMiE,e,+BAMFwE,GAAG,IAAD,OACTA,EAAEE,iBC/EwB,SAAA9B,GAC1B,IAAIC,EAAKD,EAASE,WAClB,OAAO7G,IACJ0I,KAAK,cAAc9B,EAAI,CACtB8E,YAAa/E,EAAS+E,YACtBxD,UAAUvB,EAASuB,UACnB9C,WAAWuB,EAASvB,WACpB2G,KAAKpF,EAASoF,KACd5D,SAASxB,EAASwB,WAEnBhI,MAAK,SAAA4G,GACJ1G,QAAQC,IAAI,mBD8EhB4L,CATiB,CACjBrF,WAAWnF,KAAK5B,MAAMkJ,cACtBZ,WAAW1G,KAAK5B,MAAMiJ,cACtB2C,YAAahK,KAAKnB,MAAMmL,YACxBxD,UAAWxG,KAAKnB,MAAM2H,UACtB6D,KAAKrK,KAAKnB,MAAMwL,KAChB5D,SAASzG,KAAKnB,MAAM4H,WAGGhI,MAAK,SAAAC,GAC5B,EAAKiB,SAAS,CAACqK,YAAY,KAC3B,EAAKrK,SAAS,CAAC6G,UAAU,KACzB,EAAK7G,SAAS,CAAC8G,SAAS,KACxB,EAAKrI,MAAMiE,e,iCAWbrC,KAAKL,SAAS,CACZ+G,WAAW,GACXsD,YAAY,GACZxD,UAAU,GACVC,SAAS,GACTwD,OAAM,M,+BAUN,IAAI1C,EACF,IAA4B,IAAzBvH,KAAK5B,MAAM2L,UACZxC,EAEC,kBAACI,EAAA,EAAD,CACC1G,KAAK,aACL6B,GAAG,iBACHC,MAAM,OACNC,QAAQ,WACRtD,MAAOM,KAAKnB,MAAM6H,WAClBC,SAAU3G,KAAK2G,UAIdrG,OAAOC,OAAOP,KAAKnB,MAAM0J,oBAAoB/H,KAAI,SAACC,EAAE0I,GACjD,OAAO,kBAACtB,EAAA,EAAD,CAAUuB,IAAKD,EAAOzJ,MAAOe,GAAIA,WAO5C,CACF,IAAM4G,EAAgBrH,KAAK5B,MAAMiJ,cACjCE,EAAsB,kBAAC1E,EAAA,EAAD,CAClB5B,KAAK,aACL6B,GAAG,iBACHC,MAAM,aACNC,QAAQ,WACRwE,KAAK,OACL9H,MAAO2H,IAIb,OACE,kBAACnF,EAAA,EAAD,CAAQC,KAAMnC,KAAK5B,MAAM+D,KAAME,QAASrC,KAAK5B,MAAMiE,SACjD,yBACEtD,MAAO,CACL0C,QAAS,OACTe,SAAU,IACVC,cAAe,WAGjB,0BAAM1D,MAAO,CAAEE,QAAS,GAAID,SAAU,SAAtC,iBAEE,uBACEF,UAAU,iBACVC,MAAO,CAAE8C,MAAO,QAASa,OAAQ,WACjCvD,QAASa,KAAK5B,MAAMiE,SAHtB,UAQF,8BAGA,yBAAKtD,MAAO,CAAE0C,QAAS,OAAQkB,KAAM,EAAGF,cAAe,WAGvD,yBAAK1D,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAC9C,yBACE1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGb2E,EACIvH,KAAKnB,MAAMoL,MAAM,0BAAMlL,MAAO,CAAC8B,MAAM,MAAM7B,SAAS,SAAnC,yBAAyE,OAI3F,yBAAKD,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAE5C,yBACE1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGZ,kBAAC+E,EAAA,EAAD,CACE1G,KAAK,WACL6B,GAAG,iBACHC,MAAM,OACNC,QAAQ,WACRtD,MAAOM,KAAKnB,MAAM4H,SAAUE,SAAU3G,KAAK2G,UAE3C,kBAACkB,EAAA,EAAD,CAAUnI,MAAM,UAAhB,UACA,kBAACmI,EAAA,EAAD,CAAUnI,MAAM,WAAhB,WACA,kBAACmI,EAAA,EAAD,CAAUnI,MAAM,YAAhB,YACA,kBAACmI,EAAA,EAAD,CAAUnI,MAAM,eAAhB,eACA,kBAACmI,EAAA,EAAD,CAAUnI,MAAM,UAAhB,aAMJ,yBAAKX,MAAO,CAAE0C,QAAS,OAAQgB,cAAe,QAC5C,yBACE1D,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGZ,kBAACC,EAAA,EAAD,CACE5B,KAAK,cACL6B,GAAG,iBACHC,MAAM,cACNC,QAAQ,WACRwE,KAAK,SACL9H,MAAOM,KAAKnB,MAAMmL,YAClBrD,SAAU3G,KAAK2G,YAIjB,yBACE5H,MAAO,CACL0C,QAAS,OACTgB,cAAe,SACfE,KAAM,EACNC,OAAQ,KAGZ,kBAACC,EAAA,EAAD,CACE5B,KAAK,YACL6B,GAAG,iBACHC,MAAM,YACNC,QAAQ,WACRwE,KAAK,SACL9H,MAAOM,KAAKnB,MAAM2H,UAClBG,SAAU3G,KAAK2G,cAOrB,yBACE5H,MAAO,CACL0C,QAAS,OACTgB,cAAe,MACfxD,QAAS,YACT4E,eAAgB,WAChBC,UAAW,SAGb,4BAAQhF,UAAU,WAAWC,MAAO,CAAEgC,YAAa,QAClD5B,QAAUa,KAAK5B,MAAM2L,UAAmC/J,KAAKyK,SAAS7D,KAAK5G,MAA1CA,KAAK8H,KAAKlB,KAAK5G,MAChDiD,UAAYjD,KAAKnB,MAAMmL,cAAgBhK,KAAKnB,MAAM2H,YAAcxG,KAAKnB,MAAM4H,UAF5E,aAMA,4BAAQ3H,UAAU,WAAYK,QAASa,KAAKmG,OAA5C,gB,GArRkB7G,IAAMC,WET9BwE,G,YACJ,WAAY3F,GAAQ,IAAD,8BACjB,4CAAMA,KA2BVuV,cAAgB,SAAC/T,GACjB,EAAKD,SAAS,CAACiU,UAAUhU,KA7BJ,EAiCrBiU,eAAgB,WACd,EAAKlU,SAAS,CAACmU,aAAa,EAAKjV,MAAMiV,eAlCpB,EAqCrBC,UAAY,SAACC,EAAQC,EAAWjP,EAAU5B,EAAUkD,EAAS4N,GAC3DC,KAAE,QAAQD,GAAOE,OACjB,IAAMlP,EAAK8O,EAAQ,IAAIC,EAAW,IAAIjP,EAAU,IAAI5B,EAAU,IAAIkD,EAClEhI,IACC0I,KAAK,aAAa9B,IAvCjB,EAAKrG,MAAQ,CACT4N,YAAY,EACZpB,kBAAkB,GAClBxF,kBAAkB,GAClBC,OAAM,EACNiM,QAAQ,GACRrG,gBAAgB,GAChBmH,kBAAkB,GAClBe,UAAU,GACVzR,MAAK,EACLkS,OAAM,EACNP,aAAY,GAbC,E,iFAiBC,IAAD,OACnBxV,IACCC,IAAI,iDAAkD,CACrDC,QAAS,CAAE,eAAgB,sBAE9BC,MAAK,SAAAC,GACF,EAAKiV,cAAcjV,EAAIkB,W,+BAqBf,IAAD,OAID0U,EAAc,YAAItU,KAAKnB,MAAM+U,WAAWW,MAAK,SAACC,EAAGC,GACrD,OAAIlF,SAASiF,EAAEE,uBAA0BnF,SAASkF,EAAEC,wBAAiC,EACjFnF,SAASiF,EAAEE,uBAA0BnF,SAASkF,EAAEC,uBAAgC,EAC7E,KAGT,OACE,yBAAK5V,UAAU,oCACf,yBAAKC,MAAO,CAAE0C,QAAS,OAAQkB,KAAM,IACnC,2BAAO5D,MAAO,CAAE2C,MAAO,SACnB,+BACE,4BACE,4BACA,yBACQ3C,MAAO,CACL0C,QAAS,OACTG,WAAY,SACZiC,eAAgB,kBAJ1B,uBAOsB,4BAAQ8C,SAAU3G,KAAK6T,gBAC3C,4BAAQnU,MAAM,QAAd,6BACA,4BAAQA,MAAM,WAAd,mCAIF,iDACA,uDACA,wCACA,sCACA,0CACEM,KAAKnB,MAAMiV,YAAgD,KAApC,4DAI7B,gCAGCQ,EAEA9T,KAAI,SAACmU,EAAKjU,GAAN,OACD,2BAAO0I,IAAK1I,GACV6O,SAASoF,EAAID,uBAAyB,IAAM,EAAK7V,MAAMiV,aAAevE,SAASoF,EAAID,uBAAyB,IAC7G,wBAAI5R,GAAI,OAAOpC,GACf,4BACKiU,EAAIV,YAET,4BAAKU,EAAIC,YACR,4BAAKrF,SAASoF,EAAID,wBACnB,4BAAKC,EAAIE,aACR,4BACA,yBACM9V,MAAO,CACL0C,QAAS,OACTgB,cAAe,MACfoB,eAAgB,iBAKlB,kBAAC2L,EAAA,EAAD,CAASJ,MAAM,cACb,uBACEtQ,UAAU,iBACVgE,GAAG,aACH3D,QAAS,kBACP,EAAK4U,UAAUY,EAAIE,YAAYF,EAAIV,WAAW,EAAK7V,MAAM0W,MAAM,EAAK1W,MAAM2W,MAAMpC,KAAKqC,MAAOzF,SAASoF,EAAID,uBAAuB,IAAQnF,SAAS,EAAKnR,MAAMgU,MAAM1R,KAJtK,YAYR,4BAAKiS,KAAKqC,MAAOzF,SAASoF,EAAID,uBAAuB,IAAQnF,SAAS,EAAKnR,MAAMgU,OAGlF,4BAAKO,KAAKqC,MAASzF,SAASoF,EAAID,uBAAuB,IAAUnF,SAAS,EAAKnR,MAAMgU,KAAQ7C,SAAS,EAAKnR,MAAM6W,QAAS,OAKzH,KAED1F,SAASoF,EAAID,uBAAyB,GAAK,EAAK7V,MAAMiV,aAAevE,SAASoF,EAAID,uBAAyB,IAC3G,4BACA,4BACKC,EAAIV,YAET,4BAAKU,EAAIC,YACR,4BAAKrF,SAASoF,EAAID,wBAClB,4BAAKC,EAAIE,aACX,4BACA,yBACQ9V,MAAO,CACL0C,QAAS,OACTgB,cAAe,MACfoB,eAAgB,iBAKlB,kBAAC2L,EAAA,EAAD,CAASJ,MAAM,cACb,uBACEtQ,UAAU,iBACVgE,GAAG,aACH3D,QAAS,kBACP,EAAK4U,UAAUY,EAAIE,YAAYF,EAAIV,WAAW,EAAK7V,MAAM0W,MAAM,EAAK1W,MAAM2W,MAAMpC,KAAKqC,MAAOzF,SAASoF,EAAID,uBAAuB,IAAQnF,SAAS,EAAKnR,MAAMgU,MAAM1R,KAJtK,YAYT,4BAAKiS,KAAKqC,MAAOzF,SAASoF,EAAID,uBAAuB,IAAQnF,SAAS,EAAKnR,MAAMgU,OAC/E,EAAKvT,MAAMiV,YAAsB,KAAV,8BAIxB,WAQX,kBAACoB,GAAD,CACA/S,KAAMnC,KAAKnB,MAAMsD,Y,GAjLQ7C,IAAMC,WAsMvBwT,iBATS,SAAAlU,GACtB,MAAO,CACLiW,MAAOjW,EAAMsW,QAAQnQ,UACrB+P,MAAOlW,EAAMsW,QAAQ/R,UACrB6R,OAAQpW,EAAMsW,QAAQC,aACtBhD,IAAMvT,EAAMsW,QAAQ7O,YAIe,KAAxByM,CAA8BhP,ICtMvCA,G,YACJ,WAAY3F,GAAQ,IAAD,8BACjB,4CAAMA,KA2BVuV,cAAgB,SAAC/T,GACjB,EAAKD,SAAS,CAACiU,UAAUhU,KA7BJ,EAiCrBiU,eAAgB,WACd,EAAKlU,SAAS,CAACmU,aAAa,EAAKjV,MAAMiV,eAlCpB,EAqCrBuB,cAAgB,SAACrB,EAAQC,EAAWjP,EAAU5B,EAAUkD,EAAS4N,GAC/DC,KAAE,QAAQD,GAAOE,OACjB,IAAMlP,EAAK8O,EAAQ,IAAIC,EAAW,IAAIjP,EAAU,IAAI5B,EAAU,IAAIkD,EAClEhI,IACC0I,KAAK,iBAAiB9B,IAvCrB,EAAKrG,MAAQ,CACT4N,YAAY,EACZpB,kBAAkB,GAClBxF,kBAAkB,GAClBC,OAAM,EACNiM,QAAQ,GACRrG,gBAAgB,GAChBmH,kBAAkB,GAClBe,UAAU,GACVzR,MAAK,EACLkS,OAAM,EACNP,aAAY,GAbC,E,iFAiBC,IAAD,OACnBxV,IACCC,IAAI,qDAAsD,CACzDC,QAAS,CAAE,eAAgB,sBAE9BC,MAAK,SAAAC,GACF,EAAKiV,cAAcjV,EAAIkB,W,+BAqBf,IACJ0V,EADG,OAOP,OAJEA,EADoB,QAAnBtV,KAAK5B,MAAMgU,IACA,EAEG,GAGf,yBAAKtT,UAAU,oCACf,yBAAKC,MAAO,CAAE0C,QAAS,OAAQkB,KAAM,IACnC,2BAAO5D,MAAO,CAAE2C,MAAO,SACnB,+BACE,4BACE,mDACA,iDACA,wCACA,sCACA,mDAGJ,gCAGC1B,KAAKnB,MAAM+U,UAAUpT,KAAI,SAACmU,EAAKjU,GAAN,OACtB,2BAAO0I,IAAK1I,GACV,EAAKtC,MAAMmX,MAAQZ,EAAIa,OACzB,wBAAI1S,GAAI,OAAOpC,GACf,4BAAKiU,EAAIV,YACT,4BAAKU,EAAIC,YACT,4BAAKD,EAAIE,aACT,4BACA,yBACQ9V,MAAO,CACL0C,QAAS,OACTgB,cAAe,MACfoB,eAAgB,iBAKlB,kBAAC2L,EAAA,EAAD,CAASJ,MAAM,cACb,uBACEtQ,UAAU,iBACVgE,GAAG,aACH3D,QAAS,kBACP,EAAKkW,cAAcV,EAAIE,YAAYF,EAAIV,WAAW,EAAK7V,MAAMmX,IAAI,EAAKnX,MAAMqX,IAAK9C,KAAK+C,MAAMnG,SAASoF,EAAIvC,KAAOkD,GAAc5U,KAJlI,YAYT,4BAAMiS,KAAK+C,MAAMnG,SAASoF,EAAIvC,KAAOkD,KAErC,WASV,kBAACJ,GAAD,CACA/S,KAAMnC,KAAKnB,MAAMsD,Y,GA9GQ7C,IAAMC,WAiIvBwT,iBAPS,SAAAlU,GACtB,MAAO,CACH0W,IAAK1W,EAAMsW,QAAQQ,cACnBvD,IAAMvT,EAAMsW,QAAQS,aACpBH,IAAM5W,EAAMsW,QAAQU,iBAGa,KAAxB9C,CAA8BhP,ICmJ9BoI,G,YA3QX,WAAY/N,GAAQ,IAAD,8BACjB,4CAAMA,KA+DR8O,YAAc,SAAAC,GACZ,OAAIA,EAAM,EACD,CACLC,WAAY,SAGP,CACLA,WAAY,QAvEC,EA4EnB4D,mBAAoB,SAAChM,EAAW5B,EAAUwJ,EAAOC,EAAMC,EAAQjD,GAC7D,EAAKlK,SAAS,CAAEsR,mBAAmB,EAAM9F,WAAW/H,EAAWiI,kBAAkBrG,EAAUgI,cAAcJ,EAAOC,MAAMA,EAAMnJ,WAAWoJ,EAAQjD,WAAWA,KA7EzI,EAgFnBqH,oBAAsB,WACpB,EAAKvR,SAAS,CAAEsR,mBAAmB,IACnC,EAAK7S,MAAMoN,kBAlFM,EAqFnB1D,KAAK,SAACsJ,EAAUpM,EAAU5B,EAAUiM,EAAWzL,EAASF,EAAW2N,GAc/DlK,EAZe,CACf0C,WAAWuH,EACX9K,SAAU,IACVG,SAAS,OACTF,QAAQ,sBACR9C,QAAQ4L,EACR3I,WAAWtD,EACXoD,UAAU5C,EACVuB,WAAWH,EACXiC,YAAYvD,EACZoN,YAAYO,IAEO5S,MAAK,SAAAC,OAGxBJ,IACC0I,KAAK,oBAAoBhC,EAAU,IAAIoM,GACvC9S,IACAC,IAAI,qBAAsB,CACzBC,QAAS,CAAE,eAAgB,sBAE5B,EAAKJ,MAAMoN,kBA5GG,EAgHjB0B,YAAc,SAAAC,GACZ,OAAIA,EAAM,EACD,CACLC,WAAY,QACZzL,UAAU,UAGL,CACLyL,WAAY,MACZzL,UAAU,WAvHhB,EAAK9C,MAAQ,CACXqN,WAAY,GACZqF,YAAY,GACZnO,UAAW,GACXC,UAAW,GACXC,OAAQ,GACRE,KAAM,SACNE,WAAY,GACZC,YAAa,GACbC,SAAU,GACVL,KAAM,MACNgJ,WAAY,GACZnB,cAAc,EACdD,WAAY,GACZsC,cAAe,EACfrL,iBAAiB,EACjBsL,cAAc,EACd8D,cAAe,GACf7D,WAAW,EACXC,UAAW,GACXnB,YAAY,EACZoB,SAAU,GACVC,aAAc,GACdpC,iBAAiB,EACjBE,eAAe,EACfpH,QAAS,GACTuJ,kBAAmB,GACnBC,eAAgB,GAChBC,kBAAmB,GACnBC,aAAc,GACdC,aAAc,GACdC,gBAAiB,GACjBC,oBAAqB,GACrBC,mBAAoB,GACpBC,eAAgB,GAChBC,aAAa,GACbC,WAAW,GACXwC,mBAAkB,EAClBpH,WAAW,GACXiM,gBAAgB,GAzCD,E,iFA8CjB9V,KAAK5B,MAAM+S,yBACXnR,KAAK5B,MAAMoN,iBACXxL,KAAKL,SAAS,CAAEuM,WAAYlM,KAAK5B,MAAM6B,eACvCD,KAAKL,SAAS,CAAE4R,YAAavR,KAAK5B,MAAMwB,OACxCI,KAAKL,SAAS,CAAE8O,WAAYzO,KAAK5B,MAAMuQ,oBAEvC3O,KAAKkN,gB,yCAIYhN,EAAUC,GACxBD,EAAUD,cAAcD,KAAK5B,MAAM6B,cACtCD,KAAKL,SAAS,CAACuM,WAAWlM,KAAK5B,MAAM6B,iB,+BAqE7B,IAAD,OACL8V,EAAG,EAAEC,EAAG,EAAEC,EAAG,EAwBf,OAvBDjW,KAAKnB,MAAMqN,WAAW1L,KAAI,SAAC0O,EAAOuC,GAAR,OAC1BvC,EAAM1F,OACN0F,EAAM1F,MAAMnI,OAAS,EACrBf,OAAOC,OAAO2O,EAAM1F,OAAOhJ,KAAI,SAACC,EAAEC,IACJ,IAA1BwO,EAAM1F,MAAM9I,GAAKgR,OAA2C,IAA1BxC,EAAM1F,MAAM9I,GAAKiR,OACrDoE,GAAM,GAEyB,eAA7B7G,EAAM1F,MAAM9I,GAAK2Q,YAAsD,IAA1BnC,EAAM1F,MAAM9I,GAAKgR,OAA2C,IAA1BxC,EAAM1F,MAAM9I,GAAKiR,KACjGsE,GAAM,EAE6B,cAA7B/G,EAAM1F,MAAM9I,GAAK2Q,YAAsD,IAA1BnC,EAAM1F,MAAM9I,GAAKgR,OAA2C,IAA1BxC,EAAM1F,MAAM9I,GAAKiR,KACtGqE,GAAM,EAGE,KAIV,QAME,yBAAKlX,UAAU,oCACZ,kBAAC,EAAD,iBAAmBkB,KAAK5B,MAAW4B,KAAKnB,MAAxC,CAA+CqN,WAAYlM,KAAKnB,MAAM0S,eACxE,2BAAOzS,UAAU,SAAUoX,YAAY,KAC5C,4BAAI,qDAA8B,wBAAInX,MAAO,CAACiC,WAAW,OAAOhC,SAAU,OAAO6B,MAAM,YAAakV,GAClG,2DAAoC,wBAAKhX,MAAO,CAACiC,WAAW,OAAOhC,SAAU,OAAO6B,MAAM,YAAaoV,GACzG,8DAAuC,wBAAKlX,MAAO,CAACiC,WAAW,OAAOhC,SAAU,OAAO6B,MAAM,YAAamV,GAAQ,4CAAqB,wBAAKjX,MAAO,CAACiC,WAAW,OAAOhC,SAAU,OAAO6B,MAAM,aAAeoV,EAAGF,EAAI,KAAKjU,QAAQ,GAAzF,OAGjI,yBACE/C,MAAO,CACL4D,KAAM,EACNlB,QAAS,OACToN,SAAU,WAGX7O,KAAKnB,MAAMqN,WAAW7K,OAAS,EAC9B,2BAAOtC,MAAO,CAAE2C,MAAO,SACrB,+BACE,4BACE,wBAAK3C,MAAO,CAAC+P,KAAK,EAAEC,SAAS,SAASC,IAAI,EAAEC,OAAO,IAAnD,cACA,wBAAIlQ,MAAO,CAAC+P,KAAK,IAAIC,SAAS,SAASC,IAAI,EAAEC,OAAO,IAApD,cACA,wBAAIlQ,MAAO,CAAC+P,KAAK,IAAIC,SAAS,SAASC,IAAI,EAAEC,OAAO,IAApD,UACA,oCACA,wCACA,wCACA,yCACA,yCACA,0CACA,sDAIHjP,KAAKnB,MAAMqN,WAAW1L,KAAI,SAAC0O,EAAOuC,GAAR,OAEzB,2BAAOrI,IAAKqI,GAGXvC,EAAM1F,OAEL0F,EAAM1F,MAAMnI,OAAS,EACrBf,OAAOC,OAAO2O,EAAM1F,OAAOhJ,KAAI,SAACC,EAAEC,GAClC,IAA6B,IAA1BwO,EAAM1F,MAAM9I,GAAKgR,OAA2C,IAA1BxC,EAAM1F,MAAM9I,GAAKiR,KAErD,OAAQ,4BAET,wBAAI5S,MAAO,CAAC+P,KAAK,EAAEC,SAAS,SAASC,IAAI,EAAEC,OAAO,EAAErK,gBAAgB,UAEnEsK,EAAMlK,WAEP,wBAAIjG,MAAO,CAAC+P,KAAK,IAAIC,SAAS,SAASC,IAAI,EAAEC,OAAO,EAAErK,gBAAgB,UAAWsK,EAAM9L,WACvF,wBAAIrE,MAAO,CAAC+P,KAAK,IAAIC,SAAS,SAASC,IAAI,EAAEC,OAAO,EAAErK,gBAAgB,UAAWsK,EAAMI,YACvF,4BAAKJ,EAAMzI,UACX,4BAAKyI,EAAM1F,MAAM9I,GAAK4F,UACtB,4BAAK4I,EAAM1F,MAAM9I,GAAKkR,QAAQC,MAAM,KAAK,IACzC,4BAAK3C,EAAM1F,MAAM9I,GAAK+C,SACtB,4BAAKyL,EAAM1F,MAAM9I,GAAKyV,UACtB,4BAAKjH,EAAM1F,MAAM9I,GAAKqQ,WACtB,wBACAjO,GAAI,WAAapC,EACjB3B,MAAO,EAAKmO,cACRqC,SAASL,EAAM1F,MAAM9I,GAAKqQ,WAAaxB,SAASL,EAAM1F,MAAM9I,GAAK+C,UAAW8L,SAASL,EAAM1F,MAAM9I,GAAK+C,SAAS,KAAK3B,QAAQ,OAI5HyN,SAASL,EAAM1F,MAAM9I,GAAKqQ,WAAaxB,SAASL,EAAM1F,MAAM9I,GAAK+C,UAAW8L,SAASL,EAAM1F,MAAM9I,GAAK+C,SAAS,KAAK3B,QAAQ,GAPhI,SAeC,UAOP,yBACE/C,MAAO,CACL4D,KAAM,EACNlB,QAAS,OACToC,eAAgB,SAChBjC,WAAY,WALhB,kBAaJ,kBAAC,EAAD,eACAO,KAAMnC,KAAKnB,MAAMoS,kBACjB5O,QAASrC,KAAKkR,qBACVlR,KAAKnB,MAHT,CAIAwI,cAAerH,KAAKnB,MAAMsM,WAC1B7D,cAAetH,KAAKnB,MAAMwM,kBAC1BjE,aAAcpH,KAAKnB,MAAMmO,cACzBpJ,SAAU5D,KAAKnB,MAAMgO,MACrBnJ,WAAY1D,KAAKnB,MAAM6E,WACvBmG,WAAY7J,KAAKnB,MAAMgL,mB,GA/PDvK,IAAMC,WCEhC6W,IChBwB9W,IAAMC,U,YDiBlC,WAAYnB,GAAQ,IAAD,8BACjB,4CAAMA,KAgCViY,WAAa,WAKAC,MADG,SACQ,CAAEC,KAAM,YACzB9X,MAAK,SAAS4G,GAEb,OADOA,EAASmR,UAGjB/X,MAAK,SAAA0O,GACJ,EAAKxN,SAAS,CAAC4O,eAAgBpB,EAAG,SAClC,EAAKxN,SAAS,CAACgP,kBAAkBxB,EAAG,UACpC,EAAKxN,SAAS,CAACiP,SAASzB,EAAG,aAGpBmJ,MADI,UACQ,CAAEC,KAAM,YAC5B9X,MAAK,SAAS4G,GAEb,OADOA,EAASmR,UAGjB/X,MAAK,SAAA0O,GACJ,EAAKxN,SAAS,CAACsS,2BAA4B9E,EAAG,SAC9C,EAAKxN,SAAS,CAACqS,8BAA8B7E,EAAG,UAChD,EAAKxN,SAAS,CAACG,aAAaqN,EAAG,UAC/B,EAAKsJ,qBACL,EAAKC,qBA3DQ,EAgEnBC,OAAS,WACP5O,IACGtJ,MAAK,SAAAmB,GAEJ,EAAKD,SAAS,CACZC,KAAMA,OAIT4I,OAAM,SAAAC,GACL9J,QAAQC,IAAI6J,OA1EC,EA+EnBgO,mBAAqB,WACjBtO,IAAsB1J,MAAK,SAAAmB,GACzB,EAAKD,SAAS,CACV+O,iBAAiB,YAAK9O,QAIjC4I,OAAM,SAAAC,GACL9J,QAAQC,IAAI6J,OAvFO,EA2FrBiO,eAAiB,WACftO,IAAkB3J,MAAK,SAAAmB,GACrB,EAAKD,SAAS,CACVM,aAAa,YAAKL,QAIzB4I,OAAM,SAAAC,GACP9J,QAAQC,IAAI6J,OAnGS,EA0GnBmO,sBAAwB,SAAAvK,GACK,OAAvBA,EAAMvF,OAAOpH,QACf,EAAKC,SAAS,CACZmQ,WAAY,EACZC,WAAY,EACZxF,SAAU,IAEZ,EAAKnM,MAAMgB,QAAQC,KAAK,yBAEC,OAAvBgN,EAAMvF,OAAOpH,QACf,EAAKC,SAAS,CACZmQ,WAAY,EACZC,WAAY,EACZxF,SAAU,IAEZ,EAAKnM,MAAMgB,QAAQC,KAAK,uBAEC,aAAvBgN,EAAMvF,OAAOpH,QACf,EAAKC,SAAS,CACZmQ,WAAY,EACZC,WAAY,EACZxF,SAAU,IAEZ,EAAKnM,MAAMgB,QAAQC,KAAK,eA/H1B,EAAKR,MAAQ,CACXiR,WAAY,EACZC,WAAY,EACZ9P,aAAa,GACbL,KAAM,GACN8O,iBAAiB,GACjBH,eAAe,GACf0D,2BAA2B,GAC3BtD,kBAAkB,GAClBqD,8BAA8B,GAC9BpD,SAAS,GACT9O,aAAa,IAbE,E,iFAkBE,IAAD,OAClBE,KAAK2W,SACL3W,KAAKyW,qBACLzW,KAAK0W,iBAEL1W,KAAK6W,MAAQlG,aACX,kBAAM,EAAK0F,eACX,O,6CAKFzF,cAAc5Q,KAAK6W,S,+BAuGX,IAAD,OAEP,OACE,yBAAK/X,UAAU,uBACb,kBAAC,EAAgBkB,KAAK5B,OAEtB,yBAAKU,UAAU,6BAEb,kBAAC,EAAD,iBAAekB,KAAK5B,MAAW4B,KAAKnB,QACpC,kBAAC,EAAD,iBACMmB,KAAK5B,MACL4B,KAAKnB,MAFX,CAGEqR,kBAAmBlQ,KAAK4W,yBAG1B,yBAAK9X,UAAU,yBACb,kBAAC,KAAD,KACE,kBAAC,KAAD,CACEgY,OAAK,EACLC,KAAK,QACLC,OAAQ,SAAA5Y,GAAK,OAAI,kBAAC,EAAc,EAAKA,UAEvC,kBAAC,KAAD,CACE2Y,KAAK,uBACLC,OAAQ,SAAA5Y,GAAK,OAAI,kBAAC,EAAwB,EAAKA,UAEjD,kBAAC,KAAD,CACE2Y,KAAK,qBACLC,OAAQ,SAAA5Y,GAAK,OACX,kBAAC,EAAD,iBAAuB,EAAKA,MAAW,EAAKS,MAA5C,CAAmD2M,eAAgB,EAAKmL,OAAQ9L,2BAA4B,EAAK4L,yBAGrH,kBAAC,KAAD,CACEM,KAAK,YACLC,OAAQ,SAAA5Y,GAAK,OAAI,kBAAC,EAAD,iBAAc,EAAKA,MAAW,EAAKS,MAAnC,CAA0CsS,uBAAwB,EAAKuF,eAAgBlL,eAAgB,EAAKmL,OAAQ9L,2BAA4B,EAAK4L,yBAExK,kBAAC,KAAD,CACEM,KAAK,SACLC,OAAQ,SAAA5Y,GAAK,OAAI,kBAAC,EAAU,EAAKA,UAEnC,kBAAC,KAAD,CACE2Y,KAAK,eACLC,OAAQ,SAAA5Y,GAAK,OAAI,kBAAC6Y,GAAD,iBAAiB,EAAK7Y,MAAW,EAAKS,MAAtC,CAA6CgM,2BAA4B,EAAK4L,yBAEjG,kBAAC,KAAD,CACEM,KAAK,aACLC,OAAQ,SAAA5Y,GAAK,OAAI,kBAAC,GAAD,iBAAe,EAAKA,MAAW,EAAKS,MAApC,CAA2C2M,eAAgB,EAAKmL,OAAQ9L,2BAA4B,EAAK4L,yBAE5H,kBAAC,KAAD,CACEM,KAAK,kBACLC,OAAQ,SAAA5Y,GAAK,OAAI,kBAAC8Y,GAAD,iBAAoB,EAAK9Y,MAAW,EAAKS,WAE7D,kBAAC,KAAD,CACGkY,KAAK,iBACLC,OAAQ,SAAA5Y,GAAK,OAAI,kBAAC,GAAD,iBAAmB,EAAKA,MAAW,EAAKS,MAAxC,CAA+C2M,eAAgB,EAAKmL,OAAQ9L,2BAA4B,EAAK4L,yBAE/H,kBAAC,KAAD,CACCM,KAAK,sBACLC,OAAQ,SAAA5Y,GAAK,OAAI,kBAAC+Y,GAAD,iBAAwB,EAAK/Y,MAAW,EAAKS,WAE/D,kBAAC,KAAD,CACCkY,KAAK,aACLC,OAAQ,SAAA5Y,GAAK,OAAI,kBAACgZ,GAAD,iBAAe,EAAKhZ,MAAW,EAAKS,MAApC,CAA2C2M,eAAgB,EAAKmL,OAAQxF,uBAAwB,EAAKuF,eAAiB7L,2BAA4B,EAAK4L,iC,GApMrKnX,IAAMC,YA8MV8X,gBAAWjB,IElMXkB,G,YA7Bb,WAAYlZ,GAAQ,IAAD,8BACjB,4CAAMA,KACDS,MAAQ,GAFI,E,sEAIT,IAAD,OACP,OACE,yBACEC,UAAU,0BACVC,MAAO,CACL0C,QAAS,OACTkB,KAAM,EACNkB,eAAgB,SAChBjC,WAAY,SACZa,cAAe,WAPnB,oBAWE,4BACEtD,QAAS,WACP,EAAKf,MAAMgB,QAAQC,KAAK,WAF5B,mB,GAlBeC,IAAMC,WCUdgY,G,YATb,WAAYnZ,GAAQ,IAAD,8BACjB,4CAAMA,KACDS,MAAQ,GAFI,E,sEAKjB,OAAO,kD,GANSS,IAAMC,W,2BCIpBiY,GAAe,CACpBpC,aAAa,KACb9O,SAAS,KACTtB,UAAU,KACV5B,UAAU,KACVyG,WAAW,KACX+L,aAAa,KACbD,cAAc,KACdE,cAAc,MAmCC4B,gBACX,CACIC,kBAAiB,EACjBvC,QAnCO,WAA8B,IAA7BtW,EAA4B,uDAAtB2Y,GAAaG,EAAS,uCAC7C,OAAOA,EAAOnQ,MAEd,IXnB2B,eWoB3B,OAAO,gBACE3I,EADT,CAEMuW,aAAauC,EAAOvE,QACpB9M,SAASqR,EAAOtE,SAChBrO,UAAU2S,EAAOrE,SACjBlQ,UAAUuU,EAAOpE,WAGvB,IX3ByB,aW4BzB,OAAO,gBACE1U,EADT,CAEMgL,WAAW8N,EAAOvE,QAClBwC,aAAa+B,EAAOtE,SACpBsC,cAAcgC,EAAOrE,SACrBuC,cAAc8B,EAAOpE,WAI3B,QACA,OAAO1U,MCyBQ+Y,G,YAtDb,WAAYxZ,GAAQ,IAAD,8BACjB,4CAAMA,KACDS,MAAQ,CACXe,KAAM,IAHS,E,sEAOjB,IAUMiY,EACJC,OAAOC,sCAAwCC,KAE3CC,EAAQC,aACZC,GACAN,EAAiBO,cAfJ,SAAAH,GACb,OAAO,SAAAI,GACL,OAAO,SAAAV,GAIL,OAFeU,EAAKV,UAa1B,OACE,kBAAC,KAAD,CAAUM,MAAOA,GACjB,yBAAKnZ,UAAU,OACb,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,eAAOgY,OAAK,EAACC,KAAK,IAAIuB,UAAWC,IAAavY,KAAK5B,QACnD,kBAAC,KAAD,eAAO2Y,KAAK,SAASuB,UAAWf,IAAWvX,KAAK5B,QAChD,kBAAC,KAAD,eAAO2Y,KAAK,QAAQuB,UAAWlC,IAAUpW,KAAK5B,QAC9C,kBAAC,KAAD,eACE2Y,KAAK,uBACLuB,UAAWlC,IACPpW,KAAK5B,QAEX,kBAAC,KAAD,eAAO2Y,KAAK,qBAAqBuB,UAAWlC,IAAUpW,KAAK5B,QAC3D,kBAAC,KAAD,eAAO2Y,KAAK,SAASuB,UAAWlC,IAAUpW,KAAK5B,QAC/C,kBAAC,KAAD,eAAO2Y,KAAK,YAAYuB,UAAWlC,IAAUpW,KAAK5B,QAClD,kBAAC,KAAD,eAAO2Y,KAAK,eAAeuB,UAAWlC,IAAUpW,KAAK5B,QACrD,kBAAC,KAAD,eAAO2Y,KAAK,aAAauB,UAAWlC,IAAUpW,KAAK5B,QACnD,kBAAC,KAAD,eAAO2Y,KAAK,kBAAkBuB,UAAWlC,IAAUpW,KAAK5B,QACxD,kBAAC,KAAD,eAAO2Y,KAAK,iBAAiBuB,UAAWlC,IAAUpW,KAAK5B,QACvD,kBAAC,KAAD,eAAO2Y,KAAK,sBAAsBuB,UAAWlC,IAAUpW,KAAK5B,QAC5D,kBAAC,KAAD,eAAO2Y,KAAK,aAAauB,UAAWlC,IAAUpW,KAAK5B,gB,GA9C7CkB,IAAMC,WCEJiZ,QACW,cAA7BV,OAAOvW,SAASkX,UAEe,UAA7BX,OAAOvW,SAASkX,UAEhBX,OAAOvW,SAASkX,SAASC,MACvB,2DCZNC,IAAS3B,OAAO,kBAAC,GAAD,MAAS4B,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMva,MAAK,SAAAwa,GACjCA,EAAaC,iB,wCEnInBC,EAAOC,QAAU,IAA0B,gE","file":"js/main.c33bac45.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../../../Assets/CSS/UserInfoBarStyles/UserInfoBar.css\";\nimport axios from 'axios'\n\nclass UserInfoBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  subscribe=()=>{\n    return axios\n        .get('/api/subscribe', {\n            headers: { \"Content-type\": \"application/json\" }\n        })\n        .then(res => {\n            console.log(res)\n       })\n  }\n  render() {\n    return (\n      <div className=\"UserInfoBar-Main-Container\">\n        <div className=\"UserInfoBar-contents-container\">\n          <i\n            className=\"material-icons\"\n            style={{ fontSize: \"3rem\", padding: \"3px 0\" }}\n          >\n            table_chart\n          </i>\n          <span style={{ letterSpacing: \"0.5px\", padding: 3 }}>Analysis</span>\n        </div>\n        <div\n          className=\"UserInfoBar-contents-container\"\n          onClick={() => {\n            this.props.history.push(\"/Timer\");\n          }}\n        >\n          <i\n            className=\"material-icons\"\n            style={{ fontSize: \"3rem\", padding: \"3px 0\" }}\n          >\n            timer\n          </i>\n          <span style={{ letterSpacing: \"0.5px\", padding: 3 }}>Testing</span>\n        </div>\n\n \n\n\n          </div>\n     \n    );\n  }\n}\n\nexport default UserInfoBar;\n","import React from \"react\";\nimport \"../../../Assets/CSS/HeaderBarStyles/HeaderBar.css\";\n\nclass HeaderBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data:[],\n      bankNifty:[],\n      indiciesData:[]\n    };\n  }\n  componentDidMount(){\n    this.updateLTPChange(this.props.holdingsData[1]);  \n    this.updateindiciesData(this.props.indiciesData)\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    if(prevProps.holdingsData[1]!==this.props.holdingsData[1] || prevProps.indiciesData!==this.props.indiciesData){\n      \n      this.updateLTPChange(this.props.holdingsData[1]);\n      this.updateindiciesData(this.props.indiciesData)\n    }\n    \n  }\n\n  updateLTPChange=(value)=>{\n    this.setState({data:value})\n  }\n  updateindiciesData=(value)=>{\n    this.setState({indiciesData:value})\n  }\n  render() {\n    let indicies\n    if(this.state.indiciesData){\n      let indStyle\n      indicies= Object.values(this.state.indiciesData).map((i,ind)=>{\n       \n        if(parseFloat(i.pChange)<0){\n          indStyle={color:'red',marginLeft:'5px',marginRight:'5px',fontWeight:'bold'}\n        }\n        else{\n          indStyle={color:'green',marginLeft:'5px',marginRight:'5px',fontWeight:'bold'}\n        }\n     return(\n       <div>\n   <span>{i.name} :</span>\n   <span style={indStyle}>{i.lastPrice}</span>\n   <span>|</span>\n   <span style={indStyle}>{i.pChange}%</span>\n   </div>\n     )\n   })\n    }\n    // let bankNiftyLTP = Object.values(this.state.bankNifty).map(i=>{return i})\n\n    let totalChage=0\n    if(this.state.data){\n    for(let i=0;i<this.state.data.length;i++){      \n      totalChage=totalChage+parseFloat(this.state.data[i])\n    }\n    \n  }\n    let arrow  \n    if(totalChage >=0){\n      arrow = <i class=\"fas fa-angle-double-up\" style={{marginLeft:'10px',fontSize:'25px',color:'green'}}></i>\n    }\n    else{\n      arrow = <i class=\"fas fa-angle-double-down\" style={{marginLeft:'10px',fontSize:'25px',color:'red'}}></i>\n    }\n    \n    return (\n      <div className=\"HeaderBar-Main-Container\">\n        {\n          this.props.location.pathname === \"/home\"\n          ? <div style={{display:'flex'}}>\n            <div style={{width:'50%',color:'gold'}}>Technical Analysis</div>\n            <div style={{width:'50%',textAlign:'right',color:'gold'}}>\n            <div\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          float: 'right'\n                          \n                        }}\n                      >\n            GTurns Portfolio \n            {arrow}\n           \n            <span style={{fontSize:'14px',marginLeft:'10px'}}>{totalChage.toFixed(2)}%</span>\n           </div>\n         </div>\n         </div>\n          :this.props.location.pathname === \"/FundamentalAnalysis\"\n          ? \"Fundamental  Analysis\"\n          : this.props.location.pathname === \"/TechnicalAnalysis\"\n          ? <div style={{display:'flex'}}>\n          <div style={{width:'50%',color:'gold'}}>Home</div>\n          <div style={{width:'50%',textAlign:'right',color:'gold'}}>\n          <div\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        float: 'right'\n                        \n                      }}\n                    >\n          GTurns Portfolio \n          {arrow}         \n          <span style={{fontSize:'14px',marginLeft:'10px'}}>{totalChage.toFixed(2)}%</span>\n         </div>\n       </div>\n       </div>\n          : this.props.location.pathname === \"/Holdings\"\n          ? <div style={{display:'flex'}}>\n          <div style={{width:'50%',color:'gold'}}>Holdings</div>\n          <div style={{width:'50%',textAlign:'right',color:'gold'}}>\n          <div\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        float: 'right'\n                        \n                      }}\n                    >\n          GTurns Portfolio \n          {arrow}\n         \n          <span style={{fontSize:'14px',marginLeft:'10px'}}>{totalChage.toFixed(2)}%</span>\n         </div>\n       </div>\n       </div>\n          : this.props.location.pathname === \"/Observation\"\n          ? <div style={{display:'flex'}}>\n          <div style={{width:'50%',color:'gold'}}>Observation</div>\n          <div style={{width:'50%',textAlign:'right',color:'gold'}}>\n          <div\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        float: 'right'\n                        \n                      }}\n                    >\n          GTurns Portfolio \n          {arrow}\n         \n          <span style={{fontSize:'14px',marginLeft:'10px'}}>{totalChage.toFixed(2)}%</span>\n         </div>\n       </div>\n       </div>\n          : this.props.location.pathname === \"/Execution\"\n          ? <div style={{display:'flex'}}>\n          <div style={{width:'50%',color:'gold'}}>Execution</div>\n          <div style={{width:'50%',textAlign:'right',color:'gold'}}>\n          <div\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        float: 'right'\n                        \n                      }}\n                    >\n          GTurns Portfolio \n          {arrow}\n         \n          <span style={{fontSize:'14px',marginLeft:'10px'}}>{totalChage.toFixed(2)}%</span>\n         </div>\n       </div>\n       </div>\n          : this.props.location.pathname === \"/ExecutionsList\"\n          ? <div style={{display:'flex'}}>\n          <div style={{width:'50%',color:'gold'}}>Executions Order List</div>\n          <div style={{width:'50%',textAlign:'right',color:'gold'}}>\n          <div\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        float: 'right'\n                        \n                      }}\n                    >\n          GTurns Portfolio \n          {arrow}\n         \n          <span style={{fontSize:'14px',marginLeft:'10px'}}>{totalChage.toFixed(2)}%</span>\n         </div>\n       </div>\n       </div>\n          : this.props.location.pathname === \"/SellExecution\"\n          ? <div style={{display:'flex'}}>\n          <div style={{width:'50%',color:'gold'}}>Sell Execution</div>\n          <div style={{width:'50%',textAlign:'right',color:'gold'}}>\n          <div\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        float: 'right'\n                        \n                      }}\n                    >\n          GTurns Portfolio \n          {arrow}\n         \n          <span style={{fontSize:'14px',marginLeft:'10px'}}>{totalChage.toFixed(2)}%</span>\n         </div>\n       </div>\n       </div>\n          : this.props.location.pathname === \"/ExecutionsSellList\"\n          ? <div style={{display:'flex'}}>\n          <div style={{width:'50%',color:'gold'}}>Executions Sell List</div>\n          <div style={{width:'50%',textAlign:'right',color:'gold'}}>\n          <div\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        float: 'right'\n                        \n                      }}\n                    >\n          GTurns Portfolio \n          {arrow}\n         \n          <span style={{fontSize:'14px',marginLeft:'10px'}}>{totalChage.toFixed(2)}%</span>\n         </div>\n       </div>\n       </div>\n          : this.props.location.pathname === \"/TradeLogs\"\n          ? <div style={{display:'flex'}}>\n          <div style={{width:'50%',color:'gold'}}>Trade Logs</div>\n          <div style={{width:'50%',textAlign:'right',color:'gold'}}>\n          <div\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        float: 'right'\n                        \n                      }}\n                    >\n          GTurns Portfolio \n          {arrow}\n         \n          <span style={{fontSize:'14px',marginLeft:'10px'}}>{totalChage.toFixed(2)}%</span>\n         </div>\n       </div>\n       </div>\n          : \"\"}\n            <marquee>\n          <div style={{color:'gold',fontSize:'12px',display:'flex'}}>       \n                {indicies}\n          </div>\n          </marquee>\n      </div>\n    );\n  }\n}\n\nexport default HeaderBar;\n","import React from \"react\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"Dashboard-Main-Container\">This is Dashboard Table</div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport \"../../../Assets/CSS/StockAnalysisStyles/StockAnalysis.css\";\n\nclass FundamentalAnalysis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"TechnicalAnalysis-Main-Container\">\n        Fundamental Analysis\n      </div>\n    );\n  }\n}\n\nexport default FundamentalAnalysis;\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Addtoobservation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.openObservation}\n        onClose={this.props.closeObservation}\n        fullWidth\n      >\n        <div\n          style={{\n            display: \"flex\",\n            minWidth: 600,\n            flexDirection: \"column\"\n          }}\n        >\n          <span style={{ padding: 10, fontSize: \"25px\" }}>\n            Add to holdings\n            <i\n              className=\"material-icons\"\n              style={{ float: \"right\", cursor: \"pointer\" }}\n              onClick={this.props.closeObservation}\n            >\n              close\n            </i>\n          </span>\n          <div style={{ display: \"flex\", flex: 1, flexDirection: \"column\" }}>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Scrip\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  disabled\n                  value={\n                    this.props.scripInfo.length > 0\n                      ? this.props.scripInfo[this.props.sentId].scripName\n                      : \"\"\n                  }\n                />\n\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Scrip Code\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  disabled\n                  value={\n                    this.props.scripInfo.length > 0\n                      ? this.props.scripInfo[this.props.sentId].stockCode\n                      : \"\"\n                  }\n                />\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n            </div>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Sector\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  disabled\n                  value={\n                    this.props.scripInfo.length > 0\n                      ? this.props.scripInfo[this.props.sentId].sector\n                      : \"\"\n                  }\n                />\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Call\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  disabled\n                  value={\n                    this.props.scripInfo.length > 0\n                      ? this.props.scripInfo[this.props.sentId].call\n                      : \"\"\n                  }\n                />\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Time Period\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  disabled\n                  value={\n                    this.props.scripInfo.length > 0\n                      ? this.props.scripInfo[this.props.sentId].time\n                      : \"\"\n                  }\n                />\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n            </div>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Persent\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  disabled\n                  value={\n                    this.props.scripInfo.length > 0\n                      ? this.props.scripInfo[this.props.sentId].present\n                      : \"\"\n                  }\n                />\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Stop Loss\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  disabled\n                  value={\n                    this.props.scripInfo.length > 0\n                      ? this.props.scripInfo[this.props.sentId].techTarget\n                      : \"\"\n                  }\n                />\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n            </div>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Entry Level\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  value={\n                    this.props.scripInfo.length > 0\n                      ? this.props.scripInfo[this.props.sentId].enteryLevel\n                      : \"\"\n                  }\n                />\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Stop-loss\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  value={\n                    this.props.scripInfo.length > 0\n                      ? this.props.scripInfo[this.props.sentId].stopLoss\n                      : \"\"\n                  }\n                />\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              padding: \"20px 10px\",\n              justifyContent: \"flex-end\",\n              marginTop: \"30px\"\n            }}\n          >\n            <button className=\"addScrip\" style={{ marginRight: \"20px\" }}>\n              Add to holdings\n            </button>\n            <button className=\"addScrip\" onClick={this.props.closeObservation}>\n              Close\n            </button>\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default Addtoobservation;\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nclass SnackbarComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        open={this.props.snackbarOpen}\n        autoHideDuration={3000}\n        onClose={this.props.snackbarClose}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n        message={<span id=\"message-id\">{this.props.snackbartext}</span>}\n      />\n    );\n  }\n}\n\nexport default SnackbarComponent;\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { deRegister , deRegisterAlert} from './deleteStockFunction';\nimport axios from 'axios'\n\nconst Styles = {\n  buttonStyle: {\n    padding: 10,\n    backgroundColor: \"rgb(66, 81, 110)\",\n    color: \"white\",\n    fontSize: \"16px\",\n    cursor: \"pointer\",\n    outline: \"none\",\n    border: \"0px\",\n    display: \"flex\",\n    borderRadius: \"3px\",\n    margin: \"0px 10px\"\n  }\n};\nclass Addtoobservation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  deleteStock(scripCode){\n    const newStock = {\n    stock_code:scripCode}\n    deRegister(newStock).then(res => {\n    this.props.closeDeletion();\n    })\n  }\n\n  deleteAlertStock(scripCode){\n    const newStock = {\n    stock_code:scripCode}\n    deRegisterAlert(newStock).then(res => {\n    this.props.closeDeletion();\n    })\n  }\n\n  render() {    \n    return (\n      <Dialog open={this.props.validate} onClose={this.props.closeDeletion}>\n        <div\n          style={{\n            minHeight: 105,\n            backgroundColor: \"white\",\n            padding: 20,\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-between\"\n          }}\n        >\n          <div style={{ fontSize: \"18px\" }}>\n            Do you want to delete\n            <span\n              style={{\n                fontFamily: \"italic\",\n                fontWeight: 600,\n                paddingLeft: \"5px\"\n              }}\n            >\n            {this.props.selectedScripName}\n            </span>{\" \"}\n            ?\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"flex-end\"\n            }}\n          >\n            <button\n              style={Styles.buttonStyle}\n              onClick={() => {this.props.alert?this.deleteAlertStock(this.props.DeleteEntry):this.deleteStock(this.props.DeleteEntry)}}\n            >\n              Delete\n            </button>\n            <button\n              style={Styles.buttonStyle}\n              onClick={this.props.closeDeletion}\n            >\n              Cancle\n            </button>\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default Addtoobservation;\n","import axios from 'axios'\r\n\r\nexport const deRegister = newStock => {\r\n  let sn = newStock.stock_code\r\n  return axios\r\n    .delete('/'+sn)\r\n    .then(response => {\r\n      console.log('Stock Deleted')\r\n\r\n    })\r\n}\r\n\r\nexport const deRegisterAlert = newStock => {\r\n  let sn = newStock.stock_code\r\n  return axios\r\n    .delete('Observation/'+sn)\r\n    .then(response => {\r\n      console.log('Stock Deleted')\r\n\r\n    })\r\n}\r\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { register } from './addExecutionFunction';\nimport { editRegister } from './addExecutionFunction';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport axios from 'axios'\nimport \"../../Assets/CSS/StockAnalysisStyles/StockAnalysis.css\";\n\n// const styles = {\n//   errorStyle: {\n//     color: \"red\",\n//     fontSize: 13,\n//     minHeight: \"15px\"\n//   }\n// };\nclass DialogComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allStockCodeName:'',\n      quantity:'',\n      remarks:'',\n      stop_loss:'',\n      timeline:'',\n      stock_name:'', \n\n\n  };\n  this.onChange = this.onChange.bind(this)\n  }\n \n \n\n  onChange(e) {  \n    this.setState({ [e.target.name]: e.target.value })   \n    }\n\n\nsave(e){\ne.preventDefault()\nconst newStock = {\n  quantity: this.state.quantity, \n  timeline:this.state.timeline,\n  remarks:this.state.remarks,\n  present:this.props.presentPrice,\n  stock_name:this.props.showScripName,\n  stop_loss:this.props.stopLoss,\n  tech_target:this.props.techTarget,\n  stock_code:this.props.showScripCode \n  }\n  register(newStock).then(res => { \n  this.click();\n  this.props.onClose();\n  })\n\n  return axios\n  .get('/send_message', {\n    headers: { \"Content-type\": \"application/json\" }\n   })\n\n}\n\n\nclick=()=>{\n  this.clearAll();\n  this.props.onClose()  \n  \n}\nclearAll(){\nthis.setState({\n  quantity:'',\n  timeline:'',\n  remarks:''\n})\n\n}\n\n  render() {  \n\n    let scrip_name_select\n   \n      const showScripName = this.props.showScripName\n      scrip_name_select =   <TextField\n          name=\"stock_name\"\n          id=\"outlined-basic\"\n          label=\"Scrip Name\"\n          variant=\"outlined\"\n          type=\"text\"\n          value={showScripName}\n        />\n\n\n    return (\n      <Dialog open={this.props.open} onClose={this.props.onClose} fullWidth>\n        <div\n          style={{\n            display: \"flex\",\n            minWidth: 600,\n            flexDirection: \"column\"\n          }}\n        >\n          <span style={{ padding: 10, fontSize: \"25px\" }}>\n            Execute Trade\n            <i\n              className=\"material-icons\"\n              style={{ float: \"right\", cursor: \"pointer\" }}\n              onClick={this.click}\n            >\n              close\n            </i>\n          </span>\n          <div>\n\n          </div>\n          <div style={{ display: \"flex\", flex: 1, flexDirection: \"column\" }}>\n\n\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              flex: 1,\n              margin: 10\n            }}\n          >\n           {scrip_name_select}\n          \n          </div>\n          <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n              <TextField\n                name=\"stock_code\"\n                id=\"outlined-basic\"\n                label=\"Stock Code\"\n                variant=\"outlined\"\n                type=\"text\"\n                value={this.props.showScripCode}\n                \n              />\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n\n          </div>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n              <FormControl >\n              <InputLabel id=\"demo-mutiple-action-label\">Select Action</InputLabel>\n              <Select\n                 labelId=\"demo-mutiple-action-label\"\n                name=\"timeline\"\n                id=\"outlined-basic\"\n                label=\"Call\"\n                variant=\"outlined\"\n                value={this.state.timeline} onChange={this.onChange}\n              >\n                <MenuItem value=\"Buy\">Buy</MenuItem>\n                <MenuItem value=\"Sell\">Sell</MenuItem>\n             \n              </Select>\n              </FormControl>\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n              \n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n              <TextField\n                name=\"quantity\"\n                id=\"outlined-basic\"\n                label=\"Number of Quantities?\"\n                variant=\"outlined\"\n                type=\"number\"\n                value={this.state.quantity}\n                onChange={this.onChange}\n              />\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n            </div>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n            <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n              <TextField\n                name=\"current_price\"\n                id=\"outlined-basic\"\n                label=\"Entry Level\"\n                variant=\"outlined\"\n                type=\"number\"\n                value={this.props.presentPrice}\n                \n              />\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n              <TextField\n                name=\"stop_loss\"\n                id=\"outlined-basic\"\n                label=\"Stop Loss\"\n                variant=\"outlined\"\n                type=\"number\"\n                value={this.props.stopLoss}\n                \n              />\n\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n            </div>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n            <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n              <TextField\n                name=\"remarks\"\n                id=\"outlined-basic\"\n                label=\"Remarks\"\n                variant=\"outlined\"\n                type=\"text\"\n                value={this.state.remarks}\n                onChange={this.onChange}\n              />\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>           \n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              padding: \"20px 10px\",\n              justifyContent: \"flex-end\",\n              marginTop: \"30px\"\n            }}\n          >\n            <button className=\"addScrip\" style={{ marginRight: \"20px\" }}\n             onClick={this.save.bind(this)}\n             disabled={ !this.state.quantity || !this.state.timeline }\n             >\n              Send Alert\n            </button>\n            <button className=\"addScrip\"  onClick={this.click}  >\n              Close\n            </button>\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default DialogComponent;\n","import axios from 'axios'\r\n\r\nexport const register = newStock => {\r\n  return axios\r\n    .post('/executeNotifications', {\r\n      stock_name: newStock.stock_name,\r\n      stock_code: newStock.stock_code,\r\n      stop_loss:newStock.stop_loss,\r\n      tech_target:newStock.tech_target,\r\n      present:newStock.present,    \r\n      timeline:newStock.timeline,\r\n      quantity:newStock.quantity,\r\n      remarks:newStock.remarks,\r\n      execute_date:''\r\n    })     \r\n    .then(res => {\r\n      //  console.log(res)\r\n  \r\n      })\r\n    \r\n    \r\n   \r\n}\r\n\r\n\r\n\r\nexport const editRegisterHolding  = newStock => {\r\n  let sn = newStock.stock_code\r\n  return axios\r\n    .post('/editStockHoldings/'+sn, {\r\n      holdings: true,      \r\n    })\r\n    .then(response => {\r\n      console.log('Edited Stock')\r\n\r\n    })\r\n}\r\n\r\nexport const editRegisterHoldingRemove  = newStock => {\r\n  let sn = newStock.stock_code\r\n  return axios\r\n    .post('/editStockHoldingsRemove/'+sn, {\r\n      holdings: false,      \r\n    })\r\n    .then(response => {\r\n      console.log('Edited Stock')\r\n\r\n    })\r\n}","import axios from 'axios'\r\nexport const getList = () => {\r\n    return axios\r\n        .get('/TechnicalAnalysis', {\r\n            headers: { \"Content-type\": \"application/json\" }\r\n        })\r\n        .then(res => {\r\n             return res.data.result\r\n        })\r\n\r\n}\r\n\r\nexport const getStockList = () => {\r\n    return axios\r\n        .get('/TechnicalAnalysis', {\r\n            headers: { \"Content-type\": \"application/json\" }\r\n        })\r\n        .then(res => {            \r\n            return res.data.stockListResult\r\n        })\r\n\r\n}\r\n\r\nexport const getObservationsList = () => {\r\n    return axios\r\n        .get('/Observation', {\r\n            headers: { \"Content-type\": \"application/json\" }\r\n        })\r\n        .then(res => {\r\n            return res.data.result\r\n       })\r\n\r\n}\r\n\r\nexport const getHoldingsList = () => {\r\n    return axios\r\n        .get('/Holdings', {\r\n            headers: { \"Content-type\": \"application/json\" }\r\n        })\r\n        .then(res => {\r\n            return res.data.result\r\n       })\r\n\r\n}\r\n\r\nexport const getNotificationsList = () => {\r\n    return axios\r\n        .get('/Execution', {\r\n            headers: { \"Content-type\": \"application/json\" }\r\n        })\r\n        .then(res => {\r\n           \r\n            return res.data.result\r\n       })\r\n\r\n}\r\n\r\nexport const getSellNotificationsList = () => {\r\n    return axios\r\n        .get('/SellExecution', {\r\n            headers: { \"Content-type\": \"application/json\" }\r\n        })\r\n        .then(res => {\r\n           \r\n            return res.data.result\r\n       })\r\n\r\n}\r\n\r\n\r\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { register } from './addMessageFunction';\nimport { getStockList } from \"../../Containers/Home/ListFunctions\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport axios from 'axios'\n// const styles = {\n//   errorStyle: {\n//     color: \"red\",\n//     fontSize: 13,\n//     minHeight: \"15px\"\n//   }\n// };\nclass SetNotification extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      condition:'',\n      target_price:'',\n      message:'',\n      allStocksMenuItems:[],\n      stock_name:'',\n    };\n    this.onChange = this.onChange.bind(this)\n  }\n\n\ncomponentDidMount(){\n  this.getStockLists();\n}\n\ngetStockLists = () => {\n  getStockList()\n    .then(data => {\n      this.setState({\n        allStocksMenuItems: data\n      }); \n           \n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nonChange(e) {\n  this.setState({ [e.target.name]: e.target.value })\n}\nsaveMessage(e){\n  e.preventDefault()\n  let s_c,s_n\n  if(this.props.showScripCode==''){\n    s_n=this.state.stock_name\n    s_c = Object.keys(this.state.allStocksMenuItems)[s_n]\n    s_n = Object.values(this.state.allStocksMenuItems)[s_n]\n  }\n  else{\n    s_n =this.props.showScripName \n    s_c = this.props.showScripCode\n  }\n  const message = {   \n  stock_code:s_c,\n  stock_name:s_n,\n  target_price: this.state.target_price,\n  condition: this.state.condition,\n  message: this.state.message,\n  }\n  register(message).then(res => {\n  this.setState({target_price:''})\n  this.setState({condition:''})\n  this.setState({message:''})\n  this.props.closeSetNotification();\n  })\n}\n\n\n\n  render() {\n   \n    const showScripName = this.props.showScripName\n    let scrip_name_select\n\n    if(this.props.showScripCode===\"\"){\n      scrip_name_select = \n        <FormControl style={{margin:10}}>\n        <InputLabel id=\"demo-mutiple-stock-label\">Select Stock</InputLabel>\n      <Select\n      labelId=\"demo-mutiple-stock-label\"\n      name='stock_name'\n      id=\"outlined-basic\"\n      label=\"Call\"\n      variant=\"outlined\"\n      value={this.state.stock_name}\n      onChange={this.onChange}>\n      {     \n       \n       Object.values(this.state.allStocksMenuItems).map((i,index) => {\n         return <MenuItem key={index} value={index}>{i}</MenuItem>             \n       \n       })\n                  \n      }          \n      \n      </Select>\n      </FormControl>\n    }\n    else{\n\n      scrip_name_select =(<TextField\n    style={{\n      margin: 10\n    }}\n    type=\"text\"\n    id=\"outlined-basic\"\n    label=\"Scrip Name\"\n    variant=\"outlined\"\n    value={showScripName}\n    name=\"scrip_name\"\n    />)\n  \n  }  \n\n    \n\n    return (\n      \n      <Dialog\n        open={this.props.openSetNotification}\n        onClose={this.props.closeSetNotification}\n        fullWidth\n      >\n        <div\n          style={{\n            display: \"flex\",\n            minWidth: 400,\n            flexDirection: \"column\"\n          }}\n        >\n          <span style={{ padding: 10, fontSize: \"25px\" }}>\n            Set Notification\n            <i\n              className=\"material-icons\"\n              style={{ float: \"right\", cursor: \"pointer\" }}\n              onClick={this.props.closeSetNotification}\n            >\n              close\n            </i>\n          </span>\n          <div style={{ display: \"flex\", flex: 1, flexDirection: \"column\" }}>\n\n      \n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              flex: 1,\n              margin: 10\n            }}\n          >\n        {scrip_name_select}        \n          </div>      \n        \n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n            <TextField\n              style={{\n                margin: 10\n              }}\n              name=\"target_price\"\n              type=\"number\"\n              id=\"outlined-basic\"\n              label=\"Target price\"\n              variant=\"outlined\"\n              value={this.state.target_price}\n              onChange={this.onChange}\n            />\n            </div>\n            <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              flex: 1,\n              margin: 10\n            }}\n          >\n            <FormControl style={{margin:10}}>\n        <InputLabel\n         \n        id=\"demo-mutiple-condition-label\">Select Condition</InputLabel>\n            <Select\n              \n              labelId=\"demo-mutiple-condition-label\"\n              id=\"outlined-basic\"\n              label=\"Call\"\n              variant=\"outlined\"\n              name=\"condition\"\n              value={this.state.condition}\n              onChange={this.onChange}\n            >\n              <MenuItem value=\"LTP Lesser than or Equal to\">LTP Lesser than or Equal to</MenuItem>\n              <MenuItem value=\"LTP Greater than or Equal to\">LTP Greater than or Equal to</MenuItem>\n            </Select>\n            </FormControl>\n           </div>\n           <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              flex: 1,\n              margin: 10\n            }}\n          >\n            <TextField\n              style={{\n                margin: 10\n              }}\n              id=\"outlined-basic\"\n              label=\"Message\"\n              variant=\"outlined\"\n              value={this.state.message}\n              onChange={this.onChange}\n              type=\"text\"\n              name=\"message\"\n            />\n            {/* <span style={styles.errorStyle}>error comes here</span> */}\n          </div>\n          </div>\n          </div>\n            <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              padding: \"20px 10px\",\n              justifyContent: \"flex-end\",\n              marginTop: \"30px\"\n            }}\n          >\n            <button className=\"addScrip\" style={{ marginRight: \"20px\" }}\n            disabled={ !this.state.target_price|| !this.state.condition || !this.state.message}\n            onClick={this.saveMessage.bind(this)}\n            >\n              Set Notification\n            </button>\n            <button\n              className=\"addScrip\"\n              onClick={this.props.closeSetNotification}\n            >\n              Close\n            </button>\n          </div>\n       \n      </Dialog>\n    );\n  }\n}\n\nexport default SetNotification;\n","import axios from 'axios'\r\n\r\nexport const register = message => {\r\n  let sn = message.stock_code\r\n  sn = sn\r\n  let sname = message.stock_name\r\n  sname = sname\r\n  sname = String(sname)\r\n  sname = sname.trim()\r\n  return axios\r\n    .post('/message/'+sn, {\r\n      stock_name:sname,\r\n      target_price:message.target_price,\r\n      condition:message.condition,\r\n      message:message.message,\r\n\r\n    })\r\n    .then(response => {\r\n      console.log('Notification Message addded')\r\n\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios'\r\n\r\nexport const register = newStock => {\r\n  return axios\r\n    .post('/addStock', {\r\n      stock_name: newStock.stock_name,\r\n      entry_level: newStock.entry_level,\r\n      stop_loss:newStock.stop_loss,\r\n      techTarget:newStock.techTarget,\r\n      risk:newStock.risk,\r\n      timeline:newStock.timeline,      \r\n      buy_date:'',\r\n    })\r\n    .then(response => {\r\n      // console.log(response)\r\n\r\n    })\r\n}\r\n\r\nexport const editRegister = newStock => {\r\n  let sn = newStock.stock_code\r\n  return axios\r\n    .post('/editStock/'+sn, {\r\n      entry_level: newStock.entry_level,\r\n      stop_loss:newStock.stop_loss,\r\n      techTarget:newStock.techTarget,\r\n      risk:newStock.risk,\r\n      timeline:newStock.timeline\r\n    })\r\n    .then(response => {\r\n      console.log('Edited Stock')\r\n\r\n    })\r\n}\r\n\r\nexport const editRegisterHolding  = newStock => {\r\n  let sn = newStock.stock_code\r\n  return axios\r\n    .post('/editStockHoldings/'+sn, {    \r\n      order:newStock.order      \r\n    })\r\n    .then(response => {\r\n      console.log('Edited Stock')\r\n\r\n    })\r\n}\r\n\r\nexport const editRegisterHoldingRemove  = newStock => {\r\n  let sn = newStock.stock_code\r\n  let bd = newStock.buy_date\r\n\r\n  return axios\r\n    .delete('/editStockHoldingsRemove/'+bd)\r\n    .then(response => {\r\n      console.log('Deleted from holdings')\r\n        })\r\n}\r\n\r\n\r\nexport const removeExecutionList  = newStock => {\r\n  let sn = newStock._id\r\n  return axios\r\n    .delete('/removeExecution/'+sn)\r\n    .then(response => {\r\n      console.log(response)\r\n      console.log('Deleted Execution.')\r\n\r\n    })\r\n}\r\n\r\n\r\nexport const removeSellExecutionList  = newStock => {\r\n  let sn = newStock._id\r\n  let sc = newStock.stockCode\r\n  let ino = newStock.itemNumber\r\n  let param = sc+'_'+ino\r\n  axios\r\n    .delete('/removeSellExecution/'+sn)\r\n    .then(response => {\r\n      console.log(response)\r\n      console.log('Deleted Sell Execution.')\r\n\r\n    })   \r\n    return axios \r\n    .post('/holdingsSold/'+param)\r\n    .then(response => {\r\n      console.log(response)\r\n      console.log('Stock Sold out!')\r\n\r\n    })\r\n}\r\n\r\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { register } from './addStockFunction';\nimport { editRegister } from './addStockFunction';\nimport { getStockList } from \"../../Containers/Home/ListFunctions\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport axios from 'axios'\nimport \"../../Assets/CSS/StockAnalysisStyles/StockAnalysis.css\";\n\n// const styles = {\n//   errorStyle: {\n//     color: \"red\",\n//     fontSize: 13,\n//     minHeight: \"15px\"\n//   }\n// };\nclass DialogComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allStockCodeName:'',\n      entry_level:'',\n      stop_loss:'',\n      timeline:'',\n      stock_name:'',\n      allStocksMenuItems:[],\n      error:false,\n      checkEdit:''\n  };\n  this.onChange = this.onChange.bind(this)\n  }\n  componentDidMount(){\n    this.getStockLists();\n    // this.enableEdit();\n    // return axios.get('https://jsonblob.com/3d88fa75-3052-11ea-893e-07d39eae710d')\n    // .then(res=>{\n    \n    // })\n    \n  }\n  enableEdit=()=>{\n    if(this.props.checkEdit === true){\n    this.setState({checkEdit:true})}\n    else{\n      this.setState({checkEdit:false})\n    }\n  }\n  getStockLists = () => {\n    getStockList()\n      .then(data => {\n        this.setState({\n          allStocksMenuItems: data\n        }); \n             \n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  onChange(e) {\n    this.setState({error:false})\n    this.setState({ [e.target.name]: e.target.value })    \n    \n  }\n\n\nsave(e){\ne.preventDefault()\nlet testExistence=[] \nObject.values(this.props.checkScrip).map(i=>{\n  testExistence.push(i.scripName)\n  })    \nlet test = testExistence.includes(this.state.stock_name)\nif(test){this.setState({error:true})\nreturn null\n}\nelse{this.setState({error:false})} \n\nconst newStock = {\nstock_name: this.state.stock_name,\nentry_level: this.state.entry_level,\nstop_loss: this.state.stop_loss,\nrisk:this.state.risk,\ntimeline:this.state.timeline,\nholdings:false,\nbuy_date:'',\n}\nregister(newStock).then(res => {\nthis.setState({stock_name:''})\nthis.setState({entry_level:''}) \nthis.setState({stop_loss:''}) \nthis.setState({timeline:''})   \nthis.props.onClose();\n})\n}\n\n\n\neditSave(e){\n  e.preventDefault()\n  const newStock = {\n  stock_code:this.props.showScripCode,\n  stock_name:this.props.showScripName,\n  entry_level: this.state.entry_level,\n  stop_loss: this.state.stop_loss,\n  risk:this.state.risk,\n  timeline:this.state.timeline\n  }\n\n  editRegister(newStock).then(res => {\n  this.setState({entry_level:''}) \n  this.setState({stop_loss:''}) \n  this.setState({timeline:''})   \n  this.props.onClose();\n\n  })\n}\n\nclick=()=>{\n  this.clearAll();\n  this.props.onClose()  \n  \n}\nclearAll(){\nthis.setState({\n  stock_name:'',\n  entry_level:'',\n  stop_loss:'',\n  timeline:'',\n  error:false\n})\n\n}\n\n  render() {  \n   \n    let scrip_name_select\n    if(this.props.checkEdit === false){\n      scrip_name_select =\n      <FormControl >\n      <InputLabel id=\"demo-mutiple-checkbox-label\">Select Stock</InputLabel>\n       <Select \n       labelId=\"demo-mutiple-name-label\"\n        name='stock_name'\n        id=\"outlined-basic\"\n        label=\"Call\"\n        variant=\"outlined\"\n        value={this.state.stock_name}\n        onChange={this.onChange}   \n        >           \n        {         \n         Object.values(this.state.allStocksMenuItems).map((i,index) => {        \n            return <MenuItem key={index} value={i}>{i}</MenuItem>   \n         })\n                    \n        }          \n        </Select>\n        </FormControl>\n    }\n    else{\n      const showScripName = this.props.showScripName\n      scrip_name_select =   <TextField\n          name=\"stock_name\"\n          id=\"outlined-basic\"\n          label=\"Scrip Name\"\n          variant=\"outlined\"\n          type=\"text\"\n          value={showScripName}\n        />\n\n    }\n    return (\n      <Dialog open={this.props.open} onClose={this.props.onClose} fullWidth>\n        <div\n          style={{\n            display: \"flex\",\n            minWidth: 600,\n            flexDirection: \"column\"\n          }}\n        >\n          <span style={{ padding: 10, fontSize: \"25px\" }}>\n            Add Scrip\n            <i\n              className=\"material-icons\"\n              style={{ float: \"right\", cursor: \"pointer\" }}\n              onClick={this.props.onClose}\n            >\n              close\n            </i>\n          </span>\n          <div>\n\n          </div>\n          <div style={{ display: \"flex\", flex: 1, flexDirection: \"column\" }}>\n\n\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              flex: 1,\n              margin: 10\n            }}\n          >\n        {scrip_name_select}\n            {this.state.error?<span style={{color:'red',fontSize:'12px'}}>Stock alredy present!</span>:null}\n          </div>\n\n          </div>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n                <FormControl >\n               <InputLabel id=\"demo-mutiple-timeline-label\">Select Timeline</InputLabel>\n              <Select\n                 labelId=\"demo-mutiple-timeline-label\"\n                name=\"timeline\"\n                id=\"outlined-basic\"\n                label=\"Call\"\n                variant=\"outlined\"\n                value={this.state.timeline} onChange={this.onChange}\n              >\n                <MenuItem value=\"Weekly\">Weekly</MenuItem>\n                <MenuItem value=\"Monthly\">Monthly</MenuItem>\n                <MenuItem value=\"Quaterly\">Quaterly</MenuItem>\n                <MenuItem value=\"Half Yearly\">Half Yearly</MenuItem>\n                <MenuItem value=\"Yearly\">Yearly</MenuItem>\n              </Select>\n\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n               </FormControl>\n              </div>\n            </div>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n              <TextField\n                name=\"entry_level\"\n                id=\"outlined-basic\"\n                label=\"Entry Level\"\n                variant=\"outlined\"\n                type=\"number\"\n                value={this.state.entry_level}\n                onChange={this.onChange}\n              />\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n              <TextField\n                name=\"stop_loss\"\n                id=\"outlined-basic\"\n                label=\"Stop Loss\"\n                variant=\"outlined\"\n                type=\"number\"\n                value={this.state.stop_loss}\n                onChange={this.onChange}\n              />\n\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              padding: \"20px 10px\",\n              justifyContent: \"flex-end\",\n              marginTop: \"30px\"\n            }}\n          >\n            <button className=\"addScrip\" style={{ marginRight: \"20px\" }}\n             onClick={!this.props.checkEdit ? this.save.bind(this) : this.editSave.bind(this)}\n             disabled={ !this.state.entry_level || !this.state.stop_loss || !this.state.timeline }\n             >\n              Add Scrip\n            </button>\n            <button className=\"addScrip\"  onClick={this.click}  >\n              Close\n            </button>\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default DialogComponent;\n","import React from \"react\";\r\nimport classes from \"../../Assets/CSS/StockAnalysisStyles/StockAnalysis.css\";\r\nimport AddEditDialog from \"../../Components/DialogBox/Dialogbox\";\r\nimport SetNotification from \"../../Components/SetNotificationDialog/SetNotification\";\r\n\r\nclass NavigationBar extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        selectedId: \"\",\r\n        openAddScrip: false,\r\n        selectedScripCode:\"\",\r\n        editAddScrip:false,\r\n        setNotification:false,\r\n        genericDialog: false,\r\n        activeButton:'',\r\n        buttonColor:''\r\n      };\r\n    }\r\n\r\n   \r\n    goToMain = () => {  \r\n      \r\n      this.props.history.push(\"/TechnicalAnalysis\");\r\n    };\r\n\r\n    goToObservation = () => {\r\n    \r\n        this.props.onClosedObservationsDialog();\r\n        this.props.history.push(\"/Observation\");\r\n      };\r\n    \r\n    \r\n      goToExecution = () => {     \r\n        this.props.history.push(\"/Execution\");\r\n       \r\n      };\r\n    \r\n      goToHoldings = () => {      \r\n        this.props.history.push(\"/Holdings\");\r\n       \r\n      };\r\n    \r\n      goToTradeLogs = () => {    \r\n        this.props.history.push(\"/TradeLogs\");\r\n       \r\n      };\r\n    \r\n    \r\n      goToSellExecution = () => {    \r\n        this.props.history.push(\"/SellExecution\");\r\n       \r\n      };\r\n\r\n      openDialog = (param, scripCode ,scripName) => {\r\n        if (param === \"add\") {\r\n          this.setState({ selectedId: \"\", openAddScrip: true});\r\n    \r\n        } else {\r\n          this.setState({ openAddScrip: true, selectedId:scripName, selectedScripCode:scripCode,editAddScrip:true });\r\n        }\r\n      };\r\n      closeDialog = () => {\r\n        this.setState({ openAddScrip: false ,editAddScrip:false});    \r\n        this.props.onClosedDialog();\r\n      };\r\n\r\n      setNotificationOpen = (scripCode, name) => { \r\n        this.setState({ setNotification: true,\r\n        selectedId:name,\r\n        selectedScripCode:scripCode\r\n    \r\n          });\r\n          // this.props.onClosedObservationsDialog();\r\n      };\r\n      closeSetNotification = () => {\r\n        this.setState({ setNotification: false });\r\n        // this.props.onClosedObservationsDialog();\r\n      };\r\n\r\n      genericDialogOPen = () => {\r\n        this.setState({ genericDialog: true });\r\n      };\r\n      genericDialogClose = () => {\r\n        this.setState({ genericDialog: false });\r\n      };\r\n\r\n    render() {  \r\n     \r\n        return (<div>\r\n<span className=\"scrip-addation-button\">\r\n<div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n<button onClick={this.goToMain} class={this.props.location.pathname === '/TechnicalAnalysis' ? 'active' : 'tab'}>\r\n\r\n  <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                  \r\n                }}\r\n              >\r\n    Main\r\n    <i className=\"material-icons\" style={{marginLeft:'5px'}}>\r\n   home\r\n   </i>\r\n    </div>\r\n  </button>\r\n  <button  class={this.props.location.pathname === '/Observation' ? 'active' : 'tab'} onClick={this.goToObservation} >\r\n  <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                  \r\n                }}\r\n              >\r\n    Observations\r\n    <i className=\"material-icons\" style={{marginLeft:'5px'}}>\r\n    find_in_page\r\n   </i>   \r\n    </div>\r\n  </button>\r\n  <button class={this.props.location.pathname === '/Execution' ? 'active' : 'tab'}  onClick={this.goToExecution } >\r\n  <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                  \r\n                }}\r\n              >\r\n    Executions\r\n    <i className=\"material-icons\" style={{marginLeft:'5px'}}>\r\n    label_important\r\n   </i>\r\n   </div>\r\n  </button>\r\n  <button class={this.props.location.pathname === '/Holdings' ? 'active' : 'tab'}  onClick={this.goToHoldings } >\r\n  <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                  \r\n                }}\r\n              >\r\n    Holdings\r\n    <i className=\"material-icons\" style={{marginLeft:'5px'}}>\r\n    label_important\r\n   </i>\r\n   </div>            \r\n  </button>\r\n  <button  class={this.props.location.pathname === '/SellExecution' ? 'active' : 'tab'} onClick={this.goToSellExecution } >\r\n  <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                  \r\n                }}\r\n              >\r\n     Sell Executions\r\n    <i className=\"material-icons\" style={{marginLeft:'5px'}}>\r\n    label_important\r\n   </i>\r\n   </div>            \r\n  </button>          \r\n  <button  class={this.props.location.pathname === '/TradeLogs' ? 'active' : 'tab'} onClick={this.goToTradeLogs } >\r\n  <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                  \r\n                }}\r\n              >\r\n    Trade Logs\r\n    <i className=\"material-icons\" style={{marginLeft:'5px'}}>\r\n   done_all\r\n   </i>\r\n    </div>\r\n  </button>\r\n  </div>\r\n  <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n\r\n    <button\r\n      className=\"addScrip\"\r\n      style={{ margin: \"0px 10px\" }}\r\n      onClick={() =>\r\n        this.setNotificationOpen('','')\r\n      }\r\n    >\r\n      Generic\r\n    </button>\r\n    <button\r\n      className=\"addScrip\"\r\n      onClick={() => this.openDialog(\"add\", \"\")}\r\n    >             \r\n      Add Scrip\r\n    </button>\r\n  </div>\r\n</span>\r\n<AddEditDialog\r\n          open={this.state.openAddScrip}\r\n          onClose={this.closeDialog}\r\n          {...this.state}\r\n          checkEdit={this.state.editAddScrip}\r\n          showScripName={this.state.selectedId}\r\n          showScripCode={this.state.selectedScripCode}\r\n          addScrip={this.handleAddScrip}\r\n          checkScrip={this.props.scripsData}\r\n          \r\n        />\r\n         <SetNotification\r\n          openSetNotification={this.state.setNotification}\r\n          closeSetNotification={this.closeSetNotification}\r\n          showScripName={this.state.selectedId}\r\n          showScripCode={this.state.selectedScripCode}\r\n         alert={this.state.alert}\r\n         {...this.props}\r\n        />\r\n        </div>\r\n)\r\n\r\n}\r\n\r\n    }\r\nexport default NavigationBar;","import React from \"react\";\nimport \"../../../Assets/CSS/StockAnalysisStyles/StockAnalysis.css\";\nimport AlertTone from \"../../../Assets/Tone/WhatsApp Audio 2019-11-12 at 9.22.30 PM.mpeg\";\nimport AddtoHoldings from \"../../../Components/AddtoHoldings/AddtoHoldings\";\nimport SnackbarComponent from \"../../../Components/Snackbar/Snackbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteValidation from \"../../../Components/DeleteValidation/DeleteValidation\";\nimport AddExecutionDialog from \"../../../Components/ExecutionDialogBox/ExecutionDialogbox\";\nimport SetNotification from \"../../../Components/SetNotificationDialog/SetNotification\";\nimport NavigationBar from \"../../../Components/NavigationBar/NavigationBar\";\n\nclass TechnicalAnalysis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scripsData: [],\n      scripName: \"\",\n      stockCode: \"\",\n      sector: \"\",\n      time: \"WEEKLY\",\n      techTarget: \"\",\n      enteryLevel: \"\",\n      stopLoss: \"\",\n      call: \"BUY\",\n      timePeriod: \"\",      \n      openAddExecution:false,      \n      observationId: 0,\n      openObservation: false,\n      notifiaction: false,\n      snackOpen: false,\n      snackText: \"\",\n      deleteOpen: false,\n      removeId: \"\",\n      changedFiels: {},\n      setNotification: false,\n      genericDialog: false,\n      message: \"\",\n      stockCodeErrorMsg: \"\",\n      sectorErrorMsg: \"\",\n      scripNameErrorMsg: \"\",\n      callErrorMsg: \"\",\n      timeErrorMsg: \"\",\n      presentErrorMsg: \"\",\n      enteryLevelErrorMsg: \"\",\n      techTargetErrorMsg: \"\",\n      dynamicDataLTP: [],\n      bellIconData:[],\n      changeData:[],\n      observationsData:[],\n      alert:false,\n      selectedScripCode:'',\n      capturedPrice:'',\n      sLoss:'',    \n      tTarget:''\n      \n    };\n  }\n  componentDidUpdate(prevProps,prevState){\n  if(prevProps.data!=this.props.data){\n  this.setState({scripsData:this.props.data})\n  \n  }\n  \n  }\n\n  componentDidMount() {\n    this.setState({ scripsData: this.props.data });\n    this.setState({ changeData: this.props.dynamicDataChange });\n    this.setState({ bellIconData: this.props.bellIcon })\n    this.changeColor();\n    \n  }\n  \n  \n  selectCall = event => {\n    this.setState({ call: event });\n  };\n  selectTimePeriod = event => {\n    this.setState({ timePeriod: event });\n  };\n  \n  \n\n \n  openDeleteDialog = (scripCode, name) => {\n    this.setState({\n      deleteOpen: true,\n      selectedScripCode:scripCode,\n      selectedScripName: name\n    });\n  };\n  closeDeleteDialog = () => {\n    this.setState({\n      deleteOpen: false\n    });\n    this.props.onClosedDialog();\n    this.props.onClosedObservationsDialog()\n  };\n  \n  setNotificationOpen = (scripCode, name) => { \n    this.setState({ setNotification: true,\n    selectedId:name,\n    selectedScripCode:scripCode\n\n      });\n      // this.props.onClosedObservationsDialog();\n  };\n  closeSetNotification = () => {\n    this.setState({ setNotification: false });\n    // this.props.onClosedObservationsDialog();\n  };\n  \n \n\n  openExecutions= (scripCode ,scripName,pPrice,sLoss,tTarget) => {   \n      this.setState({ openAddExecution: true, selectedId:scripName, selectedScripCode:scripCode,capturedPrice:pPrice,sLoss:sLoss,tTarget:tTarget});\n    } \n\n  closeExecutions = () => {\n    this.setState({ openAddExecution: false });    \n    // this.props.onClosedDialog();\n  };\n \n  changeColor = val => {\n    if (val > 0) {\n      return {\n        background: \"green\"\n      };\n    } else {\n      return {\n        background: \"red\"\n      };\n    }\n  };\n\n  alertTone = () => {\n    let audio = new Audio(AlertTone);   \n    audio.play();   \n  };\n\n  render() {  \n\n    return (\n      <div className=\"TechnicalAnalysis-Main-Container\">\n      <NavigationBar {...this.props} {...this.state} scripsData={this.state.scripsData}/> \n        <div\n          style={{\n            flex: 1,\n            display: \"flex\",\n            overflow: \"scroll\"\n          }}\n        >\n          {this.state.scripsData.length > 0 ? (\n            <table style={{ width: \"100%\" }}>\n              <thead>\n                <tr>\n                  <td style={{left:0,position:'sticky',top:0,zIndex:1}}>Scrip Code</td>\n                  <td style={{left:100,position:'sticky',top:0,zIndex:1}}>Stock Name</td>\n                  <td style={{left:260,position:'sticky',top:0,zIndex:1}}>Sector</td>\n                  <td style={{left:0,position:'sticky',top:0,}}>Time</td>\n                  <td style={{left:0,position:'sticky',top:0,}}>Present</td>\n                  <td style={{left:0,position:'sticky',top:0,}}>Entry Level</td>\n                  <td style={{left:0,position:'sticky',top:0,}}>Stop Loss</td>\n                  <td style={{left:0,position:'sticky',top:0,}}>Tech Target 2X</td>\n                  <td style={{left:0,position:'sticky',top:0,}}>Diff</td>\n                  <td style={{left:0,position:'sticky',top:0,}}>Risk Point</td>\n                  <td style={{left:0,position:'sticky',top:0,}}>Equity Risk 0.5%</td>\n                  <td style={{left:0,position:'sticky',top:0,}}>Equity Risk 1%</td>\n                  <td style={{left:0,position:'sticky',top:0,}}>Equity Risk 2%</td>\n                  <td style={{left:0,position:'sticky',top:0,}}>Actions</td>\n                </tr>\n              </thead>\n              {this.state.scripsData.map((scrip, ind) => (\n                <tbody key={ind}>\n                  <tr>\n                    <td style={{left:0,position:'sticky',top:0,zIndex:1,backgroundColor:'white'}}>\n                      <div\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          justifyContent: \"space-between\"\n                        }}\n                      >\n                        {scrip.scripCode}                        \n                        {this.props.dynamicDataLTP[ind]=== undefined ?                     \n                        null:\n                        <i\n                        title=\"Execute order\"\n                         className=\"material-icons\"\n                         style={{\n                           backgroundColor:\"rgb(66, 81, 110)\",\n                           color:'white' ,\n                           cursor: \"pointer\",\n                           fontSize:\"large\",\n                           marginLeft:\"4px\"\n                         }}\n                         onClick={() =>\n                          this.openExecutions(scrip.scripCode,scrip.scripName,scrip.entryLevel,scrip.stopLoss,scrip.techTarget)\n                        }\n                        \n                       >\n                         trending_up\n                       </i>\n                        }\n                         \n                       \n                      \n                      </div>\n                    </td>\n                    <td style={{left:100,position:'sticky',top:0,zIndex:1,backgroundColor:'white'}}>{scrip.scripName}</td>\n                    <td style={{left:260,position:'sticky',top:0,zIndex:1,backgroundColor:'white'}}>{scrip.sectorName}</td>\n                    <td>{scrip.timeline}</td>\n                    <td\n                      id={\"tdresult\" + ind}\n                      style={this.changeColor(\n                        this.props.dynamicDataChange[ind]\n                      )}\n                    >\n                      <span id={\"result\" + ind}>\n                        {this.props.dynamicDataLTP[ind]}\n                      </span>\n                    </td>\n                    <td className=\"numric-values\" id=\"entry_level\">\n                      {scrip.entryLevel}\n                    </td>\n                    <td className=\"numric-values\">{scrip.stopLoss}</td>\n                    <td className=\"numric-values\">{scrip.techTarget}</td>\n                    <td className=\"numric-values\">\n                      <span id={\"dfresult\" + ind}>\n                        {(\n                          ((this.props.dynamicDataLTP[ind] -\n                            parseInt(scrip.entryLevel)) /\n                            this.props.dynamicDataLTP[ind]) *\n                          100\n                        ).toFixed(2)}%\n                      </span>\n                    </td>\n                    <td className=\"numric-values\">{scrip.risk}</td>\n                    <td className=\"numric-values\">\n                      <span id={\"es500result\" + ind}>\n                        {(500 / scrip.risk).toFixed(0)}\n                      </span>\n                    </td>\n                    <td className=\"numric-values\">\n                      <span id={\"es1000result\" + ind}>\n                        {(1000 / scrip.risk).toFixed(0)}\n                      </span>\n                    </td>\n                    <td className=\"numric-values\">\n                      <span id={\"es5000result\" + ind}>\n                        {(5000 / scrip.risk).toFixed(0)}\n                      </span>\n                    </td>\n                    <td>\n                    <div\n                        style={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          justifyContent: \"space-around\"\n                        }}\n                      >\n                        {parseInt(this.props.bellIcon[ind]) === 1 ? (\n                          <div>                            \n                          <Tooltip title=\"Set Notification\">\n                            <i\n                              id=\"non-alert-row\"\n                              className=\"material-icons\"\n                              onClick={() =>\n                                this.setNotificationOpen(scrip.scripCode,scrip.scripName)\n                              }\n                            >\n                              notifications_none\n                            </i>\n                          </Tooltip>\n                          </div>\n                        ) : (\n                          \"\"\n                        )}\n\n                        <div style={{ display: \"none\" }} id={\"alert\" + ind}>\n                          <Tooltip title=\"Set Notification\">\n                            <i\n                              id=\"non-alert-row\"\n                              className=\"material-icons\"\n                              onClick={() =>\n                                this.setNotificationOpen(\n                                  scrip.scripCode,\n                                  scrip.scripName,\n                                  \n                                )\n                              }\n                            >\n                              notifications_none\n                            </i>\n                          </Tooltip>\n                        </div>\n                        <Tooltip title=\"Edit\">\n                          <i\n                            className=\"material-icons\"\n                            id=\"Edit-row\"\n                            onClick={() => this.openDialog(\"edit\", scrip.scripCode, scrip.scripName)}\n                          >\n                            edit\n                          </i>\n                        </Tooltip>\n\n                        <Tooltip title=\"Delete\">\n                          <i\n                            className=\"material-icons\"\n                            id=\"delete-row\"\n                            onClick={() =>\n                              this.openDeleteDialog(scrip.scripCode, scrip.scripName)\n                            }\n                          >\n                            delete\n                          </i>\n                        </Tooltip>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              ))}\n            </table>\n          ) : (\n            <div\n              style={{\n                flex: 1,\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              No Data Found\n            </div>\n          )}\n        </div>\n        \n        <AddExecutionDialog\n          open={this.state.openAddExecution}\n          onClose={this.closeExecutions}\n          {...this.state}      \n          showScripName={this.state.selectedId}\n          showScripCode={this.state.selectedScripCode}\n          presentPrice={this.state.capturedPrice}\n          stopLoss={this.state.sLoss}\n          techTarget={this.state.tTarget}\n          // addScrip={this.handleAddScrip}\n          // checkScrip={this.state.scripsData}\n          \n        />\n        <AddtoHoldings\n          sentId={this.state.observationId}\n          scripInfo={this.state.scripsData}\n          closeObservation={this.closeObservation}\n          openObservation={this.state.openObservation}\n          addToHoldings={this.addToHoldings}\n          {...this.state}\n        />\n        <SnackbarComponent\n          snackbarOpen={this.state.snackOpen}\n          snackbarClose={this.closeSnackbar}\n          snackbartext={this.state.snackText}\n        />\n        <DeleteValidation\n          validate={this.state.deleteOpen}\n          closeDeletion={this.closeDeleteDialog}         \n          selectedScripName={this.state.selectedScripName}\n          DeleteEntry={this.state.selectedScripCode}\n          alert={this.state.alert}\n        />\n        <SetNotification\n          openSetNotification={this.state.setNotification}\n          closeSetNotification={this.closeSetNotification}\n          showScripName={this.state.selectedId}\n          showScripCode={this.state.selectedScripCode}\n         alert={this.state.alert}\n         {...this.props}\n        />\n       \n      </div>\n    );\n  }\n}\n\nexport default TechnicalAnalysis;\n","import React from \"react\";\nimport \"../../../Assets/CSS/AnalysisSelectorStyles/AnalysisSelector.css\";\nimport Radio from \"@material-ui/core/Radio\";\n\nclass AnalysisSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFA: 0,\n      selectedTA: 0,\n      holdings: 0\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"AnalysisSelector-Main-Container\">\n        <span id=\"fd-analysis\">\n          <label style={{fontSize:'14px'}}>\n            <Radio\n              checked={\n                this.props.location.pathname === \"/FundamentalAnalysis\"\n                  ? true\n                  : false\n              }\n              onChange={this.props.AnalysisSelection}\n              value=\"FA\"\n              style={{ color: \"#42516E\" }}\n              label=\"FUNDAMENTAL ANALYSIS\"\n            />\n            FUNDAMENTAL ANALYSIS\n          </label>\n        </span>\n        <span id=\"tl-analysis\">\n          <label style={{fontSize:'14px'}}>\n            <Radio\n              checked={\n                this.props.location.pathname === \"/TechnicalAnalysis\"\n                  ? true\n                  : false\n              }\n              onChange={this.props.AnalysisSelection}\n              value=\"TA\"\n              style={{ color: \"#42516E\" }}\n              label=\"TECHNICAL ANALYSIS\"\n            />\n            TECHNICAL ANALYSIS\n          </label>\n        </span>      \n      </div>\n    );\n  }\n}\n\nexport default AnalysisSelector;\n","import React from \"react\";\nimport \"../../../Assets/CSS/UserInfoBarStyles/UserInfoBar.css\";\nimport AlertTone from \"../../../Assets/Tone/WhatsApp Audio 2019-11-12 at 9.22.30 PM.mpeg\";\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initVal: new Date(1573625580000).toLocaleTimeString(),\n      endValue: new Date(1573625610000).toLocaleTimeString()\n    };\n  }\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.alertTone();\n    }, 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  alertTone = () => {\n    let audio = new Audio(AlertTone);\n    if (this.state.initVal >= this.state.endValue) {\n      audio.play();\n    } else {\n      audio.pause();\n    }\n  };\n  render() {\n    return (\n      <div\n        className=\"Timer-Main-Container\"\n        style={{\n          display: \"flex\",\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}\n      >\n        {this.state.initVal} {this.state.endValue}\n        <button onClick={this.alertTone}>Check it</button>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import axios from 'axios'\r\n\r\nexport const register = newStock => {\r\n  return axios\r\n    .post('/executeSellNotifications', {\r\n      item_no :newStock.itemNumber,\r\n      stock_name: newStock.stock_name,\r\n      stock_code: newStock.stock_code,\r\n      stop_loss:newStock.stop_loss,\r\n      present:newStock.present,    \r\n      timeline:newStock.timeline,\r\n      quantity:newStock.quantity,\r\n      remarks:newStock.remarks,\r\n      tech_target:newStock.tech_target,\r\n      sold_due_to:newStock.sold_due_to,    \r\n      execute_date:'',  \r\n    })  \r\n    .then(res => {\r\n     \r\n  \r\n      })\r\n    \r\n    \r\n   \r\n}\r\n\r\n\r\n\r\nexport const editRegisterHolding  = newStock => {\r\n  let sn = newStock.stock_code\r\n  return axios\r\n    .post('/editStockHoldings/'+sn, {\r\n      holdings: true,      \r\n    })\r\n    .then(response => {\r\n      console.log('Edited Stock')\r\n\r\n    })\r\n}\r\n\r\nexport const editRegisterHoldingRemove  = newStock => {\r\n  let sn = newStock.stock_code\r\n  return axios\r\n    .post('/editStockHoldingsRemove/'+sn, {\r\n      holdings: false,      \r\n    })\r\n    .then(response => {\r\n      console.log('Edited Stock')\r\n\r\n    })\r\n}","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { register } from './SellExecutionFunction';\nimport axios from 'axios'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport \"../../Assets/CSS/StockAnalysisStyles/StockAnalysis.css\";\n\n// const styles = {\n//   errorStyle: {\n//     color: \"red\",\n//     fontSize: 13,\n//     minHeight: \"15px\"\n//   }\n// };\nclass DialogComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allStockCodeName:'',\n      quantity:'',\n      remarks:'',\n      stop_loss:'',\n      timeline:'Sell',\n      stock_name:'', \n\n\n  };\n  this.onChange = this.onChange.bind(this)\n  }\n \n \n\n  onChange(e) {  \n    this.setState({ [e.target.name]: e.target.value })   \n    }\n\n\nsave(e){\ne.preventDefault()\nconst newStock = {\n  itemNumber:this.props.itemNumber,\n  quantity: this.state.quantity, \n  timeline:this.state.timeline,\n  remarks:this.state.remarks,\n  present:this.props.presentPrice,\n  stock_name:this.props.showScripName,\n  stop_loss:this.props.stopLoss,\n  stock_code:this.props.showScripCode, \n  tech_target:this.props.techTarget,\n  sold_due_to:'Explicit',\n  // sell_price:this.props.sellPrice\n  }\n  register(newStock).then(res => { \n  this.click();\n  this.props.onClose();\n  })\n  axios\n  .post('/updateOrderFlag/'+this.props.showScripCode+'_'+this.props.itemNumber+'_'+this.props.sellPrice+'_'+'Explicit') \n  axios\n  .get('/send_sell_message', {\n    headers: { \"Content-type\": \"application/json\" }\n   })\n\n}\n\n\nclick=()=>{\n  this.clearAll();\n  this.props.onClose()  \n  \n}\nclearAll(){\nthis.setState({\n  quantity:'',\n  timeline:'',\n  remarks:''\n})\n\n}\n\n  render() {  \n\n    let scrip_name_select\n   \n      const showScripName = this.props.showScripName\n      scrip_name_select =   <TextField\n          name=\"stock_name\"\n          id=\"outlined-basic\"\n          label=\"Scrip Name\"\n          variant=\"outlined\"\n          type=\"text\"\n          value={showScripName}\n        />\n\n\n    return (\n      <Dialog open={this.props.open} onClose={this.props.onClose} fullWidth>\n        <div\n          style={{\n            display: \"flex\",\n            minWidth: 600,\n            flexDirection: \"column\"\n          }}\n        >\n          <span style={{ padding: 10, fontSize: \"25px\" }}>\n            Sell Holdings\n            <i\n              className=\"material-icons\"\n              style={{ float: \"right\", cursor: \"pointer\" }}\n              onClick={this.click}\n            >\n              close\n            </i>\n          </span>\n          <div>\n\n          </div>\n          <div style={{ display: \"flex\", flex: 1, flexDirection: \"column\" }}>\n\n\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              flex: 1,\n              margin: 10\n            }}\n          >\n           {scrip_name_select}\n          \n          </div>\n          <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n              <TextField\n                name=\"stock_code\"\n                id=\"outlined-basic\"\n                label=\"Stock Code\"\n                variant=\"outlined\"\n                type=\"text\"\n                value={this.props.showScripCode}\n                \n              />\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n\n          </div>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n             \n\n              <TextField\n                name=\"timeline\"\n                id=\"outlined-basic\"\n                label=\"Call\"\n                variant=\"outlined\"\n                type=\"text\"\n                value=\"Sell\"\n                \n                 />\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n              \n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >  \n              <FormControl >\n              <InputLabel id=\"demo-mutiple-qty-label\">Select Quantity %</InputLabel>\n                <Select\n                labelId=\"demo-mutiple-qty-label\"\n                name=\"quantity\"\n                id=\"outlined-basic\"\n                title=\"Percentage of Quantities?\"\n                variant=\"outlined\"\n                value={this.state.quantity} onChange={this.onChange}\n              >\n               \n                <MenuItem value=\"50\">50 %</MenuItem>\n                <MenuItem value=\"100\">100 %</MenuItem>\n             \n              </Select>\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n                </FormControl>\n              </div>\n            </div>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n            <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n              <TextField\n                name=\"current_price\"\n                id=\"outlined-basic\"\n                label=\"Entry Level\"\n                variant=\"outlined\"\n                type=\"number\"\n                value={this.props.presentPrice}\n                \n              />\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n              <TextField\n                name=\"stop_loss\"\n                id=\"outlined-basic\"\n                label=\"Stop Loss\"\n                variant=\"outlined\"\n                type=\"number\"\n                value={this.props.stopLoss}\n                \n              />\n\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n              <TextField\n                name=\"tech_target\"\n                id=\"outlined-basic\"\n                label=\"Tech Target 2X\"\n                variant=\"outlined\"\n                type=\"number\"\n                value={this.props.techTarget}\n                \n              />\n\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n            </div>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n            <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n              <TextField\n                name=\"remarks\"\n                id=\"outlined-basic\"\n                label=\"Remarks\"\n                variant=\"outlined\"\n                type=\"text\"\n                value={this.state.remarks}\n                onChange={this.onChange}\n              />\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>           \n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              padding: \"20px 10px\",\n              justifyContent: \"flex-end\",\n              marginTop: \"30px\"\n            }}\n          >\n            <button className=\"addScrip\" style={{ marginRight: \"20px\" }}\n             onClick={this.save.bind(this)}\n             disabled={ !this.state.quantity }\n             >\n              Send Alert\n            </button>\n            <button className=\"addScrip\"  onClick={this.click}  >\n              Close\n            </button>\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default DialogComponent;\n","import React from \"react\";\nimport \"../../../Assets/CSS/StockAnalysisStyles/StockAnalysis.css\";\nimport Addtoobservation from \"../../../Components/AddtoHoldings/AddtoHoldings\";\nimport DeleteValidation from \"../../../Components/DeleteValidation/DeleteValidation\";\nimport SnackbarComponent from \"../../../Components/Snackbar/Snackbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport SellDialogBox from \"../../../Components/SellDialogBox/SellDialogbox\"\nimport { editRegisterHoldingRemove } from \"../../../Components/DialogBox/addStockFunction\"\nimport { register } from '../../../Components/SellDialogBox/SellExecutionFunction';\nimport NavigationBar from \"../../../Components/NavigationBar/NavigationBar\";\nimport axios from 'axios'\n// const styles = {\n//   errorStyle: {\n//     color: \"red\",\n//     fontSize: 13,\n//     minHeight: \"15px\"\n//   }\n// };\nclass TechnicalAnalysis extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        scripsData: [],\n        scripsDataa:[],\n        scripName: \"\",\n        stockCode: \"\",\n        sector: \"\",\n        time: \"WEEKLY\",\n        techTarget: \"\",\n        enteryLevel: \"\",\n        stopLoss: \"\",\n        call: \"BUY\",\n        timePeriod: \"\",\n        openAddScrip: false,\n        selectedId: \"\",\n        observationId: 0,\n        openObservation: false,\n        notifiaction: false,\n        selectedScrip: \"\",\n        snackOpen: false,\n        snackText: \"\",\n        deleteOpen: false,\n        removeId: \"\",\n        changedFiels: {},\n        setNotification: false,\n        genericDialog: false,\n        message: \"\",\n        stockCodeErrorMsg: \"\",\n        sectorErrorMsg: \"\",\n        scripNameErrorMsg: \"\",\n        callErrorMsg: \"\",\n        timeErrorMsg: \"\",\n        presentErrorMsg: \"\",\n        enteryLevelErrorMsg: \"\",\n        techTargetErrorMsg: \"\",\n        dynamicDataLTP: [],\n        bellIconData:[],\n        changeData:[],\n        openSellExecution:false,\n        itemNumber:'',\n        sellPrice:'',\n      };\n    }\n    componentDidUpdate(prevProps,prevState){\n    \n    if(prevProps.holdingsData!==this.props.holdingsData){ \n    this.setState({scripsData:this.props.holdingsData})    \n    this.props.onClosedDialog();  \n    this.setState({scripsDataa:this.props.data})\n    }\n    \n\n    }\n  \n    componentDidMount() {\n      \n      this.props.onClosedDialogHoldings();\n      this.props.onClosedDialog(); \n      this.setState({ scripsData: this.props.holdingsData });\n      this.setState({ scripsDataa: this.props.data });\n      this.setState({ changeData: this.props.dynamicDataChange });\n   \n      this.changeColor();\n      \n    }\n    \n    \n  \n    changeColor = val => {\n      if (val > 0) {\n        return {\n          background: \"green\"\n        };\n      } else {\n        return {\n          background: \"red\"\n        };\n      }\n    };\n\n    openSellExecutions= (scripCode ,scripName,pPrice,sLoss,tTarget,itemNumber,sellPrice) => {        \n      this.setState({ openSellExecution: true, selectedId:scripName, selectedScripCode:scripCode,capturedPrice:pPrice,sLoss:sLoss,techTarget:tTarget,itemNumber:itemNumber,sellPrice:sellPrice});\n    } \n\n    closeSellExecutions = () => {      \n      this.setState({ openSellExecution: false });        \n      this.props.onClosedDialogHoldings();\n      \n    };\n\n    save=(iteNumber,scripCode,scripName,entryLevel,stopLoss,techTarget,soldDueTo,ltp)=>{\n    \n      const newStock = {\n        itemNumber:iteNumber,\n        quantity: 100, \n        timeline:'Sell',\n        remarks:'Sell the holdings..',\n        present:entryLevel,\n        stock_name:scripName,\n        stop_loss:stopLoss,\n        stock_code:scripCode, \n        tech_target:techTarget,\n        sold_due_to:soldDueTo,\n        // sell_price:ltp\n        }\n        register(newStock).then(res => { \n        \n        })\n       \n         axios\n        .post('/updateOrderFlag/'+scripCode+'_'+iteNumber+'_'+ltp)          \n         axios\n        .get('/send_sell_message', {\n          headers: { \"Content-type\": \"application/json\" }\n         }) \n         \n         \n      }\n\n \n\n    render() {    \n\n      return (\n        <div className=\"TechnicalAnalysis-Main-Container\">\n           <NavigationBar {...this.props} {...this.state} scripsData={this.state.scripsDataa} /> \n          <div\n            style={{\n              flex: 1,\n              display: \"flex\",\n              overflow: \"scroll\"\n            }}\n          >\n            {this.state.scripsDataa.length > 0 ? (\n              <table style={{ width: \"100%\" }}>\n                <thead>\n                  <tr>\n                    <td  style={{left:0,position:'sticky',top:0,zIndex:1}}>Scrip Code</td>\n                    <td style={{left:100,position:'sticky',top:0,zIndex:1}}>Stock Name</td>\n                    <td style={{left:260,position:'sticky',top:0,zIndex:1}}>Sector</td>   \n                    <td>Quantity</td>  \n                    <td>Present</td>                             \n                    <td>Entry Level</td>      \n                    <td>Tech Target 2X</td>\n                    <td>Stop Loss</td>  \n                    <td>Diff</td>                                      \n                    <td>% Diff to Target</td>\n                    <td>% Diff to SL</td>\n                    <td>Buy Date</td>\n                  </tr>\n                </thead>\n                {this.state.scripsDataa.map((scrip, inde) => (\n                \n                  <tbody key={inde}>\n                   {             \n                \n                   scrip.order ?           \n                   \n                    scrip.order.length > 0 ?                    \n                    Object.values(scrip.order).map((i,ind)=>{\n                    if(scrip.order[ind].sold === false && scrip.order[ind].flag === false){\n                     return( <tr>\n                   \n                    <td style={{left:0,position:'sticky',top:0,zIndex:1,backgroundColor:'white'}}>\n                    <div\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          justifyContent: \"space-between\"\n                        }}\n                      > \n                     \n                      {scrip.scripCode}\n                       <i\n                       title=\"Sell\"\n                         className=\"material-icons\"\n                         style={{\n                           backgroundColor:\"rgb(66, 81, 110)\",\n                           color:'white' ,\n                           cursor: \"pointer\",\n                           fontSize:\"large\",\n                           marginLeft:\"4px\"\n                         }}\n                         onClick={() =>\n                          this.openSellExecutions(scrip.scripCode,scrip.scripName,scrip.entryLevel,scrip.order[ind].stopLoss,scrip.order[ind].techTarget,scrip.order[ind].itemNumber,this.props.dynamicDataLTP[inde])\n                        }\n                        \n                       >\n                         trending_up\n                       </i>\n                   \n                      </div>\n                      \n                      </td>  \n                    <td style={{left:100,position:'sticky',top:0,zIndex:1,backgroundColor:'white'}}>{scrip.scripName}</td>\n                    <td style={{left:260,position:'sticky',top:0,zIndex:1,backgroundColor:'white'}}>{scrip.sectorName}</td> \n                    <td>{i.quantity}</td>\n                    <td\n                      id={\"tdresult\" + ind}\n                      style={this.changeColor(\n                        this.props.dynamicDataChange[inde]\n                      )}\n                    >\n                      <span id={\"result\" + ind}>\n                   \n                        {this.props.dynamicDataLTP[inde]}   \n\n                                         \n                        \n                      </span>\n                    </td>\n                      <td className=\"numric-values\">{i.present}</td>                   \n                      <td className=\"numric-values\">{scrip.order[ind].techTarget}</td>\n                      <td className=\"numric-values\">{scrip.order[ind].stopLoss}</td>\n                    <td className=\"numric-values\">\n                      <span id={\"dfresult\" + ind}>\n                        {(\n                          ((this.props.dynamicDataLTP[ind] -\n                            parseInt(scrip.entryLevel)) /\n                            this.props.dynamicDataLTP[ind]) *\n                          100\n                        ).toFixed(2)}%\n                      </span>\n                    </td>\n                    <td className=\"numric-values\">{(((scrip.techTarget - this.props.dynamicDataLTP[ind]) / this.props.dynamicDataLTP[ind]) * 100 ).toFixed(2) }%</td>\n                    <td className=\"numric-values\">\n                    {(((scrip.stopLoss - this.props.dynamicDataLTP[ind]) / this.props.dynamicDataLTP[ind]) * 100 ).toFixed(2) }%\n                    </td>\n                    <td>\n                    <td>{i.buyDate.split('.')[0]}</td>\n                    </td>\n                      </tr>)\n                    }})\n                    \n                    :null\n                   \n                   : null } \n                    \n                   \n                  </tbody>\n                ))}\n              </table>\n            ) : (\n              <div\n                style={{\n                  flex: 1,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\"\n                }}\n              >\n                No Data Found\n              </div>\n            )}\n          </div>\n          \n          <SellDialogBox\n          open={this.state.openSellExecution}\n          onClose={this.closeSellExecutions}\n          {...this.state}      \n          showScripName={this.state.selectedId}\n          showScripCode={this.state.selectedScripCode}\n          presentPrice={this.state.capturedPrice}\n          stopLoss={this.state.sLoss}\n          techTarget={this.state.techTarget}\n          itemNumber={this.state.itemNumber}\n          sellPrice={this.state.sellPrice}\n          // addScrip={this.handleAddScrip}\n          // checkScrip={this.state.scripsData}\n          \n        />\n         \n         \n        </div>\n      );\n    }\n}\n\nexport default TechnicalAnalysis;\n","import React from \"react\";\nimport $ from 'jquery';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { getList , getObservationsList } from '../ListFunctions';\nimport DeleteValidation from \"../../../Components/DeleteValidation/DeleteValidation\";\nimport NavigationBar from \"../../../Components/NavigationBar/NavigationBar\";\n\nclass SnackbarComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        scripsData: [],\n        deleteOpen: false,\n        selectedScripCode:'',\n        selectedScripName:'',\n        observationsData:[],\n        changeobservationsData:[],\n        alert:true,\n        scripId:'',\n        setNotification:''\n    };\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    if(prevProps.observationsData!=this.props.observationsData || prevProps.data!=this.props.data){\n      this.setState({observationsData:this.props.observationsData})\n      this.setState({scripsData:this.props.data})\n    }\n  }\n  componentDidMount() {\n   this.setState({ scripsData: this.props.data });\n   this.setState({observationsData:this.props.observationsData})\n   this.setState({ changeobservationsData: this.props.dynamicDataObservationsChange });\n    }\n\n    changeColor = val => {\n      if (val > 0) {\n        return {\n          background: \"green\"\n        };\n      } else {\n        return {\n          background: \"red\"\n        };\n      }\n    };\n\n    openDeleteDialog = (scripCode, name) => {\n      this.setState({\n        deleteOpen: true,\n        selectedScripCode:scripCode,\n        selectedScripName: name\n      });\n    };\n\n    closeDeleteDialog = () => {\n      this.setState({\n        deleteOpen: false\n      });      \n      this.props.onClosedObservationsDialog()\n    };\n\n \n  \n  render() {  \n    \n    let items\n    return (\n      <div className=\"TechnicalAnalysis-Main-Container\">\n        <NavigationBar {...this.props} {...this.state} scripsData={this.state.scripsData} /> \n      <div style={{ display: \"flex\", flex: 1 }}>\n      {this.state.observationsData.length>0?\n        <table style={{ width: \"100%\" }}>\n            <thead>\n              <tr>\n                <td>Scrip Code</td>\n                <td>Stock Name</td>\n                <td>Present</td>\n                <td>Target Price</td>\n                <td>Condition</td>\n                <td>Message</td>\n                <td>Actions</td>\n                </tr>\n            </thead>\n            {this.state.observationsData.map((scrip, ind) => (\n                <tbody key={ind}>\n                  <tr>\n                    <td>                 \n                        {scrip.scripCode}                     \n                      \n                    </td>\n                    <td>{scrip.scripName}</td>\n                    <td\n                      id={\"tdresult\" + ind}\n                      style={this.changeColor(\n                        this.props.dynamicDataObservationsChange[ind]\n                      )}\n                    >\n                      <span id={\"result\" + ind}>\n                        {this.props.dynamicDataObservationsLTP[ind]}\n                      </span>\n                    </td>\n                    <td>{scrip.targetPrice}</td>\n                    <td>{scrip.condition}</td>                   \n                    <td>{scrip.message}</td> \n                    <td>         \n                    <div\n                        style={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          justifyContent: \"space-around\"\n                        }}\n                      >                      \n                       \n\n                        <Tooltip title=\"Delete\">\n                          <i\n                            className=\"material-icons\"\n                            id=\"delete-row\"\n                            onClick={() =>\n                              this.openDeleteDialog(scrip.scripCode, scrip.scripName)\n                            }\n                          >\n                            delete\n                          </i>\n                        </Tooltip>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              ))}\n          </table>\n           :<div\n           style={{\n             flex: 1,\n             display: \"flex\",\n             justifyContent: \"center\",\n             alignItems: \"center\"\n           }}\n         >\n           No Observation.\n         </div>}\n\n      </div>\n       <DeleteValidation\n       validate={this.state.deleteOpen}\n       closeDeletion={this.closeDeleteDialog}       \n       selectedScripName={this.state.selectedScripName}\n       DeleteEntry={this.state.selectedScripCode}\n       alert={this.state.alert}\n     />\n    \n      </div>\n    );\n  }\n}\n\nexport default SnackbarComponent;\n","import React from \"react\";\r\nimport $ from 'jquery';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { getList , getObservationsList } from '../ListFunctions';\r\nimport DeleteValidation from \"../../../Components/DeleteValidation/DeleteValidation\";\r\nimport { getNotificationsList } from \"../ListFunctions\";\r\nimport axios from \"axios\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport { connect} from 'react-redux';\r\nimport * as actionTypes from '../../../store/actions';\r\nimport { editRegisterHolding,removeExecutionList } from \"../../../Components/DialogBox/addStockFunction\"\r\nimport NavigationBar from \"../../../Components/NavigationBar/NavigationBar\";\r\nclass SnackbarComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        deleteOpen: false,\r\n        selectedScripCode:'',\r\n        selectedScripName:'',\r\n        observationsData:[],\r\n        changeobservationsData:[],\r\n        alert:true,\r\n        scripId:'',\r\n        setNotification:'',\r\n        notificationsData:[],\r\n        scripsData:[]\r\n       \r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps,prevState){\r\n    if(prevProps.data!=this.props.data){\r\n      this.setState({scripsData:this.props.data})\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({scripsData:this.props.data})\r\n    getNotificationsList().then(data => {\r\n      this.setState({\r\n        notificationsData: [...data]\r\n      })\r\n  })\r\n\r\n  \r\n}\r\n\r\n\r\n\r\nopenOrderDialog = (present,qty,scripCode,scripName,eDate,id,tt,sl)=>{\r\n  this.props.onPriceUpdate(present,qty,scripCode,scripName)\r\n  this.addToHoldings(present,qty,scripCode,eDate,tt,sl)\r\n  this.removeFromExecution(id)\r\n  this.props.history.push(\"/ExecutionsList\");\r\n}\r\n \r\naddToHoldings = (present,qty,scripCode,eDate,tt,sl) => { \r\n  const min = 1;\r\n  const max = 1000000;\r\n  const rand = min + Math.random() * (max - min);\r\n  const newStock = {\r\n    stock_code:scripCode,\r\n    \r\n    order:{ quantity: qty, present: present, buyDate:eDate,itemNumber:rand,flag:false,sold:false,techTarget:tt,stopLoss:sl},\r\n    holdings:false,\r\n    }\r\n  \r\n    editRegisterHolding(newStock).then(res => {\r\n      // this.props.onClosedDialog();      \r\n    })\r\n  \r\n};\r\n\r\nremoveFromExecution=(id)=>{\r\n  const newStock = {\r\n  _id:id\r\n  }\r\n  removeExecutionList(newStock).then(res=>{\r\n    this.props.onClosedDialog();\r\n  })\r\n}\r\n\r\n  render() {\r\n\r\n \r\n    let items\r\n    return (\r\n      <div className=\"TechnicalAnalysis-Main-Container\">\r\n        <NavigationBar {...this.props} {...this.state} scripsData={this.state.scripsData} /> \r\n      <div style={{ display: \"flex\", flex: 1 }}>\r\n      {this.state.notificationsData.length > 0 ?\r\n        <table style={{ width: \"100%\" }}>\r\n            <thead>\r\n              <tr>\r\n                <td>Scrip Code</td>\r\n                <td>Stock Name</td>\r\n                <td>Date</td>\r\n                <td>Qunantity</td>\r\n                <td>Actions</td>\r\n                <td>Stop Loss</td>\r\n                <td>Present</td>\r\n                <td>Remarks</td>             \r\n                \r\n                </tr>\r\n                </thead>\r\n               \r\n                  {this.state.notificationsData.map((scrip, ind) => (\r\n                    <tbody key={ind}>\r\n                      \r\n                      <tr>\r\n                        <td>  \r\n                        <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"space-between\"\r\n                            }}\r\n                          >               \r\n                            {scrip.scripCode}                     \r\n                            <i\r\n                             className=\"material-icons\"\r\n                             style={{\r\n                               color: \"rgb(66, 81, 110)\",\r\n                               cursor: \"pointer\"\r\n                             }}\r\n                             onClick={() =>\r\n                              this.openOrderDialog(scrip.present,scrip.quantity,scrip.scripCode,scrip.scripName,scrip.executeDate,scrip._id,scrip.techTarget,scrip.stopLoss)\r\n                            }\r\n                            \r\n                           >\r\n                             add_box\r\n                           </i>\r\n                           </div>\r\n                        </td>\r\n                        <td>{scrip.scripName}</td>\r\n                        <td\r\n                          id={\"tdresult\" + ind}\r\n                         \r\n                        >                  \r\n                          {scrip.executeDate.split('.')[0]}\r\n                        </td>\r\n                        <td>{scrip.quantity}</td>\r\n                        <td>{scrip.timeline}</td>\r\n                        <td>{scrip.stopLoss}</td>                   \r\n                        <td>{scrip.present}</td> \r\n                        <td>{scrip.remarks}</td>                             \r\n                       \r\n                      </tr>\r\n                    </tbody>\r\n                  ))                \r\n               }\r\n          \r\n          </table>\r\n          :<div\r\n          style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          No Executions.\r\n        </div>}\r\n\r\n      </div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n      onPriceUpdate:(value,value1,value2,value3)=>dispatch({type:actionTypes.PRICE_UPDATE,payload:value,payload1:value1,payload2:value2,payload3:value3}),\r\n\r\n    }\r\n\r\n}\r\nexport default connect(null,mapDispatchToProps)(SnackbarComponent);\r\n","\r\nexport const PRICE_UPDATE= 'PRICE_UPDATE';\r\nexport const SELL_TRADE= 'SELL_TRADE';","import React from \"react\";\r\nimport $ from 'jquery';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { getList , getObservationsList } from '../ListFunctions';\r\nimport DeleteValidation from \"../../../Components/DeleteValidation/DeleteValidation\";\r\nimport { getSellNotificationsList } from \"../ListFunctions\";\r\nimport axios from \"axios\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport { connect} from 'react-redux';\r\nimport * as actionTypes from '../../../store/actions';\r\nimport { editRegisterHolding,removeSellExecutionList } from \"../../../Components/DialogBox/addStockFunction\"\r\nimport NavigationBar from \"../../../Components/NavigationBar/NavigationBar\";\r\n\r\nclass SnackbarComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        deleteOpen: false,\r\n        selectedScripCode:'',\r\n        selectedScripName:'',\r\n        observationsData:[],\r\n        changeobservationsData:[],\r\n        alert:true,\r\n        scripId:'',\r\n        setNotification:'',\r\n        notificationsData:[],\r\n        scripsData:[]\r\n       \r\n    };\r\n  }\r\ncomponentDidUpdate(prevProps,prevState){\r\n  if(prevProps.data!==this.props.data){\r\n    this.setState({scripsData:this.props.data})\r\n  }  \r\n  \r\n}\r\n\r\n\r\n\r\n  componentDidMount(){\r\n    this.props.onClosedDialog();\r\n    this.setState({scripsData:this.props.data})\r\n    getSellNotificationsList().then(data => {\r\n      this.setState({\r\n        notificationsData: [...data]\r\n      })\r\n  })\r\n \r\n}\r\n\r\n\r\n\r\n\r\nopenOrderDialog = (itemNumber,present,qty,scripCode,scripName,eDate,id)=>{\r\n  this.props.onSellScrips(itemNumber,qty,scripCode,scripName)\r\n  this.removeFromExecution(itemNumber,id,scripCode)\r\n  this.props.history.push(\"/ExecutionsSellList\");\r\n} \r\n\r\nremoveFromExecution=(itemNumber,id,stockCode)=>{\r\n  const newStock = {\r\n  _id:id,\r\n  stockCode:stockCode,\r\n  itemNumber:itemNumber\r\n  }\r\n  removeSellExecutionList(newStock).then(res=>{\r\n    // this.props.onClosedDialog();\r\n  })\r\n}\r\ndeleteSell=(scripCode,itemNumber,stopLoss,techTarget)=>{\r\n  const sn = scripCode+'_'+itemNumber+'_'+stopLoss+'_'+techTarget\r\n  axios\r\n  .post('/rollbackSellExecution/'+sn)\r\n  .then(response => {\r\n    console.log('Edited Stock')\r\n\r\n  })\r\n  this.props.history.push(\"/Holdings\");\r\n}\r\n\r\n  render() {  \r\n    \r\n\r\n\r\n    \r\n    let items\r\n    return (\r\n      <div className=\"TechnicalAnalysis-Main-Container\">\r\n           <NavigationBar {...this.props} {...this.state} scripsData={this.state.scripsData} /> \r\n      <div style={{ display: \"flex\", flex: 1 }}>\r\n        {this.state.notificationsData.length>0?\r\n         <table style={{ width: \"100%\" }}>\r\n         <thead>\r\n           <tr>\r\n             <td>Scrip Code</td>\r\n             <td>Stock Name</td>\r\n             <td>Date</td>\r\n             <td>Qunantity %</td>\r\n             <td>Actions</td>\r\n             <td>Stop Loss</td>\r\n             <td>Tech Target 2X</td>\r\n             <td>Entry Level</td>\r\n             <td>Remarks</td>  \r\n             <td>Actions</td>           \r\n             \r\n             </tr>\r\n             </thead>\r\n         {this.state.notificationsData.map((scrip, ind) => (\r\n             <tbody key={ind}>\r\n               \r\n               <tr>\r\n                 <td>  \r\n                 <div\r\n                     style={{\r\n                       display: \"flex\",\r\n                       alignItems: \"center\",\r\n                       justifyContent: \"space-between\"\r\n                     }}\r\n                   >               \r\n                     {scrip.scripCode}                     \r\n                     <i\r\n                     title=\"Execute Sell\"\r\n                      className=\"material-icons\"\r\n                      style={{\r\n                        color: \"rgb(66, 81, 110)\",\r\n                        cursor: \"pointer\"\r\n                      }}\r\n                      onClick={() =>\r\n                       this.openOrderDialog(scrip.itemNumber,scrip.present,scrip.quantity,scrip.scripCode,scrip.scripName,scrip.executeDate,scrip._id)\r\n                     }\r\n                     \r\n                    >\r\n                      ballot\r\n                    </i>\r\n                    </div>\r\n                 </td>\r\n                 <td>{scrip.scripName}</td>\r\n                 <td\r\n                   id={\"tdresult\" + ind}\r\n                  \r\n                 >                  \r\n                   {scrip.executeDate.split('.')[0]}\r\n                 </td>\r\n                 <td>{scrip.quantity}</td>\r\n                 <td>{scrip.timeline}</td>\r\n                 <td>{scrip.stopLoss}</td>   \r\n                 <td>{scrip.techTarget}</td>                  \r\n                 <td>{scrip.buyPrice}</td> \r\n                 <td>{scrip.remarks}</td>                             \r\n                 <td>         \r\n                    <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                          justifyContent: \"space-around\"\r\n                        }}\r\n                      >                      \r\n                       \r\n\r\n                        <Tooltip title=\"Delete\">\r\n                          <i\r\n                            className=\"material-icons\"\r\n                            id=\"delete-row\"\r\n                            onClick={() =>\r\n                              this.deleteSell(scrip.scripCode,scrip.itemNumber,scrip.stopLoss,scrip.techTarget)\r\n                            }\r\n                          >\r\n                            delete\r\n                          </i>\r\n                        </Tooltip>\r\n                      </div>\r\n                    </td>\r\n               </tr>\r\n             </tbody>\r\n           ))}\r\n       </table>\r\n        :<div\r\n          style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          No Sell Executions.\r\n        </div>}\r\n       \r\n\r\n      </div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n    onSellScrips:(value,value1,value2,value3)=>dispatch({type:actionTypes.SELL_TRADE,payload:value,payload1:value1,payload2:value2,payload3:value3}),\r\n\r\n    }\r\n\r\n}\r\nexport default connect(null,mapDispatchToProps)(SnackbarComponent);\r\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { register } from './addStockFunction';\nimport { editRegister } from './addStockFunction';\nimport { getStockList } from \"../../Containers/Home/ListFunctions\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios'\nimport \"../../Assets/CSS/StockAnalysisStyles/StockAnalysis.css\";\n\n// const styles = {\n//   errorStyle: {\n//     color: \"red\",\n//     fontSize: 13,\n//     minHeight: \"15px\"\n//   }\n// };\nclass DialogComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allStockCodeName:'',\n      entry_level:'',\n      stop_loss:'',\n      timeline:'',\n      stock_name:'',\n      allStocksMenuItems:[],\n      error:false,\n      checkEdit:''\n  };\n  this.onChange = this.onChange.bind(this)\n  }\n  componentDidMount(){\n    this.getStockLists();\n    // this.enableEdit();\n    \n  }\n  enableEdit=()=>{\n    if(this.props.checkEdit === true){\n    this.setState({checkEdit:true})}\n    else{\n      this.setState({checkEdit:false})\n    }\n  }\n  getStockLists = () => {\n    getStockList()\n      .then(data => {\n        this.setState({\n          allStocksMenuItems: data\n        }); \n             \n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  onChange(e) {\n    this.setState({error:false})\n    this.setState({ [e.target.name]: e.target.value })    \n    \n  }\n\n\nsave(e){\ne.preventDefault()\nlet testExistence=[] \nObject.values(this.props.checkScrip).map(i=>{\n  testExistence.push(i.scripName)\n  })    \nlet test = testExistence.includes(this.state.stock_name)\nif(test){this.setState({error:true})\nreturn null\n}\nelse{this.setState({error:false})} \n\nconst newStock = {\nstock_name: this.state.stock_name,\nentry_level: this.state.entry_level,\nstop_loss: this.state.stop_loss,\nrisk:this.state.risk,\ntimeline:this.state.timeline,\nholdings:false,\nbuy_date:'',\n}\nregister(newStock).then(res => {\nthis.setState({stock_name:''})\nthis.setState({entry_level:''}) \nthis.setState({stop_loss:''}) \nthis.setState({timeline:''})   \nthis.props.onClose();\n})\n}\n\n\n\neditSave(e){\n  e.preventDefault()\n  const newStock = {\n  stock_code:this.props.showScripCode,\n  stock_name:this.props.showScripName,\n  entry_level: this.state.entry_level,\n  stop_loss: this.state.stop_loss,\n  risk:this.state.risk,\n  timeline:this.state.timeline\n  }\n\n  editRegister(newStock).then(res => {\n  this.setState({entry_level:''}) \n  this.setState({stop_loss:''}) \n  this.setState({timeline:''})   \n  this.props.onClose();\n\n  })\n}\n\nclick=()=>{\n  this.clearAll();\n  this.props.onClose()  \n  \n}\nclearAll(){\nthis.setState({\n  stock_name:'',\n  entry_level:'',\n  stop_loss:'',\n  timeline:'',\n  error:false\n})\n\n}\n\n\n  render() {  \n\n    \n  \n  let scrip_name_select\n    if(this.props.checkEdit === false){\n      scrip_name_select =\n\n       <Select\n        name='stock_name'\n        id=\"outlined-basic\"\n        label=\"Call\"\n        variant=\"outlined\"\n        value={this.state.stock_name}\n        onChange={this.onChange}>\n        {\n       \n         \n         Object.values(this.state.allStocksMenuItems).map((i,index) => {        \n            return <MenuItem key={index} value={i}>{i}</MenuItem>   \n         })\n                    \n        }          \n        </Select>\n\n    }\n    else{\n      const showScripName = this.props.showScripName\n      scrip_name_select =   <TextField\n          name=\"stock_name\"\n          id=\"outlined-basic\"\n          label=\"Scrip Name\"\n          variant=\"outlined\"\n          type=\"text\"\n          value={showScripName}\n        />\n\n    }\n    return (\n      <Dialog open={this.props.open} onClose={this.props.onClose} > \n        <div\n          style={{\n            display: \"flex\",\n            minWidth: 600,\n            flexDirection: \"column\"\n          }}\n        >\n          <span style={{ padding: 10, fontSize: \"25px\" }}>\n            Order Exection\n            <i\n              className=\"material-icons\"\n              style={{ float: \"right\", cursor: \"pointer\" }}\n              onClick={this.props.onClose}\n            >\n              close\n            </i>\n          </span>\n          <div>\n\n          </div>\n          <div style={{ display: \"flex\", flex: 1, flexDirection: \"column\" }}>\n\n\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              flex: 1,\n              margin: 10\n            }}\n          >\n        {scrip_name_select}\n            {this.state.error?<span style={{color:'red',fontSize:'12px'}}>Stock alredy present!</span>:null}\n          </div>\n\n          </div>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n              <Select\n                name=\"timeline\"\n                id=\"outlined-basic\"\n                label=\"Call\"\n                variant=\"outlined\"\n                value={this.state.timeline} onChange={this.onChange}\n              >\n                <MenuItem value=\"Weekly\">Weekly</MenuItem>\n                <MenuItem value=\"Monthly\">Monthly</MenuItem>\n                <MenuItem value=\"Quaterly\">Quaterly</MenuItem>\n                <MenuItem value=\"Half Yearly\">Half Yearly</MenuItem>\n                <MenuItem value=\"Yearly\">Yearly</MenuItem>\n              </Select>\n\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n            </div>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n              <TextField\n                name=\"entry_level\"\n                id=\"outlined-basic\"\n                label=\"Entry Level\"\n                variant=\"outlined\"\n                type=\"number\"\n                value={this.state.entry_level}\n                onChange={this.onChange}\n              />\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  flex: 1,\n                  margin: 10\n                }}\n              >\n              <TextField\n                name=\"stop_loss\"\n                id=\"outlined-basic\"\n                label=\"Stop Loss\"\n                variant=\"outlined\"\n                type=\"number\"\n                value={this.state.stop_loss}\n                onChange={this.onChange}\n              />\n\n                {/* <span style={styles.errorStyle}>error comes here</span> */}\n              </div>\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              padding: \"20px 10px\",\n              justifyContent: \"flex-end\",\n              marginTop: \"30px\"\n            }}\n          >\n            <button className=\"addScrip\" style={{ marginRight: \"20px\" }}\n             onClick={!this.props.checkEdit ? this.save.bind(this) : this.editSave.bind(this)}\n             disabled={ !this.state.entry_level || !this.state.stop_loss || !this.state.timeline }\n             >\n              Add Scrip\n            </button>\n            <button className=\"addScrip\"  onClick={this.click}  >\n              Close\n            </button>\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default DialogComponent;\n","import axios from 'axios'\r\n\r\nexport const register = newStock => {\r\n  return axios\r\n    .post('/addStock', {\r\n      stock_name: newStock.stock_name,\r\n      entry_level: newStock.entry_level,\r\n      stop_loss:newStock.stop_loss,\r\n      techTarget:newStock.techTarget,\r\n      risk:newStock.risk,\r\n      timeline:newStock.timeline,\r\n      holdings:false,\r\n      buy_date:'',\r\n    })\r\n    .then(response => {\r\n      // console.log(response)\r\n\r\n    })\r\n}\r\n\r\nexport const editRegister = newStock => {\r\n  let sn = newStock.stock_code\r\n  return axios\r\n    .post('/editStock/'+sn, {\r\n      entry_level: newStock.entry_level,\r\n      stop_loss:newStock.stop_loss,\r\n      techTarget:newStock.techTarget,\r\n      risk:newStock.risk,\r\n      timeline:newStock.timeline\r\n    })\r\n    .then(response => {\r\n      console.log('Edited Stock')\r\n\r\n    })\r\n}\r\n\r\nexport const editRegisterHolding  = newStock => {\r\n  let sn = newStock.stock_code\r\n  return axios\r\n    .post('/editStockHoldings/'+sn, {\r\n      holdings: true,      \r\n    })\r\n    .then(response => {\r\n      console.log('Edited Stock')\r\n\r\n    })\r\n}\r\n\r\nexport const editRegisterHoldingRemove  = newStock => {\r\n  let sn = newStock.stock_code\r\n  return axios\r\n    .post('/editStockHoldingsRemove/'+sn, {\r\n      holdings: false,      \r\n    })\r\n    .then(response => {\r\n      console.log('Edited Stock')\r\n\r\n    })\r\n}","import React from \"react\";\r\nimport $ from 'jquery';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { getList , getObservationsList } from '../ListFunctions';\r\nimport DeleteValidation from \"../../../Components/DeleteValidation/DeleteValidation\";\r\nimport { getNotificationsList } from \"../ListFunctions\";\r\nimport ExecutionListBox from \"../../../Components/ExecutionListBox/ExecutionListBox\";\r\nimport axios from \"axios\";\r\nimport { connect} from 'react-redux';\r\n\r\nclass SnackbarComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        deleteOpen: false,\r\n        selectedScripCode:'',\r\n        selectedScripName:'',        \r\n        alert:true,\r\n        scripId:'',\r\n        setNotification:'',\r\n        notificationsData:[],\r\n        usersData:[],\r\n        open:false,\r\n        close:true,\r\n        greaterThan:false\r\n    };\r\n  }\r\n\r\n  componentDidMount(){   \r\n  axios\r\n  .get('https://coreapi.gturns.com/UserData?limit=1000', {\r\n    headers: { \"Content-type\": \"application/json\" }\r\n})\r\n.then(res => {\r\n    this.fetchUserData(res.data)\r\n     \r\n})\r\n}\r\n\r\nfetchUserData = (data)=>{\r\nthis.setState({usersData:data})\r\n\r\n}\r\n\r\nfilterAccounts =()=>{\r\n  this.setState({greaterThan:!this.state.greaterThan})\r\n}\r\n\r\nsendEmail = (emailId,clientName,scripCode,scripName,quantity,rowid) =>{\r\n  $(\"#row_\"+rowid).hide()\r\n  const sn = emailId+'_'+clientName+'_'+scripCode+'_'+scripName+'_'+quantity\r\n  axios\r\n  .post('/sendEmail'+sn)\r\n}\r\n  \r\n  render() { \r\n       \r\n    let qtb,qtbqty,cps\r\n    let items \r\n    const sortedData  = [...this.state.usersData].sort((a, b) => {\r\n      if (parseInt(a.currentPortfolioValue)  > parseInt(b.currentPortfolioValue) ) return -1;\r\n      if (parseInt(a.currentPortfolioValue)  < parseInt(b.currentPortfolioValue) ) return 1;\r\n      return 0;\r\n    });\r\n \r\n    return (\r\n      <div className=\"TechnicalAnalysis-Main-Container\">\r\n      <div style={{ display: \"flex\", flex: 1 }}>\r\n        <table style={{ width: \"100%\" }}>\r\n            <thead>\r\n              <tr>\r\n                <td>\r\n                <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"space-between\"\r\n                        }}\r\n                      > \r\n                  Account Holder Name <select onChange={this.filterAccounts}>\r\n                  <option value='less'>Account Less than 1 Lakh </option>\r\n                  <option value='greater'>Account Greater than 1 Lakh </option>\r\n                 </select>\r\n                 </div>\r\n                 </td>\r\n                <td>Account Holder ID</td>\r\n                <td>Current Portfolio Value</td>\r\n                <td>Email ID</td>\r\n                <td>Action</td>\r\n                <td>Qty to Buy</td>\r\n                {!this.state.greaterThan?<td>Qty of Liquid Bees to Sell</td>:null}                     \r\n                \r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n         \r\n            </tbody>\r\n            {sortedData\r\n            //  .sort((a, b) => parseInt(a.currentPortfolioValue) > parseInt(b.currentPortfolioValue))\r\n            .map((acc, ind) => (\r\n                <tbody key={ind}>\r\n                 {parseInt(acc.currentPortfolioValue) > 0 && !this.state.greaterThan && parseInt(acc.currentPortfolioValue) < 100000 ?\r\n                 <tr id={'row_'+ind}>\r\n                 <td >                               \r\n                     {acc.clientName}                     \r\n                     </td>\r\n                 <td>{acc.clientCode}</td>                     \r\n                  <td>{parseInt(acc.currentPortfolioValue)}</td>\r\n                 <td>{acc.clientEmail}</td>\r\n                  <td>\r\n                  <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                          justifyContent: \"space-around\"\r\n                        }}\r\n                      >                      \r\n                       \r\n\r\n                        <Tooltip title=\"Send Email\">\r\n                          <i\r\n                            className=\"material-icons\"\r\n                            id=\"delete-row\"\r\n                            onClick={() =>\r\n                              this.sendEmail(acc.clientEmail,acc.clientName,this.props.sCode,this.props.sName,Math.round((parseInt(acc.currentPortfolioValue)/100000)*parseInt(this.props.qty)),ind)\r\n                            }\r\n                          >\r\n                            email\r\n                          </i>\r\n                        </Tooltip>\r\n                      </div>\r\n                  </td>\r\n                  <td>{Math.round((parseInt(acc.currentPortfolioValue)/100000)*parseInt(this.props.qty))}</td>\r\n\r\n              \r\n                 <td>{Math.round((((parseInt(acc.currentPortfolioValue)/100000) * parseInt(this.props.qty)) * parseInt(this.props.cprice))/1000) }</td>\r\n                 \r\n                \r\n               </tr>\r\n                 \r\n                 :null}\r\n\r\n                {parseInt(acc.currentPortfolioValue) > 0 && this.state.greaterThan && parseInt(acc.currentPortfolioValue) > 100000 ?\r\n                 <tr>\r\n                 <td>                               \r\n                     {acc.clientName}                     \r\n                     </td>\r\n                 <td>{acc.clientCode}</td>                     \r\n                  <td>{parseInt(acc.currentPortfolioValue)}</td>     \r\n                  <td>{acc.clientEmail}</td>\r\n                <td>\r\n                <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                          justifyContent: \"space-around\"\r\n                        }}\r\n                      >                      \r\n                       \r\n\r\n                        <Tooltip title=\"Send Email\">\r\n                          <i\r\n                            className=\"material-icons\"\r\n                            id=\"delete-row\"\r\n                            onClick={() =>\r\n                              this.sendEmail(acc.clientEmail,acc.clientName,this.props.sCode,this.props.sName,Math.round((parseInt(acc.currentPortfolioValue)/100000)*parseInt(this.props.qty)),ind)\r\n                            }\r\n                          >\r\n                            email\r\n                          </i>\r\n                        </Tooltip>\r\n                      </div>\r\n                  </td>       \r\n                 <td>{Math.round((parseInt(acc.currentPortfolioValue)/100000)*parseInt(this.props.qty))}</td>\r\n                 {!this.state.greaterThan?<td></td>:null}                                               \r\n                \r\n               </tr>\r\n                 \r\n                 :null}\r\n                  \r\n                </tbody>\r\n              \r\n              ))}\r\n          </table>\r\n\r\n      </div>\r\n       <ExecutionListBox\r\n       open={this.state.open}\r\n             \r\n      //  selectedScripName={this.state.selectedScripName}\r\n      //  DeleteEntry={this.state.selectedScripCode}\r\n      //  alert={this.state.alert}\r\n     />\r\n    \r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state =>{\r\n  return {\r\n    sCode: state.reducer.scripCode,\r\n    sName: state.reducer.scripName,\r\n    cprice :state.reducer.currentPrice,\r\n    qty : state.reducer.quantity\r\n      \r\n  };\r\n}\r\nexport default connect(mapStateToProps,null)(SnackbarComponent);\r\n","import React from \"react\";\r\nimport $ from 'jquery';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { getList , getObservationsList } from '../ListFunctions';\r\nimport DeleteValidation from \"../../../Components/DeleteValidation/DeleteValidation\";\r\nimport { getNotificationsList } from \"../ListFunctions\";\r\nimport ExecutionListBox from \"../../../Components/ExecutionListBox/ExecutionListBox\";\r\nimport axios from \"axios\";\r\nimport { connect} from 'react-redux';\r\n\r\nclass SnackbarComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        deleteOpen: false,\r\n        selectedScripCode:'',\r\n        selectedScripName:'',        \r\n        alert:true,\r\n        scripId:'',\r\n        setNotification:'',\r\n        notificationsData:[],\r\n        usersData:[],\r\n        open:false,\r\n        close:true,\r\n        greaterThan:false\r\n    };\r\n  }\r\n\r\n  componentDidMount(){   \r\n  axios\r\n  .get('https://coreapi.gturns.com/holdingsData?limit=1000', {\r\n    headers: { \"Content-type\": \"application/json\" }\r\n})\r\n.then(res => {\r\n    this.fetchUserData(res.data)\r\n     \r\n})\r\n}\r\n\r\nfetchUserData = (data)=>{\r\nthis.setState({usersData:data})\r\n\r\n}\r\n\r\nfilterAccounts =()=>{\r\n  this.setState({greaterThan:!this.state.greaterThan})\r\n}\r\n\r\nsendEmailSell = (emailId,clientName,scripCode,scripName,quantity,rowid) =>{\r\n  $(\"#row_\"+rowid).hide()\r\n  const sn = emailId+'_'+clientName+'_'+scripCode+'_'+scripName+'_'+quantity\r\n  axios\r\n  .post('/sendEmailSell'+sn)\r\n}\r\n  \r\n  render() {     \r\n    let denominator \r\n    if(this.props.qty === '100'){\r\n      denominator=1\r\n    }\r\n    else{denominator=0.5}\r\n    let items\r\n    return (\r\n      <div className=\"TechnicalAnalysis-Main-Container\">\r\n      <div style={{ display: \"flex\", flex: 1 }}>\r\n        <table style={{ width: \"100%\" }}>\r\n            <thead>\r\n              <tr>\r\n                <td>Account Holder Name</td>\r\n                <td>Account Holder ID</td>\r\n                <td>Email ID</td>\r\n                <td>Action</td>\r\n                <td>Qunantity to Sell</td>                                 \r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n         \r\n            </tbody>\r\n            {this.state.usersData.map((acc, ind) => (\r\n                <tbody key={ind}>\r\n                { this.props.cod === acc.symbol ?                \r\n                <tr id={'row_'+ind}>                  \r\n                <td>{acc.clientName}</td>\r\n                <td>{acc.clientCode}</td> \r\n                <td>{acc.clientEmail}</td> \r\n                <td>\r\n                <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                          justifyContent: \"space-around\"\r\n                        }}\r\n                      >                      \r\n                       \r\n\r\n                        <Tooltip title=\"Send Email\">\r\n                          <i\r\n                            className=\"material-icons\"\r\n                            id=\"delete-row\"\r\n                            onClick={() =>\r\n                              this.sendEmailSell(acc.clientEmail,acc.clientName,this.props.cod,this.props.nam, Math.floor(parseInt(acc.qty) * denominator ),ind)\r\n                            }\r\n                          >\r\n                            email\r\n                          </i>\r\n                        </Tooltip>\r\n                      </div>\r\n                  </td>        \r\n                 <td>{ Math.floor(parseInt(acc.qty) * denominator )}</td>\r\n                </tr>\r\n                :null}\r\n                \r\n                  \r\n                </tbody>\r\n              \r\n              ))}\r\n          </table>\r\n\r\n      </div>\r\n       <ExecutionListBox\r\n       open={this.state.open}\r\n             \r\n      //  selectedScripName={this.state.selectedScripName}\r\n      //  DeleteEntry={this.state.selectedScripCode}\r\n      //  alert={this.state.alert}\r\n     />\r\n    \r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state =>{\r\n  return {\r\n      cod: state.reducer.sellScripCode,\r\n      qty : state.reducer.sellQuantity,\r\n      nam : state.reducer.sellScripName\r\n  };\r\n}\r\nexport default connect(mapStateToProps,null)(SnackbarComponent);\r\n","import React from \"react\";\nimport \"../../../Assets/CSS/StockAnalysisStyles/StockAnalysis.css\";\nimport Addtoobservation from \"../../../Components/AddtoHoldings/AddtoHoldings\";\nimport DeleteValidation from \"../../../Components/DeleteValidation/DeleteValidation\";\nimport SnackbarComponent from \"../../../Components/Snackbar/Snackbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport SellDialogBox from \"../../../Components/SellDialogBox/SellDialogbox\"\nimport { editRegisterHoldingRemove } from \"../../../Components/DialogBox/addStockFunction\"\nimport { register } from '../../../Components/SellDialogBox/SellExecutionFunction';\nimport NavigationBar from \"../../../Components/NavigationBar/NavigationBar\";\nimport axios from 'axios'\n// const styles = {\n//   errorStyle: {\n//     color: \"red\",\n//     fontSize: 13,\n//     minHeight: \"15px\"\n//   }\n// };\nclass TechnicalAnalysis extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        scripsData: [],\n        scripsDataa:[],\n        scripName: \"\",\n        stockCode: \"\",\n        sector: \"\",\n        time: \"WEEKLY\",\n        techTarget: \"\",\n        enteryLevel: \"\",\n        stopLoss: \"\",\n        call: \"BUY\",\n        timePeriod: \"\",\n        openAddScrip: false,\n        selectedId: \"\",\n        observationId: 0,\n        openObservation: false,\n        notifiaction: false,\n        selectedScrip: \"\",\n        snackOpen: false,\n        snackText: \"\",\n        deleteOpen: false,\n        removeId: \"\",\n        changedFiels: {},\n        setNotification: false,\n        genericDialog: false,\n        message: \"\",\n        stockCodeErrorMsg: \"\",\n        sectorErrorMsg: \"\",\n        scripNameErrorMsg: \"\",\n        callErrorMsg: \"\",\n        timeErrorMsg: \"\",\n        presentErrorMsg: \"\",\n        enteryLevelErrorMsg: \"\",\n        techTargetErrorMsg: \"\",\n        dynamicDataLTP: [],\n        bellIconData:[],\n        changeData:[],\n        openSellExecution:false,\n        itemNumber:'',\n        investmentCount:0\n      };\n    }    \n  \n    componentDidMount() {\n      this.props.onClosedDialogHoldings();\n      this.props.onClosedDialog();\n      this.setState({ scripsData: this.props.holdingsData });\n      this.setState({ scripsDataa: this.props.data });\n      this.setState({ changeData: this.props.dynamicDataChange });\n   \n      this.changeColor();\n      \n    }\n    \n    componentDidUpdate(prevProps,prevState){\n      if(prevProps.holdingsData!=this.props.holdingsData){\n      this.setState({scripsData:this.props.holdingsData})\n      \n      }\n      \n       }\n  \n    changeColor = val => {\n      if (val > 0) {\n        return {\n          background: \"green\"\n        };\n      } else {\n        return {\n          background: \"red\"\n        };\n      }\n    };\n\n    openSellExecutions= (scripCode ,scripName,pPrice,sLoss,tTarget,itemNumber) => {        \n      this.setState({ openSellExecution: true, selectedId:scripName, selectedScripCode:scripCode,capturedPrice:pPrice,sLoss:sLoss,techTarget:tTarget,itemNumber:itemNumber});\n    } \n\n    closeSellExecutions = () => {\n      this.setState({ openSellExecution: false });    \n      this.props.onClosedDialog();\n    };\n\n    save=(iteNumber,scripCode,scripName,entryLevel,stopLoss,techTarget,soldDueTo)=>{\n    \n      const newStock = {\n        itemNumber:iteNumber,\n        quantity: 100, \n        timeline:'Sell',\n        remarks:'Sell the holdings..',\n        present:entryLevel,\n        stock_name:scripName,\n        stop_loss:stopLoss,\n        stock_code:scripCode, \n        tech_target:techTarget,\n        sold_due_to:soldDueTo,\n        }\n        register(newStock).then(res => { \n        \n        })\n        axios\n        .post('/updateOrderFlag/'+scripCode+'_'+iteNumber)        \n         axios\n        .get('/send_sell_message', {\n          headers: { \"Content-type\": \"application/json\" }\n         }) \n         this.props.onClosedDialog();\n      }\n\n \n      changeColor = val => {\n        if (val > 0) {\n          return {\n            background: \"green\",\n            textAlign:'center'\n          };\n        } else {\n          return {\n            background: \"red\",\n            textAlign:'center'\n          };\n        }\n      };\n\n      \n    render() {    \n    let ic=0,st=0,th=0,exp=0\n    {this.state.scripsData.map((scrip, inde) => (              \n     scrip.order?\n     scrip.order.length > 0?\n     Object.values(scrip.order).map((i,ind)=>{\n      if(scrip.order[ind].sold === true && scrip.order[ind].flag === true){\n       ic=ic+1;        \n      }\n      if(scrip.order[ind].soldDueTo==='Target Hit' && scrip.order[ind].sold === true && scrip.order[ind].flag === true){\n        th=th+1;\n      }\n      else if(scrip.order[ind].soldDueTo==='Stop Loss'  && scrip.order[ind].sold === true && scrip.order[ind].flag === true){\n        st=st+1;\n      }\n      else{\n        exp=exp+1;\n      }\n    })\n     :null\n     :null    \n    )\n    )}\n\n       \n      return (\n        <div className=\"TechnicalAnalysis-Main-Container\">\n           <NavigationBar {...this.props} {...this.state} scripsData={this.state.scripsDataa} /> \n         <table className='sucess'  cellspacing=\"0\">\n    <tr><td>Number Of Investments</td><td style={{fontWeight:'bold',fontSize: '35px',color:'#42516e'}}>{ic}</td>\n      <td>Number of Trades Hit Target</td><td  style={{fontWeight:'bold',fontSize: '35px',color:'#42516e'}}>{th}</td>\n    <td>Number of Trades Hit Stop Loss</td><td  style={{fontWeight:'bold',fontSize: '35px',color:'#42516e'}}>{st}</td><td>Sucess Ratio</td><td  style={{fontWeight:'bold',fontSize: '35px',color:'#42516e'}}>{((th/ic)*100).toFixed(2)}%</td>\n           </tr>\n         </table>\n          <div\n            style={{\n              flex: 1,\n              display: \"flex\",\n              overflow: \"scroll\"\n            }}\n          >\n            {this.state.scripsData.length > 0 ? (\n              <table style={{ width: \"100%\" }}>\n                <thead>\n                  <tr>\n                    <td  style={{left:0,position:'sticky',top:0,zIndex:1}}>Scrip Code</td>\n                    <td style={{left:100,position:'sticky',top:0,zIndex:1}}>Stock Name</td>\n                    <td style={{left:260,position:'sticky',top:0,zIndex:1}}>Sector</td>\n                    <td>Time</td>\n                    <td>Quantity</td>\n                    <td>But Date</td>   \n                    <td>Buy Price</td>\n                    <td>Sell Date</td>    \n                    <td>Sell Price</td>                          \n                    <td>Reliazed Profit/Loss</td>\n                \n                  </tr>\n                </thead>\n                {this.state.scripsData.map((scrip, inde) => (\n                \n                  <tbody key={inde}>\n                   {             \n                   \n                   scrip.order ?           \n                   \n                    scrip.order.length > 0 ?                    \n                    Object.values(scrip.order).map((i,ind)=>{\n                    if(scrip.order[ind].sold === true && scrip.order[ind].flag === true){\n                     \n                     return( <tr>\n                   \n                    <td style={{left:0,position:'sticky',top:0,zIndex:1,backgroundColor:'white'}}>               \n                     \n                    {scrip.scripCode}\n                   </td>  \n                    <td style={{left:100,position:'sticky',top:0,zIndex:1,backgroundColor:'white'}}>{scrip.scripName}</td>\n                    <td style={{left:260,position:'sticky',top:0,zIndex:1,backgroundColor:'white'}}>{scrip.sectorName}</td> \n                    <td>{scrip.timeline}</td>\n                    <td>{scrip.order[ind].quantity}</td>\n                    <td>{scrip.order[ind].buyDate.split('.')[0]}</td>\n                    <td>{scrip.order[ind].present}</td>\n                    <td>{scrip.order[ind].sellDate}</td>\n                    <td>{scrip.order[ind].sellPrice}</td>              \n                    <td\n                    id={\"tdresult\" + ind}\n                    style={this.changeColor(\n                      ((parseInt(scrip.order[ind].sellPrice) - parseInt(scrip.order[ind].present))/ parseInt(scrip.order[ind].present)*100).toFixed(2)\n                    )}\n                    \n                    \n                    >{((parseInt(scrip.order[ind].sellPrice) - parseInt(scrip.order[ind].present))/ parseInt(scrip.order[ind].present)*100).toFixed(2)}%</td> \n                      </tr>\n                     \n                      )\n                    }})\n                    \n                    :null\n                   \n                   : null } \n                    \n                   \n                  </tbody>\n                ))}\n              </table>\n            ) : (\n              <div\n                style={{\n                  flex: 1,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\"\n                }}\n              >\n                No Data Found\n              </div>\n            )}\n          </div>\n          \n          <SellDialogBox\n          open={this.state.openSellExecution}\n          onClose={this.closeSellExecutions}\n          {...this.state}      \n          showScripName={this.state.selectedId}\n          showScripCode={this.state.selectedScripCode}\n          presentPrice={this.state.capturedPrice}\n          stopLoss={this.state.sLoss}\n          techTarget={this.state.techTarget}\n          itemNumber={this.state.itemNumber}\n          \n          // addScrip={this.handleAddScrip}\n          // checkScrip={this.state.scripsData}\n          \n        />\n         \n         \n        </div>\n      );\n    }\n}\n\nexport default TechnicalAnalysis;\n","import React from \"react\";\nimport \"../../Assets/CSS/HomeStyles/HomeStyles.css\";\nimport UserInfoBar from \"./UserInfoBar/UserInfoBar\";\nimport Headerbar from \"./HeaderBar/HeaderBar\";\nimport Dashboard from \"./Dashboard/Dashboard\";\nimport FundamentalAnalysis from \"./Fundamental Analysis/FundamentalAnalysis\";\nimport TechnicalAnalysis from \"./TechnicalAnalysis/TechnicalAnalysis\";\nimport AnalysisSelector from \"./Analysis Selector/AnalysisSelector\";\nimport Timer from \"./Timer/Timer\";\nimport Holdings from \"./Holdings/Holdings\";\nimport Observation from \"./Observations/Observation\";\nimport Execution from \"./Executions/Executions\";\nimport SellExecution from \"./SellExecutions/SellExecutions\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport { getList, getObservationsList, getHoldingsList } from \"./ListFunctions\";\nimport ExecutionsList from \"../../Containers/Home/ExecutionsList/ExecutionsList\";\nimport ExecutionsSellList from \"../../Containers/Home/ExecutionsSellList/ExecutionsSellList\";\nimport TradeLogs from \"./TradeLogs/TradeLogs\";\nimport GTurnsPortfolio from \"./GTurnsPortfolio/GTurnsPortfolio\";\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFA: 0,\n      selectedTA: 0,\n      holdingsData:[],\n      data: [],\n      observationsData:[],    \n      dynamicDataLTP:[],\n      dynamicDataObservationsLTP:[],\n      dynamicDataChange:[],\n      dynamicDataObservationsChange:[],\n      bellIcon:[],\n      indiciesData:[],\n   \n    };\n  }\n  \n  componentDidMount() {\n    this.getAll();\n    this.getAllObservations();\n    this.getAllHoldings();\n    // var intervalID = setTimeout(this.updateTime, 1000);\n    this.timer = setInterval(\n      () => this.updateTime() ,\n      10000,\n  );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n}\n\nupdateTime = () => {\n   \n    var result;\n    var temp;\n    const url = \"_stuff\";\n    result = fetch(url, { mode: \"no-cors\" })\n      .then(function(response) {\n        temp = response.json();\n        return temp;\n      })\n      .then(val => {\n        this.setState({dynamicDataLTP: val['result']});\n        this.setState({dynamicDataChange:val['result1']});  \n        this.setState({bellIcon:val['result2']})      \n        }); \n      const url1 = \"_stuff1\";\n      result = fetch(url1, { mode: \"no-cors\" })\n      .then(function(response) {\n        temp = response.json();\n        return temp;\n      })\n      .then(val => {\n        this.setState({dynamicDataObservationsLTP: val['result']});\n        this.setState({dynamicDataObservationsChange:val['result1']});  \n        this.setState({indiciesData:val['result2']});  \n        this.getAllObservations();  \n        this.getAllHoldings();  \n     \n        });         \n      \n  };\n  getAll = () => {    \n    getList()\n      .then(data => {\n        \n        this.setState({\n          data: data\n        });\n      \n      })\n      .catch(err => {\n        console.log(err);\n      });\n      \n  };\n\n  getAllObservations = () => {\n      getObservationsList().then(data => {\n        this.setState({\n            observationsData: [...data]\n        })\n\n})\n.catch(err=>{\n  console.log(err)\n})\n}\n\ngetAllHoldings = () => {\n  getHoldingsList().then(data => {\n    this.setState({\n        holdingsData: [...data]\n    })\n\n})\n.catch(err=>{\nconsole.log(err)\n})\n}\n\n\n\n\n  handleSelectedAnlysis = event => {\n    if (event.target.value === \"FA\") {\n      this.setState({\n        selectedFA: 1,\n        selectedTA: 0,\n        holdings: 0\n      });\n      this.props.history.push(\"/FundamentalAnalysis\");\n    }\n    if (event.target.value === \"TA\") {\n      this.setState({\n        selectedFA: 0,\n        selectedTA: 1,\n        holdings: 0\n      });\n      this.props.history.push(\"/TechnicalAnalysis\");\n    }\n    if (event.target.value === \"HOLDINGS\") {\n      this.setState({\n        selectedFA: 0,\n        selectedTA: 0,\n        holdings: 1\n      });\n      this.props.history.push(\"/Holdings\");\n    }\n  };\n  \n  render() {\n   \n    return (\n      <div className=\"Home-Main-Container\">\n        <UserInfoBar {...this.props} />\n        {/* <SideBar {...this.props} /> */}\n        <div className=\"Home-Components-Container\">\n          \n          <Headerbar {...this.props} {...this.state}/>       \n          <AnalysisSelector\n            {...this.props}\n            {...this.state}\n            AnalysisSelection={this.handleSelectedAnlysis}\n          />       \n        \n          <div className=\"Home-Routes-Container\">\n            <Switch>\n              <Route\n                exact\n                path=\"/home\"\n                render={props => <Dashboard {...this.props} />}\n              ></Route>\n              <Route\n                path=\"/FundamentalAnalysis\"\n                render={props => <FundamentalAnalysis {...this.props} />}\n              ></Route>\n              <Route\n                path=\"/TechnicalAnalysis\"\n                render={props => (\n                  <TechnicalAnalysis {...this.props} {...this.state} onClosedDialog={this.getAll} onClosedObservationsDialog={this.getAllObservations}/>\n                )}\n              ></Route>\n              <Route\n                path=\"/Holdings\"\n                render={props => <Holdings {...this.props} {...this.state} onClosedDialogHoldings={this.getAllHoldings} onClosedDialog={this.getAll} onClosedObservationsDialog={this.getAllObservations}/>}\n              ></Route>\n              <Route\n                path=\"/Timer\"\n                render={props => <Timer {...this.props} />}\n              ></Route>\n              <Route\n                path=\"/Observation\"\n                render={props => <Observation {...this.props} {...this.state} onClosedObservationsDialog={this.getAllObservations}/>}\n              ></Route>\n              <Route\n                path=\"/Execution\"\n                render={props => <Execution {...this.props} {...this.state} onClosedDialog={this.getAll} onClosedObservationsDialog={this.getAllObservations}/>}\n              ></Route>\n              <Route\n                path=\"/ExecutionsList\"\n                render={props => <ExecutionsList {...this.props} {...this.state}  />}\n              ></Route>      \n             <Route\n                path=\"/SellExecution\"\n                render={props => <SellExecution {...this.props} {...this.state} onClosedDialog={this.getAll} onClosedObservationsDialog={this.getAllObservations}/>}\n              ></Route>\n               <Route\n                path=\"/ExecutionsSellList\"\n                render={props => <ExecutionsSellList {...this.props} {...this.state}  />}\n              ></Route>\n               <Route\n                path=\"/TradeLogs\"\n                render={props => <TradeLogs {...this.props} {...this.state} onClosedDialog={this.getAll} onClosedDialogHoldings={this.getAllHoldings}  onClosedObservationsDialog={this.getAllObservations}/>}\n              ></Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Home);\n","import React from \"react\";\r\nimport \"../../../Assets/CSS/AnalysisSelectorStyles/AnalysisSelector.css\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\n\r\nclass GTurnsPortfolio extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedFA: 0,\r\n      selectedTA: 0,\r\n      holdings: 0\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span>GTurns Portfolio</span>\r\n        <i className=\"material-icons\" style={{marginLeft:'5px'}}>\r\n            label_important\r\n         </i>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GTurnsPortfolio;\r\n","import React from \"react\";\n\nclass Holdings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div\n        className=\"Holdings-Main-Container\"\n        style={{\n          display: \"flex\",\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"column\"\n        }}\n      >\n        Welcome to Gturns\n        <button\n          onClick={() => {\n            this.props.history.push(\"/home\");\n          }}\n        >\n          Go to Home\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Holdings;\n","import React from \"react\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return <div>This is Login</div>;\n  }\n}\n\nexport default Login;\n","\r\nimport {combineReducers} from 'redux';\r\nimport * as actionTypes from './actions';\r\n\r\n\r\n\r\nconst initialState = {\r\n currentPrice:null,\r\n quantity:null,\r\n scripCode:null,\r\n scripName:null,\r\n itemNumber:null,\r\n sellQuantity:null,\r\n sellScripCode:null,\r\n sellScripName:null,\r\n}\r\n\r\nconst reducer = (state=initialState,action)=>{\r\nswitch(action.type){\r\n\r\ncase actionTypes.PRICE_UPDATE:\r\nreturn {\r\n      ...state,\r\n      currentPrice:action.payload,\r\n      quantity:action.payload1,\r\n      scripCode:action.payload2,\r\n      scripName:action.payload3\r\n\r\n};\r\ncase actionTypes.SELL_TRADE:\r\nreturn {\r\n      ...state,    \r\n      itemNumber:action.payload,\r\n      sellQuantity:action.payload1,\r\n      sellScripCode:action.payload2,\r\n      sellScripName:action.payload3\r\n\r\n};\r\n\r\ndefault:\r\nreturn state;\r\n\r\n}\r\n\r\n\r\n}\r\n\r\n\r\n\r\n export default combineReducers(\r\n     {\r\n         destroyOnUnmount:false,\r\n         reducer\r\n     }\r\n );\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./Containers/Home/Home\";\nimport Welcome from \"./Containers/Welcome/Welcome\";\nimport Login from \"./Containers/Login/Login\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport Reducer from \"./store/reducer\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n  render() {\n    const logger = store => {\n      return next => {\n        return action => {\n          // console.log(\"[MIDDLEWARE]:\", action);\n          const result = next(action);\n          // console.log(\"{MIDDLEWARE] next state\", store.getState());\n          return result;\n        };\n      };\n    };\n    const composeEnhancers =\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(\n      Reducer,\n      composeEnhancers(applyMiddleware(logger))\n    );\n    return (\n      <Provider store={store}>\n      <div className=\"App\">\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Welcome} {...this.props} />\n            <Route path=\"/login\" component={Login} {...this.props} />\n            <Route path=\"/home\" component={Home} {...this.props} />\n            <Route\n              path=\"/FundamentalAnalysis\"\n              component={Home}\n              {...this.props}\n            />\n            <Route path=\"/TechnicalAnalysis\" component={Home} {...this.props} />\n            <Route path=\"/Timer\" component={Home} {...this.props} />\n            <Route path=\"/Holdings\" component={Home} {...this.props} />\n            <Route path=\"/Observation\" component={Home} {...this.props} />\n            <Route path=\"/Execution\" component={Home} {...this.props} />\n            <Route path=\"/ExecutionsList\" component={Home} {...this.props} />\n            <Route path=\"/SellExecution\" component={Home} {...this.props} />\n            <Route path=\"/ExecutionsSellList\" component={Home} {...this.props} />\n            <Route path=\"/TradeLogs\" component={Home} {...this.props} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"/media/WhatsApp Audio 2019-11-12 at 9.22.30 PM.d6040c63.mpeg\";"],"sourceRoot":""}